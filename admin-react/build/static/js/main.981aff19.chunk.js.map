{"version":3,"sources":["components/AppLoading.tsx","services/ApiServices.ts","services/unAuthorizedService.ts","services/AuthorizedService.ts","helpers/authorizeHelper.ts","store/appSplice.ts","store/index.ts","store/hooks.ts","components/NavLinks.tsx","components/ProfileDropDown.tsx","components/Navbar.tsx","services/UserService.ts","helpers/userManagementHelper.ts","components/Loading.tsx","components/AdminPortal/UserDataTable.tsx","services/BlockCodeService.ts","helpers/BlockCodeManagementHelper.ts","helpers/useForm.ts","components/TagInput.tsx","components/AdminPortal/DataAccess.tsx","components/AdminPortal/UserEntryForm.tsx","components/AdminPortal/UserManagement.tsx","components/CModal.tsx","components/AdminPortal/BlockCodeEntryForm.tsx","components/AdminPortal/BlockCodeManagement.tsx","services/TaskService.ts","helpers/taskManagementHelper.ts","components/Progress.tsx","components/AdminPortal/CreateTask.tsx","components/AdminPortal/TasksTable.tsx","components/AdminPortal/TaskManagement.tsx","services/PaymentService.ts","helpers/paymentManagementHelper.ts","components/AdminPortal/CreatePayment.tsx","components/AdminPortal/PaymentTable.tsx","components/AdminPortal/PaymentManagement.tsx","components/AdminPortal/AdminPortalRoutes.tsx","components/AdminPortal/Reports.tsx","components/AdminPortal/AdminPortal.tsx","components/Authorize/VoteDisplayModal.tsx","helpers/useVoteReject.ts","components/Authorize/Authorize.tsx","helpers/dashboardHelper.ts","helpers/dataEntryHelper.ts","components/DataEntryForm.tsx","components/Dashboard/RejectedVotesModal.tsx","components/Dashboard/Dashboard.tsx","components/DataEntry/DataEntry.tsx","components/Login.tsx","components/Payments/PaymentsSummaryTable.tsx","components/Payments/PaymentSwitches.tsx","components/Payments/Payments.tsx","helpers/apphelper.ts","components/SignUp.tsx","components/Tasks/Tasks.tsx","helpers/votesHelper.ts","components/Votes/PaginatedTableFooter.tsx","components/Votes/VotesTable.tsx","components/Votes/VotesUpdateForm.tsx","components/Votes/Votes.tsx","components/InvalidRoute.tsx","components/ResetPassword.tsx","components/Profile.tsx","components/Routes.tsx","components/Message.tsx","App.tsx","index.tsx"],"names":["AppLoading","className","style","display","height","justifyContent","alignItems","flexDirection","role","ApiService","url","config","axios","createAxios","get","res","data","handleError","Promise","reject","body","post","put","delete","error","console","log","_axios","create","baseURL","process","headers","Authorization","localStorage","getItem","UnAuthorizedService","baseUrl","newUnAuthorizedData","rejectedVoteData","id","rejections","AuthorizedService","pageNo","voteLimit","searchField","search","reqData","district","city","tehseel","constituency","unionCouncil","constituencyName","blockCode","phase","sector","street","gender","lane","boulevardAvenue","updateNo","newAuthorizedData","UnAuthorized","deleteRecord","_id","updatedAuthorizedVoteData","voteRejectInitial","moza","dehya","patwarHalka","tapaydar","talka","bookNo","voteSNo","familyNo","name","maritalStatus","fatherHusbandName","cnic","age","houseNo","otherArea","handleClose","dispatch","history","setNavLinkActive","push","document","title","handleDelete","a","success","setMessageVariant","getUnAuthorizedList","setMessage","message","readOnly","WebkitUserSelect","MozUserSelect","msUserSelect","userSelect","getUnAuthorized","rejected","filter","x","status","pending","setUnauthorizedRejectedVotes","setUnauthorizedData","approveVote","vote","addNewAuthorizedVote","rejectVote","initialState","navLinkActive","currentUser","dashboardData","withdrawalAmount","approved","unauthorizedData","unauthorizedRejectedVotes","pendingUnauthorizedData","rejectedVotes","dataVoteReject","currentRejectedVote","blockCodes","filteredBlockCodeHeadings","defaultBlockCodeData","tasks","filteredTaskHeadings","payments","filteredPaymentHeadings","isLoggedIn","isSignUpFormDisplay","isLogInFormDisplay","isAccessDeniedDisplay","messageVariant","appSlice","createSlice","reducers","state","action","payload","setCurrentUser","setDashboardData","setPendingUnauthorizedData","setRejectedVotes","setDataVoteReject","setDataVoteRejectToUnauthorizedDataIndex","setCurrentRejectedVote","setBlockCodes","setFilteredBlockCodeHeadings","setDefaultBlockCodeData","setTasks","setFilteredTaskHeadings","setPayments","setFilteredPaymentHeadings","setIsLoggedIn","setIsSignUpFormDisplay","setIsLogInFormDisplay","setIsAccessDeniedDisplay","setError","store","configureStore","reducer","app","actions","useAppDispatch","useDispatch","useAppSelector","useSelector","NavLinks","to","onClick","ProfileDropDown","useHistory","handleLogoutOpenLogInForm","type","username","width","left","viewBox","fill","d","src","alt","Navbar","href","xmlns","delay","duration","end","UserService","registerUser","loginUser","email","userData","userId","accessData","defaultBlockCode","passwordData","headings","userEntryFormInitial","mobileNo","rate","assignedBlockCodes","getUsers","setUsers","setLoading","allUsers","Loading","variant","UserDataTable","users","setUpdateUserData","userEntryForm","setUserEntryForm","map","heading","index","scope","user","prevV","BlockCodeService","blockCodeNumber","blockCodeData","blockCodeFormInitial","getBlockCodes","setIsBlockCodeData","resHeadings","Object","keys","sentenceCaseHeadings","unshift","forEach","result","replace","charAt","toUpperCase","slice","useForm","callback","useState","setData","onChange","event","target","value","onSubmit","preventDefault","TagInput","tags","setTags","placeholder","tagData","setTagData","useEffect","tag","indexToRemove","newtags","_","removeTagData","list","onKeyUp","key","addTagData","DataAccess","setDataAccess","lastAccessParameter","setLastAccessParameter","loading","isFullAccess","setIsFullAccess","resData","setResData","undefined","lastAccessParameterIndex","setLastAccessParameterIndex","dataAccessFormInitial","accessParametersArr","getUniqueData","field","eName","getUniqueAuthorizedDataSearch","nextFieldNameIndex","indexOf","fieldName","nextFieldDistinctData","item","self","onAccessParameterChange","eValue","newData","updatedUserDataAccess","fullAccess","Form","prev","Group","Label","Select","e","required","disabled","selected","hidden","option","UserEntryForm","updateUserData","dataAccess","updateUser","Card","Body","Alert","Control","entries","toString","Button","UserManagement","memo","CModal","externalButton","unauthorizedVote","showModalProp","triggerButtonContent","triggerButtonVariant","btnClasses","show","setShow","Modal","onHide","Header","closeButton","Title","Footer","BlockCodeEntryForm","updateBlockCodeData","setBlockCodeEntryForm","postBlockCode","updateBlockCode","BlockCodeManagement","isBlockCodeData","blockCodeEntryForm","setUpdateBlockCodeData","deleteBlockCode","Container","minWidth","TaskService","taskId","taskData","fileName","taskFormInitial","description","getAllTasks","getTaskFile","window","location","assign","path","Progress","percentage","CreateTask","updateTaskData","setTaskEntryForm","taskEntryForm","file","setFile","uploadPercentage","setUploadPercentage","fileInputRef","useRef","formData","FormData","append","onUploadProgress","progressEvent","Math","round","loaded","total","resCreate","resUpdate","setTimeout","current","as","rows","ref","files","TasksTable","setUpdateTaskData","deleteTask","task","TaskManagement","getAllUsers","PaymentService","paymentId","paymentData","paymentFormInitial","amount","paymentFormReset","getAllPayments","getPaymentFile","CreatePayment","updatePaymentData","setPaymentEntryForm","paymentEntryForm","estimatedWithdrawalAmount","setEstimatedWithdrawalAmount","isWithdrawalAmountVisible","setIsWithdrawalAmountVisible","getElementById","scrollIntoView","getCurrentUserData","getUserDataByEmail","PaymentTable","currentUserPayments","setUpdatePaymentData","paymentsHeadings","getCurrentUserPaymentHeadings","paymentsData","deletePayment","borderBottom","payment","Error","filePath","AdminPortalRoutes","setUserManagement","setBlockCodeManagement","setTaskManagement","setPaymentManagement","setReports","Reports","formOptionsMock","AdminPortal","userManagement","blockCodeManagement","taskManagement","paymentManagement","reports","PaymentManagement","VoteDisplayModal","setIndex","unauthorizedVotesLength","setShowModalProp","onChangeVoteReject","useVoteReject","fullscreen","enteredBy","prevValue","Authorize","unAuthorizedVoteIndex","setUnauthorizedVoteIndex","unAuthorizedVote","setUnauthorizedVote","length","getUserProgressData","source","cancelToken","token","dataEntryFormInitial","getRejectedVotes","unAuthorizedService","submitVote","addNewUnauthorizedData","getDefaultBlockCodeData","getBlockCodeByNumber","onBlockCodeSelect","setDefaultBlockCode","submitNewVote","updateRejectedVote","DataEntryForm","forRejectedVotes","setRejectedVoteIndex","setRejectedVoteModal","CancelToken","cancel","mask","RejectedVotesModal","rejectedVoteModal","rejectedVoteIndex","Dashboard","accuracy","floor","DataEntry","Login","emailRef","passwordRef","password","setItem","access_token","minHeight","maxWidth","PaymentsSummaryTable","totalEarnings","totalEarningsRecieved","totalWithdrawableAmount","PaymentSwitches","setArePaymentsHidden","arePaymentsHidden","setIsGridView","isGridView","Payments","setTotalEarningsRecieved","setTotalWithdrawableAmount","calcEarnings","paymentsRecieved","amountsRecieved","reduce","accumulator","currentValue","getPayments","getCurrentUserPayments","signUp","userNameRef","mobileNoRef","passwordConfirmRef","auth","confirmPassword","catch","err","authRes","uid","emailExists","details","invalidEmail","invalidPassword","SignUp","handleSubmit","Tasks","getTasks","getCurrentUserTasks","voteResInitial","next","page","limit","totalPages","totalRecords","createFilteredVotesHeadings","setFilteredVotesHeadings","setSearchOptions","getAuthorizedVotesPage","setVotesData","setVoteRes","getAuthorizedPage","results","previous","getSearchedAuthorizedVotes","searchTerm","getAuthorizedSearch","PaginatedTableFooter","currentPageTemp","setCurrentPageTemp","voteRes","currentPage","setCurrentPage","votesLimit","currentSearchField","VotesTable","setVoteUpdateData","setVoteUpdateForm","voteUpdateForm","searchOptions","setCurrentSearchField","setSearchTerm","votesData","filteredVotesHeadings","deleteAuthorizedVote","deleteAuthorizedRecord","onVotesSearch","VotesUpdateForm","voteUpdateData","updateAuthorizedVote","Votes","InvalidRoute","ResetPassword","setResetPasswordForm","resetPasswordFormInitial","oldPassword","newPassword","resetPassword","Profile","profileUpdateFormInitial","resetPasswordForm","profileUpdateForm","setProfileUpdateForm","updateProfile","Routes","exact","pathname","Message","props","msg","others","App","ReactDOM","render"],"mappings":"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,EACAC,EACAc,EACAT,EACA,EACAQ,EACA1V,IAEHkV,GACCP,GACExc,EACAyc,EACAC,EACA,EACAa,EACA1V,GAEJyV,EAAe,GACfH,EAAmB,IAzBvB,gBA+BDE,EAAc,GACb,wBACEviB,UAAU,4BACV4K,QAAS,WACPmC,GAAW,GACXkV,GACED,GACE9c,EACAyc,EACAC,EACAc,EACAT,EACAM,EAAc,EACdE,EACA1V,IAEHkV,GACCP,GACExc,EACAyc,EACAC,EACAW,EAAc,EACdE,EACA1V,GAEJyV,GAAe,SAAC1G,GAEd,OADAuG,EAAmBvG,EAAY,GACxBA,EAAY,MA1BzB,mBAiCF,uBACE9b,UAAU,yBACVC,MAAO,CAAEiL,MAAO,QAChBF,KAAK,SACLsE,MAAO8S,EACPjT,SAAU,SAACwD,GAAD,OAAY0P,EAAmB1P,EAAEtD,OAAOC,QAClDgB,QAAS,SAAClB,GACU,UAAdA,EAAMmB,MACRxD,GAAW,GACXkV,GACED,GACE9c,EACAyc,EACAC,EACAc,EACAT,EACAG,EACAK,EACA1V,IAEHkV,GACCP,GACExc,EACAyc,EACAC,EACAQ,EACAK,EACA1V,GAEJyV,EAAeJ,OAIpBG,EAAcD,EAAQjB,YACrB,wBACErhB,UAAU,4BACV4K,QAAS,WACPmC,GAAW,GACXkV,GACED,GACE9c,EACAyc,EACAC,EACAc,EACAT,EACAM,EAAc,EACdE,EACA1V,IAEHkV,GACCP,GACExc,EACAyc,EACAC,EACAW,EAAc,EACdE,EACA1V,GAEJyV,GAAe,SAAC1G,GAEd,OADAuG,EAAmBvG,EAAY,GACxBA,EAAY,MA1BzB,mBAiCDyG,EAAcD,EAAQjB,WAAa,GAClC,wBACErhB,UAAU,4BACV4K,QAAS,WACPmC,GAAW,GACXkV,GACED,GACE9c,EACAyc,EACAC,EACAc,EACAT,EACAK,EAAQjB,WACRoB,EACA1V,IAEHkV,GACCP,GACExc,EACAyc,EACAC,EACAU,EAAQjB,WACRoB,EACA1V,GAEJyV,EAAeF,EAAQjB,YACvBgB,EAAmBC,EAAQjB,aAzB/B,mBAgCHiB,GACC,gCACE,uBAAMti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","file":"static/js/main.981aff19.chunk.js","sourcesContent":["const AppLoading = () => {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"text-center\"\r\n        style={{\r\n          display: \"flex\",\r\n          height: \"100vh\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <h2 className=\"mb-4 ms-2 text-primary\">‎Voter List App</h2>\r\n        <div className=\"spinner-border text-primary\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n        <h5 className=\"mt-4 ms-2 text-primary\">Loading...</h5>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppLoading;\r\n","import _axios from \"axios\";\r\n\r\nexport class ApiService {\r\n  static createAxios = () => {\r\n    return _axios.create({\r\n      baseURL:\r\n        process.env.REACT_APP_API_IS_DEV === \"true\"\r\n          ? process.env.REACT_APP_API_BASE_URL_DEV\r\n          : process.env.REACT_APP_API_BASE_URL_STAGING,\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        \"x-api-key\": \"SG.cpdcjwepcjio\",\r\n      },\r\n    });\r\n  };\r\n\r\n  static async get(url: string, config?: any): Promise<any> {\r\n    const axios = ApiService.createAxios();\r\n    try {\r\n      const res = await axios.get(url, config);\r\n      if (res) {\r\n        return res.data;\r\n      }\r\n    } catch (error) {\r\n      ApiService.handleError(error);\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n\r\n  static async post(url: string, body?: object, config?: any): Promise<any> {\r\n    const axios = ApiService.createAxios();\r\n    try {\r\n      const res = await axios.post(url, body, config);\r\n      if (res) {\r\n        return res.data;\r\n      }\r\n    } catch (error) {\r\n      ApiService.handleError(error);\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n\r\n  static async put(url: string, body: object, config?: any): Promise<any> {\r\n    const axios = ApiService.createAxios();\r\n    try {\r\n      const res = await axios.put(url, body, config);\r\n      if (res) {\r\n        return res.data;\r\n      }\r\n    } catch (error) {\r\n      ApiService.handleError(error);\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n\r\n  static async delete(url: string, config?: any): Promise<any> {\r\n    const axios = ApiService.createAxios();\r\n    try {\r\n      const res = await axios.delete(url, config);\r\n      if (res) {\r\n        return res.data;\r\n      }\r\n    } catch (error) {\r\n      ApiService.handleError(error);\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n\r\n  private static handleError(error: any) {\r\n    console.log(error);\r\n  }\r\n}\r\n","import { VoteRejection } from '../interfaces/VoteRejection';\r\nimport { ApiService } from './ApiServices';\r\nimport UnAuthorizedModel from './UnAuthorizedModel';\r\n\r\nexport default class UnAuthorizedService {\r\n  static baseUrl = ['unauthorized'];\r\n  static async getUnAuthorized() {\r\n    const data = await ApiService.get(UnAuthorizedService.baseUrl[0]);\r\n    return data.data;\r\n  }\r\n  static async getRejectedVotes() {\r\n    const res = await ApiService.get(\r\n      `${UnAuthorizedService.baseUrl[0]}/rejectedVotes`,\r\n    );\r\n    return res.data;\r\n  }\r\n  static async addNewUnauthorizedData(newUnAuthorizedData: UnAuthorizedModel) {\r\n    const res = await ApiService.post(\r\n      UnAuthorizedService.baseUrl[0],\r\n      newUnAuthorizedData,\r\n    );\r\n    return res;\r\n  }\r\n  static async updateRejectedVote(rejectedVoteData: UnAuthorizedModel) {\r\n    const data = await ApiService.put(\r\n      `${UnAuthorizedService.baseUrl[0]}/updateRejectedVote`,\r\n      rejectedVoteData,\r\n    );\r\n    return data;\r\n  }\r\n  static async deleteRecord(id: string) {\r\n    const res = await ApiService.delete(\r\n      `${UnAuthorizedService.baseUrl[0]}/${id}`,\r\n    );\r\n    return res;\r\n  }\r\n  static async getUnAuthorizedDataById(id: string) {\r\n    const data = await ApiService.get(\r\n      `${UnAuthorizedService.baseUrl[0]}/${id}`,\r\n    );\r\n    return data.data;\r\n  }\r\n  static async rejectVote(id: string, rejections?: VoteRejection) {\r\n    const data = await ApiService.put(\r\n      `${UnAuthorizedService.baseUrl[0]}/rejectVote`,\r\n      { id, rejections },\r\n    );\r\n    return data;\r\n  }\r\n}\r\n","import { DataAccessParamsModel } from './../components/AdminPortal/DataAccess';\r\nimport { VotesModel } from '../interfaces/VotesModel';\r\nimport { ApiService } from './ApiServices';\r\nimport UnAuthorizedModel from './UnAuthorizedModel';\r\nimport UnAuthorized from './unAuthorizedService';\r\n\r\nexport default class AuthorizedService {\r\n  static baseUrl = ['authorized'];\r\n  static async getAuthorized() {\r\n    const res = await ApiService.get(AuthorizedService.baseUrl[0]);\r\n    return res;\r\n  }\r\n  static async getAuthorizedPage(\r\n    pageNo: number,\r\n    voteLimit: number,\r\n    config?: any,\r\n  ) {\r\n    try {\r\n      const res = await ApiService.get(\r\n        `${AuthorizedService.baseUrl[0]}/page?page=${pageNo}&limit=${voteLimit}`,\r\n        { ...config },\r\n      );\r\n      return res;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  static async getAuthorizedSearch(\r\n    searchField: string,\r\n    search: string | number,\r\n    pageNo: number,\r\n    voteLimit: number,\r\n  ) {\r\n    const res = await ApiService.get(\r\n      `${AuthorizedService.baseUrl[0]}/search?search=${search}&searchField=${searchField}&page=${pageNo}&limit=${voteLimit}`,\r\n    );\r\n    return res;\r\n  }\r\n  static async getUniqueAuthorizedDataSearch(reqData: DataAccessParamsModel) {\r\n    const res = await ApiService.get(\r\n      `${AuthorizedService.baseUrl[0]}/unique?district=${reqData.district}\r\n        &city=${reqData.city}\r\n        &tehseel=${reqData.tehseel}\r\n        &constituency=${reqData.constituency}\r\n        &unionCouncil=${reqData.unionCouncil}\r\n        &constituencyName=${reqData.constituencyName}\r\n        &blockCode=${reqData.blockCode === null ? '' : reqData.blockCode}\r\n        &phase=${reqData.phase}\r\n        &sector=${reqData.sector}\r\n        &street=${reqData.street}\r\n        &gender=${reqData.gender}\r\n        &lane=${reqData.lane}\r\n        &boulevardAvenue=${reqData.boulevardAvenue}\r\n        &updateNo=${reqData.updateNo}\r\n        `,\r\n    );\r\n    return res;\r\n  }\r\n  static async addNewAuthorizedVote(newAuthorizedData: UnAuthorizedModel) {\r\n    const data = await ApiService.post(\r\n      AuthorizedService.baseUrl[0],\r\n      newAuthorizedData,\r\n    );\r\n    if (data.data) {\r\n      await UnAuthorized.deleteRecord(newAuthorizedData._id!);\r\n    }\r\n    return data;\r\n  }\r\n  static async updateAuthorizedVote(updatedAuthorizedVoteData: VotesModel) {\r\n    const data = await ApiService.post(\r\n      `${AuthorizedService.baseUrl[0]}/update`,\r\n      updatedAuthorizedVoteData,\r\n    );\r\n    return data;\r\n  }\r\n\r\n  static async deleteAuthorizedRecord(id: string) {\r\n    const res = await ApiService.delete(\r\n      `${AuthorizedService.baseUrl[0]}/${id}`,\r\n    );\r\n    return res;\r\n  }\r\n}\r\n","import { Dispatch } from 'react';\r\nimport {\r\n  setMessage,\r\n  setMessageVariant,\r\n  setNavLinkActive,\r\n  setUnauthorizedData,\r\n  setUnauthorizedRejectedVotes,\r\n} from '../store';\r\nimport UnAuthorizedService from '../services/unAuthorizedService';\r\nimport UnAuthorizedModel from '../services/UnAuthorizedModel';\r\nimport { VoteRejection } from '../interfaces/VoteRejection';\r\nimport AuthorizedService from '../services/AuthorizedService';\r\n\r\nexport const voteRejectInitial: VoteRejection = {\r\n  blockCode: false,\r\n  constituencyName: false,\r\n  moza: false,\r\n  dehya: false,\r\n  city: false,\r\n  patwarHalka: false,\r\n  tapaydar: false,\r\n  tehseel: false,\r\n  talka: false,\r\n  district: false,\r\n  unionCouncil: false,\r\n  bookNo: false,\r\n  constituency: false,\r\n  gender: false,\r\n  voteSNo: false,\r\n  familyNo: false,\r\n  name: false,\r\n  maritalStatus: false,\r\n  fatherHusbandName: false,\r\n  cnic: false,\r\n  age: false,\r\n  houseNo: false,\r\n  street: false,\r\n  phase: false,\r\n  sector: false,\r\n  lane: false,\r\n  boulevardAvenue: false,\r\n  otherArea: false,\r\n  updateNo: false,\r\n};\r\n\r\nexport const handleClose = (\r\n  dispatch: Dispatch<{ payload: any; type: string }>,\r\n  history: any,\r\n) => {\r\n  dispatch(setNavLinkActive(0));\r\n  history.push('/');\r\n  document.title = 'Dashboard - Voter List App';\r\n};\r\nexport const handleDelete = async (\r\n  id: string,\r\n  dispatch: Dispatch<{ payload: any; type: string }>,\r\n) => {\r\n  const res = await UnAuthorizedService.deleteRecord(id);\r\n\r\n  if (res && res.success) {\r\n    dispatch(setMessageVariant('info'));\r\n    getUnAuthorizedList(dispatch);\r\n  } else {\r\n    dispatch(setMessageVariant('danger'));\r\n  }\r\n  res && dispatch(setMessage(res.message));\r\n};\r\nexport const readOnly: any = {\r\n  WebkitUserSelect: 'none',\r\n  MozUserSelect: 'none',\r\n  msUserSelect: 'none',\r\n  userSelect: 'none',\r\n};\r\n\r\nexport const getUnAuthorizedList = async (\r\n  dispatch: Dispatch<{ payload: any; type: string }>,\r\n) => {\r\n  const res = await UnAuthorizedService.getUnAuthorized();\r\n  const rejected = res.filter((x: any) => x.status === 'rejected');\r\n  const pending = res.filter((x: any) => x.status === 'pending');\r\n\r\n  dispatch(setUnauthorizedRejectedVotes(rejected));\r\n  dispatch(setUnauthorizedData(pending));\r\n};\r\n\r\nexport const approveVote = async (vote: UnAuthorizedModel) => {\r\n  const res = await AuthorizedService.addNewAuthorizedVote(vote);\r\n  return res.success;\r\n};\r\nexport const rejectVote = async (id: string, rejections?: VoteRejection) => {\r\n  const res = await UnAuthorizedService.rejectVote(id, rejections);\r\n  return res.success;\r\n};\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { voteRejectInitial } from '../helpers/authorizeHelper';\r\nimport { BlockCode } from '../interfaces/BlockCode';\r\nimport { Payment } from '../interfaces/PaymentModel';\r\nimport { Task } from '../interfaces/TaskModel';\r\nimport { User } from '../interfaces/User';\r\nimport UnAuthorizedModel from '../services/UnAuthorizedModel';\r\n\r\nexport interface StoreInitialState {\r\n  navLinkActive: number;\r\n  currentUser: User | null;\r\n  dashboardData: {\r\n    withdrawalAmount: number;\r\n    pending: number;\r\n    rejected: number;\r\n    approved: number;\r\n  };\r\n  unauthorizedData: UnAuthorizedModel[];\r\n  unauthorizedRejectedVotes: UnAuthorizedModel[];\r\n  pendingUnauthorizedData: UnAuthorizedModel[];\r\n  rejectedVotes: UnAuthorizedModel[];\r\n  dataVoteReject: any;\r\n  currentRejectedVote: UnAuthorizedModel | null;\r\n  blockCodes: BlockCode[];\r\n  filteredBlockCodeHeadings: string[];\r\n  defaultBlockCodeData: BlockCode | null;\r\n  tasks: Task[];\r\n  filteredTaskHeadings: string[];\r\n  payments: Payment[];\r\n  filteredPaymentHeadings: string[];\r\n  isLoggedIn: boolean;\r\n  isSignUpFormDisplay: boolean;\r\n  isLogInFormDisplay: boolean;\r\n  isAccessDeniedDisplay: boolean;\r\n  error: string;\r\n  message: string;\r\n  messageVariant:\r\n    | 'primary'\r\n    | 'secondary'\r\n    | 'success'\r\n    | 'danger'\r\n    | 'warning'\r\n    | 'info'\r\n    | 'light'\r\n    | 'dark';\r\n}\r\n\r\nconst initialState: StoreInitialState = {\r\n  navLinkActive: 0,\r\n  currentUser: null,\r\n  dashboardData: { withdrawalAmount: 0, rejected: 0, pending: 0, approved: 0 },\r\n  unauthorizedData: [],\r\n  unauthorizedRejectedVotes: [],\r\n  pendingUnauthorizedData: [],\r\n  rejectedVotes: [],\r\n  dataVoteReject: voteRejectInitial,\r\n  currentRejectedVote: null,\r\n  blockCodes: [],\r\n  filteredBlockCodeHeadings: [],\r\n  defaultBlockCodeData: null,\r\n  tasks: [],\r\n  filteredTaskHeadings: [],\r\n  payments: [],\r\n  filteredPaymentHeadings: [],\r\n  isLoggedIn: false,\r\n  isSignUpFormDisplay: false,\r\n  isLogInFormDisplay: true,\r\n  isAccessDeniedDisplay: false,\r\n  error: '',\r\n  message: '',\r\n  messageVariant: 'info',\r\n};\r\n\r\nexport const appSlice = createSlice({\r\n  name: 'app',\r\n  initialState,\r\n  reducers: {\r\n    setNavLinkActive(state, action: PayloadAction<any>) {\r\n      state.navLinkActive = action.payload;\r\n    },\r\n    setCurrentUser(state, action: PayloadAction<any>) {\r\n      state.currentUser = action.payload;\r\n    },\r\n    setDashboardData(state, action: PayloadAction<any>) {\r\n      state.dashboardData = action.payload;\r\n    },\r\n    setUnauthorizedData(state, action: PayloadAction<any>) {\r\n      state.unauthorizedData = action.payload;\r\n    },\r\n    setUnauthorizedRejectedVotes(state, action: PayloadAction<any>) {\r\n      state.unauthorizedRejectedVotes = action.payload;\r\n    },\r\n    setPendingUnauthorizedData(state, action: PayloadAction<any>) {\r\n      state.pendingUnauthorizedData = action.payload;\r\n    },\r\n    setRejectedVotes(state, action: PayloadAction<any>) {\r\n      state.rejectedVotes = action.payload;\r\n    },\r\n    setDataVoteReject(state, action: PayloadAction<any>) {\r\n      state.dataVoteReject = action.payload;\r\n    },\r\n    setDataVoteRejectToUnauthorizedDataIndex(\r\n      state,\r\n      action: PayloadAction<any>,\r\n    ) {\r\n      if (state.unauthorizedData[action.payload]) {\r\n        state.dataVoteReject = {\r\n          ...state.dataVoteReject,\r\n          ...state.unauthorizedData[action.payload].rejections,\r\n        };\r\n      }\r\n    },\r\n    setCurrentRejectedVote(state, action: PayloadAction<any>) {\r\n      state.currentRejectedVote = action.payload;\r\n    },\r\n    setBlockCodes(state, action: PayloadAction<any>) {\r\n      state.blockCodes = action.payload;\r\n    },\r\n    setFilteredBlockCodeHeadings(state, action: PayloadAction<any>) {\r\n      state.filteredBlockCodeHeadings = action.payload;\r\n    },\r\n    setDefaultBlockCodeData(state, action: PayloadAction<any>) {\r\n      state.defaultBlockCodeData = action.payload;\r\n    },\r\n    setTasks(state, action: PayloadAction<any>) {\r\n      state.tasks = action.payload;\r\n    },\r\n    setFilteredTaskHeadings(state, action: PayloadAction<any>) {\r\n      state.filteredTaskHeadings = action.payload;\r\n    },\r\n    setPayments(state, action: PayloadAction<any>) {\r\n      state.payments = action.payload;\r\n    },\r\n    setFilteredPaymentHeadings(state, action: PayloadAction<any>) {\r\n      state.filteredPaymentHeadings = action.payload;\r\n    },\r\n    setIsLoggedIn(state, action: PayloadAction<any>) {\r\n      state.isLoggedIn = action.payload;\r\n    },\r\n    setIsSignUpFormDisplay(state, action: PayloadAction<any>) {\r\n      state.isSignUpFormDisplay = action.payload;\r\n    },\r\n    setIsLogInFormDisplay(state, action: PayloadAction<any>) {\r\n      state.isLogInFormDisplay = action.payload;\r\n    },\r\n    setIsAccessDeniedDisplay(state, action: PayloadAction<any>) {\r\n      state.isAccessDeniedDisplay = action.payload;\r\n    },\r\n    setError(state, action: PayloadAction<any>) {\r\n      state.error = action.payload;\r\n    },\r\n    setMessage(state, action: PayloadAction<any>) {\r\n      state.message = action.payload;\r\n    },\r\n    setMessageVariant(state, action: PayloadAction<any>) {\r\n      state.messageVariant = action.payload;\r\n    },\r\n  },\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { appSlice, StoreInitialState } from \"./appSplice\";\r\nexport const store = configureStore({\r\n  reducer: {\r\n    app: appSlice.reducer,\r\n  },\r\n});\r\n\r\nexport const {\r\n  setNavLinkActive,\r\n  setCurrentUser,\r\n  setDashboardData,\r\n  setUnauthorizedData,\r\n  setUnauthorizedRejectedVotes,\r\n  setPendingUnauthorizedData,\r\n  setRejectedVotes,\r\n  setDataVoteReject,\r\n  setDataVoteRejectToUnauthorizedDataIndex,\r\n  setCurrentRejectedVote,\r\n  setBlockCodes,\r\n  setFilteredBlockCodeHeadings,\r\n  setDefaultBlockCodeData,\r\n  setTasks,\r\n  setFilteredTaskHeadings,\r\n  setPayments,\r\n  setFilteredPaymentHeadings,\r\n  setIsLoggedIn,\r\n  setIsLogInFormDisplay,\r\n  setIsSignUpFormDisplay,\r\n  setIsAccessDeniedDisplay,\r\n  setError,\r\n  setMessage,\r\n  setMessageVariant,\r\n} = appSlice.actions;\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport interface StoreState {\r\n  app: StoreInitialState\r\n}","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport type { RootState, AppDispatch } from \"./index\";\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { Link } from \"react-router-dom\";\r\nimport { setNavLinkActive } from \"../store\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\r\nimport { StoreState } from \"./../store/index\";\r\n\r\nconst NavLinks = () => {\r\n  // const [active, setActive] = useState(0);\r\n  const navLinkActive = useAppSelector(\r\n    (state: StoreState) => state.app.navLinkActive\r\n  );\r\n  const currentUser = useAppSelector(\r\n    (state: StoreState) => state.app.currentUser\r\n  );\r\n  const dispatch = useAppDispatch();\r\n  return (\r\n    <>\r\n      <div>\r\n        <ul className=\"nav nav-tabs\">\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className={`nav-link btn ${navLinkActive === 0 ? \"active\" : \"\"}`}\r\n              aria-current=\"page\"\r\n              to=\"/\"\r\n              onClick={() => {\r\n                dispatch(setNavLinkActive(0));\r\n                document.title = \"Dashboard - Voter List App\";\r\n              }}\r\n            >\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n          {currentUser &&\r\n            (currentUser.role === \"admin\" ||\r\n              currentUser.role === \"dataEntry\") && (\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className={`nav-link btn ${\r\n                    navLinkActive === 1 ? \"active\" : \"\"\r\n                  }`}\r\n                  to=\"/dataEntry\"\r\n                  onClick={() => {\r\n                    dispatch(setNavLinkActive(1));\r\n                    document.title = \"Data Entry - Voter List App\";\r\n                  }}\r\n                >\r\n                  Data Entry\r\n                </Link>\r\n              </li>\r\n            )}\r\n          {currentUser &&\r\n            (currentUser.role === \"admin\" ||\r\n              currentUser.role === \"dataEntry\") && (\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className={`nav-link btn ${\r\n                    navLinkActive === 2 ? \"active\" : \"\"\r\n                  }`}\r\n                  to=\"/tasks\"\r\n                  onClick={() => {\r\n                    dispatch(setNavLinkActive(2));\r\n                    document.title = \"Tasks - Voter List App\";\r\n                  }}\r\n                >\r\n                  Tasks\r\n                </Link>\r\n              </li>\r\n            )}\r\n          {currentUser &&\r\n            (currentUser.role === \"admin\" ||\r\n              currentUser.role === \"dataEntry\") && (\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className={`nav-link btn ${\r\n                    navLinkActive === 3 ? \"active\" : \"\"\r\n                  }`}\r\n                  to=\"/payments\"\r\n                  onClick={() => {\r\n                    dispatch(setNavLinkActive(3));\r\n                    document.title = \"Payments - Voter List App\";\r\n                  }}\r\n                >\r\n                  Payments\r\n                </Link>\r\n              </li>\r\n            )}\r\n          {currentUser && currentUser.role === \"admin\" && (\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                className={`nav-link btn ${\r\n                  navLinkActive === 4 ? \"active\" : \"\"\r\n                }`}\r\n                to=\"/votes\"\r\n                onClick={() => {\r\n                  dispatch(setNavLinkActive(4));\r\n                  document.title = \"Votes - Voter List App\";\r\n                }}\r\n              >\r\n                Votes\r\n              </Link>\r\n            </li>\r\n          )}\r\n          {currentUser && currentUser.role === \"admin\" && (\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                className={`nav-link btn ${\r\n                  navLinkActive === 5 ? \"active\" : \"\"\r\n                }`}\r\n                to=\"/authorize\"\r\n                onClick={() => {\r\n                  dispatch(setNavLinkActive(5));\r\n                  document.title = \"Autorize - Voter List App\";\r\n                }}\r\n              >\r\n                Authorize\r\n              </Link>\r\n            </li>\r\n          )}\r\n          {currentUser && currentUser.role === \"admin\" && (\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                className={`nav-link btn ${\r\n                  navLinkActive === 6 ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => {\r\n                  dispatch(setNavLinkActive(6));\r\n                  document.title = \"Admin Portal - Voter List App\";\r\n                }}\r\n                to=\"/adminPortal\"\r\n              >\r\n                Admin Portal\r\n              </Link>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { setCurrentUser, setIsLogInFormDisplay } from '../store';\r\nimport { useAppSelector } from '../store/hooks';\r\nimport { StoreState } from './../store/index';\r\n\r\nconst ProfileDropDown = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const currentUser = useAppSelector(\r\n    (state: StoreState) => state.app.currentUser,\r\n  );\r\n  const handleLogoutOpenLogInForm = async () => {\r\n    dispatch(setCurrentUser(null));\r\n    // history.push(\"/login\")\r\n    // await logout(currentUser.uid, dispatch);\r\n    await dispatch(setIsLogInFormDisplay(true));\r\n  };\r\n\r\n  // const handleLogoutOpenLogInForm = async () => {\r\n  //   await logout(currentUser.uid, dispatch);\r\n  // };\r\n  return (\r\n    <>\r\n      {currentUser !== null && (\r\n        <div className=\"btn-group\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-warning dropdown-toggle\"\r\n            data-bs-toggle=\"dropdown\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            {currentUser.username}\r\n          </button>\r\n          <div\r\n            className=\"dropdown-menu\"\r\n            style={{ width: '325px', left: '-184px' }}\r\n          >\r\n            <div className=\"d-flex justify-content-between px-3\">\r\n              <div className=\"d-flex flex-column\">\r\n                <button\r\n                  className=\"btn btn-primary my-3\"\r\n                  onClick={() => {\r\n                    history.push('/profile');\r\n                    document.title = 'Profile - Voter List App';\r\n                  }}\r\n                >\r\n                  Profile\r\n                  <svg\r\n                    height=\"25\"\r\n                    width=\"25\"\r\n                    className=\"ms-1 pb-1\"\r\n                    viewBox=\"0 0 496 512\"\r\n                  >\r\n                    <path\r\n                      fill=\"currentColor\"\r\n                      d=\"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 96c48.6 0 88 39.4 88 88s-39.4 88-88 88-88-39.4-88-88 39.4-88 88-88zm0 344c-58.7 0-111.3-26.6-146.5-68.2 18.8-35.4 55.6-59.8 98.5-59.8 2.4 0 4.8.4 7.1 1.1 13 4.2 26.6 6.9 40.9 6.9 14.3 0 28-2.7 40.9-6.9 2.3-.7 4.7-1.1 7.1-1.1 42.9 0 79.7 24.4 98.5 59.8C359.3 421.4 306.7 448 248 448z\"\r\n                    ></path>\r\n                  </svg>\r\n                </button>\r\n                <button className=\"btn btn-primary my-3\">Contact Us</button>\r\n              </div>\r\n              <div className=\"d-flex flex-column\">\r\n                <img\r\n                  className=\"rounded-circle my-2\"\r\n                  src=\"https://cdn.quasar.dev/img/boy-avatar.png\"\r\n                  alt=\"profile\"\r\n                  width=\"72\"\r\n                  height=\"72\"\r\n                />\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => {\r\n                    currentUser !== null && handleLogoutOpenLogInForm();\r\n                  }}\r\n                >\r\n                  Logout\r\n                  <svg\r\n                    height=\"25\"\r\n                    width=\"25\"\r\n                    className=\"ms-1 pb-1\"\r\n                    viewBox=\"0 0 512 512\"\r\n                  >\r\n                    <path\r\n                      fill=\"currentColor\"\r\n                      d=\"M96 64h84c6.6 0 12 5.4 12 12v24c0 6.6-5.4 12-12 12H96c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h84c6.6 0 12 5.4 12 12v24c0 6.6-5.4 12-12 12H96c-53 0-96-43-96-96V160c0-53 43-96 96-96zm231.1 19.5l-19.6 19.6c-4.8 4.8-4.7 12.5.2 17.1L420.8 230H172c-6.6 0-12 5.4-12 12v28c0 6.6 5.4 12 12 12h248.8L307.7 391.7c-4.8 4.7-4.9 12.4-.2 17.1l19.6 19.6c4.7 4.7 12.3 4.7 17 0l164.4-164c4.7-4.7 4.7-12.3 0-17l-164.4-164c-4.7-4.6-12.3-4.6-17 .1z\"\r\n                    ></path>\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileDropDown;\r\n","import { useHistory } from 'react-router-dom';\r\nimport { setIsLogInFormDisplay, setIsSignUpFormDisplay } from '../store';\r\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\r\nimport ProfileDropDown from './ProfileDropDown';\r\nimport { StoreState } from './../store/index';\r\nimport CountUp from 'react-countup';\r\n\r\nconst Navbar = () => {\r\n  const dispatch = useAppDispatch();\r\n  const history = useHistory();\r\n  const dashboardData = useAppSelector(\r\n    (state: StoreState) => state.app.dashboardData,\r\n  );\r\n  const currentUser = useAppSelector(\r\n    (state: StoreState) => state.app.currentUser,\r\n  );\r\n  const isLogInFormDisplay = useAppSelector(\r\n    (state: StoreState) => state.app.isLogInFormDisplay,\r\n  );\r\n\r\n  const openSignUpForm = () => {\r\n    dispatch(setIsLogInFormDisplay(false));\r\n    history.push('/signup');\r\n    document.title = 'SignUp - Voter List App';\r\n    dispatch(setIsSignUpFormDisplay(true));\r\n  };\r\n  const openLogInForm = () => {\r\n    dispatch(setIsSignUpFormDisplay(false));\r\n    history.push('/login');\r\n    document.title = 'Login - Voter List App';\r\n    dispatch(setIsLogInFormDisplay(true));\r\n  };\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-dark bg-dark\">\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand fs-2 fw-bold\" href=\"/\">\r\n            Voter List App\r\n          </a>\r\n          <div className=\"d-flex\">\r\n            {currentUser !== null && (\r\n              <>\r\n                {(currentUser.role === 'admin' ||\r\n                  currentUser.role === 'dataEntry') && (\r\n                  <>\r\n                    <button className=\"mx-1 btn btn-primary position-relative\">\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"16\"\r\n                        height=\"16\"\r\n                        fill=\"currentColor\"\r\n                        className=\"bi bi-clock-history me-1 mb-1\"\r\n                        viewBox=\"0 0 16 16\"\r\n                      >\r\n                        <path d=\"M8.515 1.019A7 7 0 0 0 8 1V0a8 8 0 0 1 .589.022l-.074.997zm2.004.45a7.003 7.003 0 0 0-.985-.299l.219-.976c.383.086.76.2 1.126.342l-.36.933zm1.37.71a7.01 7.01 0 0 0-.439-.27l.493-.87a8.025 8.025 0 0 1 .979.654l-.615.789a6.996 6.996 0 0 0-.418-.302zm1.834 1.79a6.99 6.99 0 0 0-.653-.796l.724-.69c.27.285.52.59.747.91l-.818.576zm.744 1.352a7.08 7.08 0 0 0-.214-.468l.893-.45a7.976 7.976 0 0 1 .45 1.088l-.95.313a7.023 7.023 0 0 0-.179-.483zm.53 2.507a6.991 6.991 0 0 0-.1-1.025l.985-.17c.067.386.106.778.116 1.17l-1 .025zm-.131 1.538c.033-.17.06-.339.081-.51l.993.123a7.957 7.957 0 0 1-.23 1.155l-.964-.267c.046-.165.086-.332.12-.501zm-.952 2.379c.184-.29.346-.594.486-.908l.914.405c-.16.36-.345.706-.555 1.038l-.845-.535zm-.964 1.205c.122-.122.239-.248.35-.378l.758.653a8.073 8.073 0 0 1-.401.432l-.707-.707z\" />\r\n                        <path d=\"M8 1a7 7 0 1 0 4.95 11.95l.707.707A8.001 8.001 0 1 1 8 0v1z\" />\r\n                        <path d=\"M7.5 3a.5.5 0 0 1 .5.5v5.21l3.248 1.856a.5.5 0 0 1-.496.868l-3.5-2A.5.5 0 0 1 7 9V3.5a.5.5 0 0 1 .5-.5z\" />\r\n                      </svg>\r\n                      Unapproved\r\n                      <span className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\">\r\n                        {dashboardData ? (\r\n                          <CountUp\r\n                            delay={0.5}\r\n                            duration={2}\r\n                            end={dashboardData.pending}\r\n                          />\r\n                        ) : (\r\n                          0\r\n                        )}\r\n                        <span className=\"visually-hidden\">\r\n                          Unapproved Votes\r\n                        </span>\r\n                      </span>\r\n                    </button>\r\n                    <button className=\"mx-3 btn btn-primary position-relative\">\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"16\"\r\n                        height=\"16\"\r\n                        fill=\"currentColor\"\r\n                        className=\"bi bi-check-circle-fill me-1 mb-1\"\r\n                        viewBox=\"0 0 16 16\"\r\n                      >\r\n                        <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\" />\r\n                      </svg>\r\n                      Approved\r\n                      <span className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\">\r\n                        {dashboardData ? (\r\n                          <CountUp\r\n                            delay={0.5}\r\n                            duration={2}\r\n                            end={dashboardData.approved}\r\n                          />\r\n                        ) : (\r\n                          0\r\n                        )}\r\n                        <span className=\"visually-hidden\">Approved Votes</span>\r\n                      </span>\r\n                    </button>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n            <ProfileDropDown />\r\n            {currentUser === null && (\r\n              <button\r\n                className=\" mx-2 btn btn-outline-primary\"\r\n                onClick={() => {\r\n                  isLogInFormDisplay ? openSignUpForm() : openLogInForm();\r\n                }}\r\n              >\r\n                {isLogInFormDisplay ? 'Sign Up' : 'Login'}\r\n                <svg\r\n                  height=\"25\"\r\n                  width=\"25\"\r\n                  className=\"ms-1 pb-1\"\r\n                  viewBox=\"0 0 512 512\"\r\n                >\r\n                  <path\r\n                    fill=\"#fff\"\r\n                    d=\"M416 448h-84c-6.6 0-12-5.4-12-12v-24c0-6.6 5.4-12 12-12h84c26.5 0 48-21.5 48-48V160c0-26.5-21.5-48-48-48h-84c-6.6 0-12-5.4-12-12V76c0-6.6 5.4-12 12-12h84c53 0 96 43 96 96v192c0 53-43 96-96 96zM167.1 83.5l-19.6 19.6c-4.8 4.8-4.7 12.5.2 17.1L260.8 230H12c-6.6 0-12 5.4-12 12v28c0 6.6 5.4 12 12 12h248.8L147.7 391.7c-4.8 4.7-4.9 12.4-.2 17.1l19.6 19.6c4.7 4.7 12.3 4.7 17 0l164.4-164c4.7-4.7 4.7-12.3 0-17l-164.4-164c-4.7-4.6-12.3-4.6-17 .1z\"\r\n                  ></path>\r\n                </svg>\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { DataAccessParamsModel } from '../components/AdminPortal/DataAccess';\r\nimport { User } from '../interfaces/User';\r\nimport { ApiService } from './ApiServices';\r\nimport UserModel from './UserModel';\r\nimport { ResetPasswordModel } from '../components/ResetPassword';\r\nexport class UserService {\r\n  static baseUrl = ['auth', 'profile'];\r\n\r\n  static async registerUser(registerUser: UserModel) {\r\n    const data = await ApiService.post(\r\n      `${UserService.baseUrl[0]}/register`,\r\n      registerUser,\r\n    );\r\n    return data;\r\n  }\r\n\r\n  static async loginUser(loginUser: UserModel) {\r\n    const data = await ApiService.post(\r\n      `${UserService.baseUrl[0]}/login`,\r\n      loginUser,\r\n    );\r\n    return data;\r\n  }\r\n\r\n  static async validateToken() {\r\n    const data = await ApiService.get(\r\n      `${UserService.baseUrl[0]}/validateToken`,\r\n    );\r\n    return data;\r\n  }\r\n  static async getUserDataByEmail(email: string) {\r\n    const data = await ApiService.get(\r\n      `${UserService.baseUrl[1]}/userData/${email}`,\r\n    );\r\n    return data;\r\n  }\r\n\r\n  static async allUsers() {\r\n    const data = await ApiService.get(`${UserService.baseUrl[1]}/allusers`);\r\n    return data.data;\r\n  }\r\n  static async updateUser(userData: User) {\r\n    const res = await ApiService.put(`${UserService.baseUrl[1]}`, userData);\r\n    return res;\r\n  }\r\n  static async updatedUserDataAccess(\r\n    userId: string,\r\n    accessData: DataAccessParamsModel,\r\n  ) {\r\n    const res = await ApiService.put(`${UserService.baseUrl[1]}/dataAccess`, {\r\n      userId,\r\n      ...accessData,\r\n    });\r\n    return res;\r\n  }\r\n\r\n  static async setDefaultBlockCode(_id: string, defaultBlockCode: number) {\r\n    const res = await ApiService.put(\r\n      `${UserService.baseUrl[1]}/setDefaultBlockCode`,\r\n      { _id, defaultBlockCode },\r\n    );\r\n    return res;\r\n  }\r\n  static async resetPassword(passwordData: ResetPasswordModel) {\r\n    const res = await ApiService.put(\r\n      `${UserService.baseUrl[0]}/reset-password`,\r\n      passwordData,\r\n    );\r\n    return res;\r\n  }\r\n  static async updateProfile(userData: { username: string; mobileNo: string }) {\r\n    const res = await ApiService.put(\r\n      `${UserService.baseUrl[0]}/updateProfile`,\r\n      userData,\r\n    );\r\n    return res;\r\n  }\r\n}\r\n","import { Dispatch, SetStateAction } from 'react';\r\nimport { User } from '../interfaces/User';\r\nimport { UserService } from '../services/UserService';\r\n\r\nexport const headings = [\r\n  ' Sr',\r\n  'Username',\r\n  'Email',\r\n  'Role',\r\n  'Rate',\r\n  'Update',\r\n  // \"Delete\",\r\n];\r\n\r\nexport const userEntryFormInitial: User = {\r\n  _id: '',\r\n  email: '',\r\n  username: '',\r\n  mobileNo: '',\r\n  rate: 0,\r\n  role: 'user',\r\n  assignedBlockCodes: [],\r\n  defaultBlockCode: 0,\r\n};\r\n\r\nexport const getUsers = async (\r\n  setUsers: Dispatch<SetStateAction<User[]>>,\r\n  setLoading?: Dispatch<SetStateAction<boolean>>,\r\n) => {\r\n  try {\r\n    const res = await UserService.allUsers();\r\n    console.log(res);\r\n    await setUsers(res);\r\n    setLoading && setLoading(false);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","interface Props {\r\n  variant?: \"primary\" | \"danger\" | \"warning\";\r\n}\r\nconst Loading = ({ variant = \"primary\" }: Props) => {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"text-center\"\r\n        style={{\r\n          display: \"flex\",\r\n          height: variant !== \"warning\" ? \"100vh\" : \"\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <div className={`spinner-border text-${variant}`} role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n        {variant !== \"warning\" && (\r\n          <h5 className=\"mt-4 ms-2 text-primary\">Loading...</h5>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { Dispatch, SetStateAction } from \"react\";\r\nimport {\r\n  headings,\r\n  userEntryFormInitial,\r\n} from \"../../helpers/userManagementHelper\";\r\nimport { User } from \"../../interfaces/User\";\r\n// import CModal from \"./CModal\";\r\n\r\ninterface Props {\r\n  users: User[];\r\n  setUpdateUserData: Dispatch<SetStateAction<User>>;\r\n  userEntryForm: boolean;\r\n  setUserEntryForm: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst UserDataTable = ({\r\n  users,\r\n  setUpdateUserData,\r\n  userEntryForm,\r\n  setUserEntryForm,\r\n}: Props) => {\r\n  //   const onSubmit = (user: any) => {};\r\n  return (\r\n    <div>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            {headings.map((heading, index) => (\r\n              <th key={index} scope=\"col\" className=\"text-center\">\r\n                {heading}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users &&\r\n            users.map((user: User, index: number) => {\r\n              return (\r\n                <tr key={index}>\r\n                  <th className=\"text-center\" scope=\"row\">\r\n                    {index + 1}\r\n                  </th>\r\n                  <td className=\"text-center\">{user.username}</td>\r\n\r\n                  <td className=\"text-center\">{user.email}</td>\r\n                  <td className=\"text-center\">{user.role}</td>\r\n                  <td className=\"text-center\">{user.rate}</td>\r\n                  <td className=\"text-center\">\r\n                    <button\r\n                      className=\"btn btn-primary\"\r\n                      onClick={() => {\r\n                        setUpdateUserData(\r\n                          !userEntryForm ? user : userEntryFormInitial\r\n                        );\r\n                        setUserEntryForm((prevV) => !prevV);\r\n                      }}\r\n                    >\r\n                      update\r\n                    </button>\r\n                  </td>\r\n                  {/* <td className=\"text-center\">\r\n                    <CModal\r\n                      heading={\"Are you sure you want to delete this user?\"}\r\n                      triggerButtonContent=\"delete\"\r\n                      triggerButtonVarient=\"danger\"\r\n                      onSubmit={() => {\r\n                        onSubmit(user);\r\n                      }}\r\n                    />\r\n                  </td> */}\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDataTable;\r\n","import { BlockCode } from '../interfaces/BlockCode';\r\nimport { ApiService } from './ApiServices';\r\n\r\nexport class BlockCodeService {\r\n  static baseUrl = ['blockCode'];\r\n\r\n  static async getBlockCodes() {\r\n    const res = await ApiService.get(`${BlockCodeService.baseUrl[0]}`);\r\n    return res.data;\r\n  }\r\n  static async getBlockCodeByNumber(blockCodeNumber: number, config?: any) {\r\n    try {\r\n      const res = await ApiService.get(\r\n        `${BlockCodeService.baseUrl[0]}/${blockCodeNumber}`,\r\n        { ...config },\r\n      );\r\n      return res;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  static async updateBlockCode(blockCodeData: BlockCode) {\r\n    const res = await ApiService.put(\r\n      `${BlockCodeService.baseUrl[0]}`,\r\n      blockCodeData,\r\n    );\r\n    return res;\r\n  }\r\n  static async postBlockCode(blockCodeData: BlockCode) {\r\n    const res = await ApiService.post(\r\n      `${BlockCodeService.baseUrl[0]}`,\r\n      blockCodeData,\r\n    );\r\n    return res;\r\n  }\r\n  static async deleteBlockCode(id: string) {\r\n    const res = await ApiService.delete(`${BlockCodeService.baseUrl[0]}/${id}`);\r\n    return res.data;\r\n  }\r\n}\r\n","import { Dispatch, SetStateAction } from \"react\";\r\nimport { BlockCode } from \"../interfaces/BlockCode\";\r\nimport { BlockCodeService } from \"../services/BlockCodeService\";\r\nimport { setBlockCodes, setFilteredBlockCodeHeadings } from \"../store\";\r\n\r\nexport const blockCodeFormInitial: BlockCode = {\r\n  blockCode: null,\r\n  constituencyName: \"\",\r\n  moza: \"\",\r\n  dehya: \"\",\r\n  city: \"\",\r\n  patwarHalka: \"\",\r\n  tapaydar: \"\",\r\n  tehseel: \"\",\r\n  talka: \"\",\r\n  district: \"\",\r\n  unionCouncil: \"\",\r\n  bookNo: \"\",\r\n  constituency: \"\",\r\n};\r\n\r\nexport const getBlockCodes = async (\r\n  dispatch: any,\r\n  setLoading?: Dispatch<SetStateAction<boolean>>,\r\n  setIsBlockCodeData?: Dispatch<SetStateAction<boolean>>\r\n) => {\r\n  const res = await BlockCodeService.getBlockCodes();\r\n  if (res[0]) {\r\n    let resHeadings = res[0] && Object.keys(res[0]);\r\n    let sentenceCaseHeadings: string[] = [];\r\n    if (resHeadings) {\r\n      resHeadings.unshift(\"Sr\");\r\n      resHeadings = resHeadings.filter(\r\n        (heading: string) =>\r\n          heading !== \"status\" &&\r\n          heading !== \"_id\" &&\r\n          heading !== \"enteredBy\" &&\r\n          heading !== \"createdAt\" &&\r\n          heading !== \"__v\"\r\n      );\r\n      // resHeadings.push(\"Update\");\r\n      // resHeadings.push(\"Delete\");\r\n      resHeadings.forEach((heading: string) => {\r\n        const result = heading.replace(/([A-Z])/g, \" $1\");\r\n        sentenceCaseHeadings.push(\r\n          result.charAt(0).toUpperCase() + result.slice(1)\r\n        );\r\n      });\r\n      dispatch(setFilteredBlockCodeHeadings(sentenceCaseHeadings));\r\n      dispatch(setBlockCodes(res));\r\n      setFilteredBlockCodeHeadings(false);\r\n      setLoading && setLoading(false);\r\n    }\r\n  } else {\r\n    setIsBlockCodeData && setIsBlockCodeData(false);\r\n  }\r\n};\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = (callback: any, initialState: any) => {\r\n  const [data, setData] = useState(initialState);\r\n  const onChange = (event: any) => {\r\n    setData({\r\n      ...data,\r\n      [event.target.name]: data.blockCode\r\n        ? event.target.value.toUpperCase()\r\n        : event.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (event: any) => {\r\n    event && event.preventDefault();\r\n    callback(data);\r\n  };\r\n\r\n  return {\r\n    onChange,\r\n    onSubmit,\r\n    data,\r\n    setData,\r\n  };\r\n};\r\n","import { useState, SetStateAction, useEffect, Dispatch } from 'react';\r\nimport { BlockCode } from '../interfaces/BlockCode';\r\nimport { useAppSelector } from '../store/hooks';\r\nimport { StoreState } from './../store/index';\r\n\r\ninterface Props {\r\n  tags?: string[];\r\n  data?: any;\r\n  setData?: Dispatch<SetStateAction<any[]>>;\r\n  setTags?: Dispatch<SetStateAction<string[]>>;\r\n  placeholder?: string;\r\n}\r\n\r\nconst TagInput = ({ tags, setTags, data, setData, placeholder }: Props) => {\r\n  const blockCodes = useAppSelector(\r\n    (state: StoreState) => state.app.blockCodes\r\n  );\r\n  const [tagData, setTagData] = useState<string[]>([]);\r\n  const removeTagData = (indexToRemove: number) => {\r\n    const newtags: string[] = [\r\n      ...tagData.filter((_: any, index: number) => index !== indexToRemove),\r\n    ];\r\n    setTagData([...newtags]);\r\n    setData && setData({ ...data, assignedBlockCodes: [...newtags] });\r\n\r\n    // setData && setData( assignedBlockCodes: [ ...tagData.filter((_: any, index: number) => index !== indexToRemove)]);\r\n  };\r\n  const addTagData = (event: any) => {\r\n    if (event.target.value !== '') {\r\n      setTagData([...tagData, event.target.value]);\r\n      setData &&\r\n        setData({\r\n          ...data,\r\n          assignedBlockCodes: [...tagData, event.target.value],\r\n        });\r\n      event.target.value = '';\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    tags && setTagData(tags);\r\n  }, [tags]);\r\n  return (\r\n    <>\r\n      <div className='tag-input'>\r\n        <ul className='tags'>\r\n          {tagData.map((tag: string, index: number) => (\r\n            <li key={index} className='tag'>\r\n              <span className='tag-title'>{tag}</span>\r\n              <span\r\n                className='tag-close-icon'\r\n                onClick={() => removeTagData(index)}\r\n              >\r\n                x\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <input\r\n          list='brow'\r\n          type='number'\r\n          onKeyUp={(event) =>\r\n            event.key === 'Enter' ? addTagData(event) : null\r\n          }\r\n          placeholder={placeholder ? placeholder : 'Press enter to add a tag'}\r\n        />\r\n        <datalist id='brow'>\r\n          {blockCodes.map((blockCode: BlockCode) => {\r\n            return (\r\n              <option key={blockCode._id} value={`${blockCode.blockCode}`} />\r\n            );\r\n          })}\r\n        </datalist>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TagInput;\r\n","import React, { Dispatch, SetStateAction, useEffect, useState } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { useForm } from '../../helpers/useForm';\r\nimport { getUsers } from '../../helpers/userManagementHelper';\r\nimport { User } from '../../interfaces/User';\r\nimport AuthorizedService from '../../services/AuthorizedService';\r\nimport { UserService } from '../../services/UserService';\r\nimport { setMessage, setMessageVariant } from '../../store';\r\nimport { useAppDispatch } from '../../store/hooks';\r\nimport Loading from '../Loading';\r\n\r\nexport interface DataAccessParamsModel {\r\n  district: string;\r\n  city: string;\r\n  tehseel: string;\r\n  constituency: string;\r\n  unionCouncil: string;\r\n  constituencyName: string;\r\n  blockCode: number | null;\r\n  phase: string;\r\n  sector: string;\r\n  street: string;\r\n  gender: string;\r\n  lane: string;\r\n  boulevardAvenue: string;\r\n  updateNo: number | null;\r\n}\r\ninterface Props {\r\n  userId: string;\r\n  setUsers: Dispatch<SetStateAction<User[]>>;\r\n  setDataAccess: Dispatch<SetStateAction<boolean>>;\r\n}\r\nconst DataAccess = ({ userId, setUsers, setDataAccess }: Props) => {\r\n  // type SetAccessParametersData =\r\n  //   | Dispatch<SetStateAction<number[]>>\r\n  //   | Dispatch<SetStateAction<string[]>>;\r\n  type SelectEvent = React.ChangeEvent<HTMLSelectElement>;\r\n  const dispatch = useAppDispatch();\r\n  // const formOptionsMock = [\r\n  //   501021717, 501021718, 501021719, 501021720, 501021721, 501021722, 501021723,\r\n  // ];\r\n  const [lastAccessParameter, setLastAccessParameter] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [isFullAccess, setIsFullAccess] = useState(false);\r\n  const [resData, setResData] = useState<any>({});\r\n  const [lastAccessParameterIndex, setLastAccessParameterIndex] = useState<\r\n    number | undefined\r\n  >(undefined);\r\n  const dataAccessFormInitial: DataAccessParamsModel = {\r\n    district: '',\r\n    city: '',\r\n    tehseel: '',\r\n    constituency: '',\r\n    unionCouncil: '',\r\n    constituencyName: '',\r\n    blockCode: null,\r\n    phase: '',\r\n    sector: '',\r\n    street: '',\r\n    gender: '',\r\n    lane: '',\r\n    boulevardAvenue: '',\r\n    updateNo: null,\r\n  };\r\n  const accessParametersArr = [\r\n    'district',\r\n    'city',\r\n    'tehseel',\r\n    'constituency',\r\n    'unionCouncil',\r\n    'constituencyName',\r\n    'blockCode',\r\n    'phase',\r\n    'sector',\r\n    'street',\r\n    'gender',\r\n    'lane',\r\n    'boulevardAvenue',\r\n  ];\r\n  const { onSubmit, data, setData } = useForm(\r\n    submitDataAccessCallback,\r\n    dataAccessFormInitial,\r\n  );\r\n\r\n  const getUniqueData = async (\r\n    field: DataAccessParamsModel,\r\n    eName?: string,\r\n  ) => {\r\n    if (!eName) {\r\n      const res = await AuthorizedService.getUniqueAuthorizedDataSearch(field);\r\n      if (res.success) {\r\n        res.district && setResData({ district: res.district });\r\n      }\r\n    }\r\n    if (eName) {\r\n      const nextFieldNameIndex = accessParametersArr.indexOf(eName) + 1;\r\n      const fieldName = accessParametersArr[nextFieldNameIndex];\r\n      const res = await AuthorizedService.getUniqueAuthorizedDataSearch(field);\r\n      if (res.success) {\r\n        res.district && setResData({ district: res.district });\r\n        const nextFieldDistinctData = res.data\r\n          .map((item: any) => item[fieldName])\r\n          .filter(\r\n            (value: any, index: any, self: any) =>\r\n              self.indexOf(value) === index,\r\n          );\r\n        res.data &&\r\n          setResData({ ...resData, [fieldName]: nextFieldDistinctData });\r\n      }\r\n    }\r\n  };\r\n  const onAccessParameterChange = (event: SelectEvent) => {\r\n    const eName = event.target.name;\r\n    const eValue = event.target.value;\r\n    const newData = {\r\n      ...data,\r\n      [eName]: eValue,\r\n    };\r\n    setData(newData);\r\n    getUniqueData(newData, eName);\r\n  };\r\n  async function submitDataAccessCallback() {\r\n    setLoading(true);\r\n    const res = await UserService.updatedUserDataAccess(\r\n      userId,\r\n      isFullAccess ? { fullAccess: true } : data,\r\n    );\r\n    if (res.success) {\r\n      res.success && dispatch(setMessageVariant('success'));\r\n      res.success && dispatch(setMessage(res.message));\r\n      getUsers(setUsers);\r\n      setDataAccess(false);\r\n    }\r\n    if (!res.success) {\r\n      res.success && dispatch(setMessageVariant('danger'));\r\n      res.success && dispatch(setMessage(res.message));\r\n    }\r\n    setLoading(false);\r\n  }\r\n  useEffect(() => {\r\n    getUniqueData(dataAccessFormInitial);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <div className=\"row\">\r\n          <h4 className=\"text-center p-3\">Data Access</h4>\r\n          <div className=\"form-check form-switch m-2\">\r\n            <label className=\"form-check-label\">Full Access</label>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              onChange={() => {\r\n                setIsFullAccess((prev) => !prev);\r\n              }}\r\n            />\r\n          </div>\r\n          {!isFullAccess && (\r\n            <>\r\n              <Form.Group id=\"lastAccessParameter\">\r\n                <Form.Label>Last Access Parameter</Form.Label>\r\n                <Form.Select\r\n                  name=\"district\"\r\n                  value={lastAccessParameter}\r\n                  onChange={(e: SelectEvent) => {\r\n                    setLastAccessParameter(e.target.value);\r\n                    setLastAccessParameterIndex(\r\n                      accessParametersArr.indexOf(e.target.value),\r\n                    );\r\n                  }}\r\n                  required\r\n                >\r\n                  <option value=\"\" disabled selected hidden>\r\n                    Select Last Access Parameter\r\n                  </option>\r\n                  {accessParametersArr.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n              <>\r\n                {lastAccessParameterIndex !== undefined && (\r\n                  <>\r\n                    <div className=\"row\">\r\n                      {resData.district &&\r\n                        resData.district[0] &&\r\n                        lastAccessParameter && (\r\n                          <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n                            <Form.Group id=\"district\">\r\n                              <Form.Label>District</Form.Label>\r\n                              <Form.Select\r\n                                name=\"district\"\r\n                                value={data.district}\r\n                                onChange={(e: SelectEvent) => {\r\n                                  onAccessParameterChange(e);\r\n                                }}\r\n                                required\r\n                              >\r\n                                <option value=\"\" disabled selected hidden>\r\n                                  Select District\r\n                                </option>\r\n                                {resData.district.map((option: string) => (\r\n                                  <option key={option} value={option}>\r\n                                    {option}\r\n                                  </option>\r\n                                ))}\r\n                              </Form.Select>\r\n                            </Form.Group>\r\n                          </div>\r\n                        )}\r\n\r\n                      {resData.city &&\r\n                        resData.city[0] &&\r\n                        lastAccessParameterIndex >= 1 && (\r\n                          <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n                            <Form.Group id=\"city\">\r\n                              <Form.Label>City</Form.Label>\r\n                              <Form.Select\r\n                                name=\"city\"\r\n                                value={data.city}\r\n                                onChange={(e: SelectEvent) => {\r\n                                  onAccessParameterChange(e);\r\n                                }}\r\n                                required\r\n                              >\r\n                                <option value=\"\" disabled selected hidden>\r\n                                  Select City\r\n                                </option>\r\n                                {resData.city.map((option: string) => (\r\n                                  <option key={option} value={option}>\r\n                                    {option}\r\n                                  </option>\r\n                                ))}\r\n                              </Form.Select>\r\n                            </Form.Group>\r\n                          </div>\r\n                        )}\r\n\r\n                      {resData.tehseel &&\r\n                        resData.tehseel[0] &&\r\n                        lastAccessParameterIndex >= 2 && (\r\n                          <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n                            <Form.Group id=\"tehseel\">\r\n                              <Form.Label>Tehseel</Form.Label>\r\n                              <Form.Select\r\n                                name=\"tehseel\"\r\n                                value={data.tehseel}\r\n                                onChange={(e: SelectEvent) => {\r\n                                  onAccessParameterChange(e);\r\n                                }}\r\n                                required\r\n                              >\r\n                                <option value=\"\" disabled selected hidden>\r\n                                  Select Tehseel\r\n                                </option>\r\n                                {resData.tehseel.map((option: string) => (\r\n                                  <option key={option} value={option}>\r\n                                    {option}\r\n                                  </option>\r\n                                ))}\r\n                              </Form.Select>\r\n                            </Form.Group>\r\n                          </div>\r\n                        )}\r\n\r\n                      {resData.constituency &&\r\n                        resData.constituency[0] &&\r\n                        lastAccessParameterIndex >= 3 && (\r\n                          <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n                            <Form.Group id=\"constituency\">\r\n                              <Form.Label>Constituency</Form.Label>\r\n                              <Form.Select\r\n                                name=\"constituency\"\r\n                                value={data.constituency}\r\n                                onChange={(e: SelectEvent) => {\r\n                                  onAccessParameterChange(e);\r\n                                }}\r\n                                required\r\n                              >\r\n                                <option value=\"\" disabled selected hidden>\r\n                                  Select Constituency\r\n                                </option>\r\n                                {resData.constituency.map((option: string) => (\r\n                                  <option key={option} value={option}>\r\n                                    {option}\r\n                                  </option>\r\n                                ))}\r\n                              </Form.Select>\r\n                            </Form.Group>\r\n                          </div>\r\n                        )}\r\n                      {resData.unionCouncil &&\r\n                        resData.unionCouncil[0] &&\r\n                        lastAccessParameterIndex >= 4 && (\r\n                          <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n                            <Form.Group id=\"unionCouncil\">\r\n                              <Form.Label>Union Council</Form.Label>\r\n                              <Form.Select\r\n                                name=\"unionCouncil\"\r\n                                value={data.unionCouncil}\r\n                                onChange={(e: SelectEvent) => {\r\n                                  onAccessParameterChange(e);\r\n                                }}\r\n                              >\r\n                                <option value=\"\" disabled selected hidden>\r\n                                  Select Union Council\r\n                                </option>\r\n                                {resData.unionCouncil.map((option: string) => (\r\n                                  <option key={option} value={option}>\r\n                                    {option}\r\n                                  </option>\r\n                                ))}\r\n                              </Form.Select>\r\n                            </Form.Group>\r\n                          </div>\r\n                        )}\r\n                      {resData.constituencyName &&\r\n                        resData.constituencyName[0] &&\r\n                        lastAccessParameterIndex >= 5 && (\r\n                          <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n                            <Form.Group id=\"constituencyName\">\r\n                              <Form.Label>Constituency Name</Form.Label>\r\n                              <Form.Select\r\n                                name=\"constituencyName\"\r\n                                value={data.constituencyName}\r\n                                onChange={(e: SelectEvent) => {\r\n                                  onAccessParameterChange(e);\r\n                                }}\r\n                                required\r\n                              >\r\n                                <option value=\"\" disabled selected hidden>\r\n                                  Select Name\r\n                                </option>\r\n                                {resData.constituencyName.map(\r\n                                  (option: string) => (\r\n                                    <option key={option} value={option}>\r\n                                      {option}\r\n                                    </option>\r\n                                  ),\r\n                                )}\r\n                              </Form.Select>\r\n                            </Form.Group>\r\n                          </div>\r\n                        )}\r\n                      {resData.blockCode &&\r\n                        resData.blockCode[0] &&\r\n                        lastAccessParameterIndex >= 6 && (\r\n                          <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n                            <Form.Group id=\"blockCode\">\r\n                              <Form.Label>Block Code</Form.Label>\r\n                              <Form.Select\r\n                                name=\"blockCode\"\r\n                                value={data.blockCode}\r\n                                onChange={(e: SelectEvent) => {\r\n                                  onAccessParameterChange(e);\r\n                                }}\r\n                                required\r\n                              >\r\n                                <option value=\"\" disabled selected hidden>\r\n                                  Select Code\r\n                                </option>\r\n                                {resData.blockCode.map((option: string) => (\r\n                                  <option key={option} value={option}>\r\n                                    {option}\r\n                                  </option>\r\n                                ))}\r\n                              </Form.Select>\r\n                            </Form.Group>\r\n                          </div>\r\n                        )}\r\n                      {resData.phase &&\r\n                        resData.phase[0] &&\r\n                        lastAccessParameterIndex >= 7 && (\r\n                          <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n                            <Form.Group id=\"phase\">\r\n                              <Form.Label>Phase</Form.Label>\r\n                              <Form.Select\r\n                                name=\"phase\"\r\n                                value={data.phase}\r\n                                onChange={(e: SelectEvent) => {\r\n                                  onAccessParameterChange(e);\r\n                                }}\r\n                                required\r\n                              >\r\n                                <option value=\"\" disabled selected hidden>\r\n                                  Select Phase\r\n                                </option>\r\n                                {resData.phase.map((option: string) => (\r\n                                  <option key={option} value={option}>\r\n                                    {option}\r\n                                  </option>\r\n                                ))}\r\n                              </Form.Select>\r\n                            </Form.Group>\r\n                          </div>\r\n                        )}\r\n                      {resData.sector &&\r\n                        resData.sector[0] &&\r\n                        lastAccessParameterIndex >= 8 && (\r\n                          <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n                            <Form.Group id=\"sector\">\r\n                              <Form.Label>Sector</Form.Label>\r\n                              <Form.Select\r\n                                name=\"sector\"\r\n                                value={data.sector}\r\n                                onChange={(e: SelectEvent) => {\r\n                                  onAccessParameterChange(e);\r\n                                }}\r\n                                required\r\n                              >\r\n                                <option value=\"\" disabled selected hidden>\r\n                                  Select Sector\r\n                                </option>\r\n                                {resData.sector.map((option: string) => (\r\n                                  <option key={option} value={option}>\r\n                                    {option}\r\n                                  </option>\r\n                                ))}\r\n                              </Form.Select>\r\n                            </Form.Group>\r\n                          </div>\r\n                        )}\r\n                      {resData.street &&\r\n                        resData.street[0] &&\r\n                        lastAccessParameterIndex >= 9 && (\r\n                          <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n                            <Form.Group id=\"street\">\r\n                              <Form.Label>Street</Form.Label>\r\n                              <Form.Select\r\n                                name=\"street\"\r\n                                value={data.street}\r\n                                onChange={(e: SelectEvent) => {\r\n                                  onAccessParameterChange(e);\r\n                                }}\r\n                                required\r\n                              >\r\n                                <option value=\"\" disabled selected hidden>\r\n                                  Select Street No.\r\n                                </option>\r\n                                {resData.street.map((option: string) => (\r\n                                  <option key={option} value={option}>\r\n                                    {option}\r\n                                  </option>\r\n                                ))}\r\n                              </Form.Select>\r\n                            </Form.Group>\r\n                          </div>\r\n                        )}\r\n                      {resData.gender &&\r\n                        resData.gender[0] &&\r\n                        lastAccessParameterIndex >= 10 && (\r\n                          <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n                            <Form.Group id=\"gender\">\r\n                              <Form.Label>Gender</Form.Label>\r\n                              <Form.Select\r\n                                name=\"gender\"\r\n                                value={data.gender}\r\n                                onChange={(e: SelectEvent) => {\r\n                                  onAccessParameterChange(e);\r\n                                }}\r\n                                required\r\n                              >\r\n                                <option value=\"\" disabled selected hidden>\r\n                                  Select Gender\r\n                                </option>\r\n                                {resData.gender.map((option: string) => (\r\n                                  <option key={option} value={option}>\r\n                                    {option}\r\n                                  </option>\r\n                                ))}\r\n                              </Form.Select>\r\n                            </Form.Group>\r\n                          </div>\r\n                        )}\r\n                      {resData.lane &&\r\n                        resData.lane[0] &&\r\n                        lastAccessParameterIndex >= 11 && (\r\n                          <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n                            <Form.Group id=\"lane\">\r\n                              <Form.Label>Lane</Form.Label>\r\n                              <Form.Select\r\n                                name=\"lane\"\r\n                                value={data.lane}\r\n                                onChange={(e: SelectEvent) => {\r\n                                  onAccessParameterChange(e);\r\n                                }}\r\n                                required\r\n                              >\r\n                                <option value=\"\" disabled selected hidden>\r\n                                  Select Lane\r\n                                </option>\r\n                                {resData.lane.map((option: string) => (\r\n                                  <option key={option} value={option}>\r\n                                    {option}\r\n                                  </option>\r\n                                ))}\r\n                              </Form.Select>\r\n                            </Form.Group>\r\n                          </div>\r\n                        )}\r\n                      {resData.boulevardAvenue &&\r\n                        resData.boulevardAvenue[0] &&\r\n                        lastAccessParameterIndex >= 12 && (\r\n                          <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n                            <Form.Group id=\"boulevardAvenue\">\r\n                              <Form.Label>Boulevard | Avenue</Form.Label>\r\n                              <Form.Select\r\n                                name=\"boulevardAvenue\"\r\n                                value={data.boulevardAvenue}\r\n                                onChange={(e: SelectEvent) => {\r\n                                  onAccessParameterChange(e);\r\n                                }}\r\n                                required\r\n                              >\r\n                                <option value=\"\" disabled selected hidden>\r\n                                  Select Boulevard | Avenue\r\n                                </option>\r\n                                {resData.boulevardAvenue.map(\r\n                                  (option: string) => (\r\n                                    <option key={option} value={option}>\r\n                                      {option}\r\n                                    </option>\r\n                                  ),\r\n                                )}\r\n                              </Form.Select>\r\n                            </Form.Group>\r\n                          </div>\r\n                        )}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </>\r\n            </>\r\n          )}\r\n          <div className=\"d-flex justify-content-center mt-3\">\r\n            <button className=\"btn btn-primary w-50\" onClick={onSubmit}>\r\n              Submit\r\n              {loading && <Loading variant=\"warning\" />}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataAccess;\r\n","import { Dispatch, SetStateAction, useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Alert, Button, Card, Form } from 'react-bootstrap';\r\nimport { getBlockCodes } from '../../helpers/BlockCodeManagementHelper';\r\nimport { useForm } from '../../helpers/useForm';\r\nimport {\r\n  getUsers,\r\n  userEntryFormInitial,\r\n} from '../../helpers/userManagementHelper';\r\nimport { User } from '../../interfaces/User';\r\nimport { UserService } from '../../services/UserService';\r\nimport { setMessage, setMessageVariant } from '../../store';\r\nimport { useAppDispatch } from '../../store/hooks';\r\nimport Loading from '../Loading';\r\nimport TagInput from '../TagInput';\r\nimport DataAccess from './DataAccess';\r\n\r\ninterface Props {\r\n  updateUserData: null | User;\r\n  setUsers: Dispatch<SetStateAction<User[]>>;\r\n  setUserEntryForm: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst UserEntryForm = ({\r\n  updateUserData,\r\n  setUsers,\r\n  setUserEntryForm,\r\n}: Props) => {\r\n  const dispatch = useAppDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [dataAccess, setDataAccess] = useState<boolean>(false);\r\n  const { onChange, onSubmit, data, setData } = useForm(\r\n    submitBlockCodeCallback,\r\n    userEntryFormInitial,\r\n  );\r\n\r\n  async function submitBlockCodeCallback(data: any) {\r\n    setLoading(true);\r\n    setError('');\r\n    if (updateUserData) {\r\n      const res = await UserService.updateUser(data);\r\n      res.success && setData(userEntryFormInitial);\r\n      getUsers(setUsers);\r\n      res.success && dispatch(setMessageVariant('success'));\r\n      res.success && dispatch(setMessage('User Updated Successfully'));\r\n      setUserEntryForm(false);\r\n    }\r\n    setLoading(false);\r\n  }\r\n  useEffect(() => {\r\n    updateUserData && setData({ ...data, ...updateUserData });\r\n    getBlockCodes(dispatch);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [updateUserData]);\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card className=\"card-shadow\">\r\n          <Card.Body>\r\n            <h4 className=\"text-center mb-4\">\r\n              {updateUserData && 'Update User'}\r\n            </h4>\r\n            {data.role === 'dataViewer' && (\r\n              <div className=\"d-flex flex-row-reverse m-2\">\r\n                <div className=\"form-check form-switch\">\r\n                  <label className=\"form-check-label\">Assign Data</label>\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    role=\"switch\"\r\n                    onChange={() => {\r\n                      setDataAccess((prev) => !prev);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n            {error && (\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Alert\r\n                  style={{ width: 300 + 'px' }}\r\n                  className=\"text-center\"\r\n                  variant=\"danger\"\r\n                >\r\n                  {error}\r\n                </Alert>\r\n              </div>\r\n            )}\r\n            {!dataAccess && (\r\n              <Form className=\"pb-5\">\r\n                <div className=\"row\">\r\n                  <div className=\"col col-xs-12 col-sm-4 p-2\">\r\n                    <Form.Group id=\"username\">\r\n                      <Form.Label>User Name</Form.Label>\r\n                      <Form.Control\r\n                        name=\"username\"\r\n                        value={data.username}\r\n                        onChange={onChange}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"col col-xs-12 col-sm-4 p-2\">\r\n                    <Form.Group id=\"email\">\r\n                      <Form.Label>Email</Form.Label>\r\n                      <Form.Control\r\n                        name=\"email\"\r\n                        value={data.email}\r\n                        onChange={onChange}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"col col-xs-12 col-sm-4 p-2\">\r\n                    <Form.Group id=\"role\">\r\n                      <Form.Label>Role</Form.Label>\r\n                      <Form.Select\r\n                        name=\"role\"\r\n                        value={data.role}\r\n                        onChange={onChange}\r\n                        required\r\n                      >\r\n                        <option>\r\n                          {data.role !== ''\r\n                            ? `Current: ${data.role}`\r\n                            : 'Select Role'}\r\n                        </option>\r\n                        <option value=\"user\">User</option>\r\n                        <option value=\"admin\">Admin</option>\r\n                        <option value=\"dataEntry\">Data Entry</option>\r\n                        <option value=\"dataViewer\">Data Viewer</option>\r\n                      </Form.Select>\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"col col-xs-12 col-sm-4 p-2\">\r\n                    <Form.Group id=\"rate\">\r\n                      <Form.Label>Rate</Form.Label>\r\n                      <Form.Control\r\n                        type=\"number\"\r\n                        name=\"rate\"\r\n                        value={data.rate}\r\n                        onChange={onChange}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"col col-xs-12 col-sm-4 p-2\">\r\n                    <Form.Group id=\"assignedBlockCodes\">\r\n                      <Form.Label>Assigned Block Codes</Form.Label>\r\n                      <TagInput\r\n                        tags={data.assignedBlockCodes}\r\n                        data={data}\r\n                        setData={setData}\r\n                        placeholder=\"Press enter to add a Block Code\"\r\n                      />\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n                {data.dataAccess && (\r\n                  <div className=\"row\">\r\n                    <h5 className=\"fw-bold\">Data Access:</h5>\r\n                    <div className=\"col col-xs-12 col-sm-4 px-2 mx-1\">\r\n                      {Object.entries(data.dataAccess).map(\r\n                        ([key, value]: any) => (\r\n                          <span className=\"d-flex\">\r\n                            {`${value?.toString() ? key + ': ' : ''}${\r\n                              value?.toString() ? value?.toString() : ''\r\n                            }`}\r\n                          </span>\r\n                        ),\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                <hr />\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <Button\r\n                    className=\"m-1 w-50 mt-4\"\r\n                    disabled={loading}\r\n                    onClick={(e: any) => {\r\n                      onSubmit(e);\r\n                    }}\r\n                  >\r\n                    Update\r\n                    {loading && <Loading variant=\"warning\" />}\r\n                  </Button>\r\n                  <Button\r\n                    className=\"m-1 w-25 mt-4\"\r\n                    variant=\"danger\"\r\n                    onClick={() => {\r\n                      setData(userEntryFormInitial);\r\n                      setUserEntryForm(false);\r\n                    }}\r\n                  >\r\n                    Close\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            )}\r\n            {dataAccess && updateUserData && (\r\n              <DataAccess\r\n                userId={updateUserData._id}\r\n                setUsers={setUsers}\r\n                setDataAccess={setDataAccess}\r\n              />\r\n            )}\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserEntryForm;\r\n","import { memo, useEffect, useState } from 'react';\r\nimport {\r\n  getUsers,\r\n  userEntryFormInitial,\r\n} from '../../helpers/userManagementHelper';\r\nimport { User } from '../../interfaces/User';\r\nimport Loading from '../Loading';\r\nimport UserDataTable from './UserDataTable';\r\nimport UserEntryForm from './UserEntryForm';\r\n\r\nconst UserManagement = () => {\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [updateUserData, setUpdateUserData] =\r\n    useState<User>(userEntryFormInitial);\r\n  const [userEntryForm, setUserEntryForm] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      getUsers(setUsers, setLoading);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h4 className=\"text-center fw-bold\">User Management</h4>\r\n\r\n        {loading && <Loading />}\r\n        {!loading && (\r\n          <div>\r\n            {!userEntryForm && (\r\n              <UserDataTable\r\n                users={users}\r\n                setUpdateUserData={setUpdateUserData}\r\n                userEntryForm={userEntryForm}\r\n                setUserEntryForm={setUserEntryForm}\r\n              />\r\n            )}\r\n            {userEntryForm && (\r\n              <UserEntryForm\r\n                updateUserData={updateUserData}\r\n                // setUpdateUserData={setUpdateUserData}\r\n                setUsers={setUsers}\r\n                setUserEntryForm={setUserEntryForm}\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(UserManagement);\r\n","import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { VotesModel } from \"../interfaces/VotesModel\";\r\n\r\ninterface Props {\r\n  heading?: string;\r\n  body?: string;\r\n  onSubmit?: (event?: any) => void;\r\n  unauthorizedVote?: VotesModel;\r\n  externalButton?: boolean;\r\n  showModalProp?: boolean;\r\n  triggerButtonContent?: string;\r\n  triggerButtonVariant?: \"primary\" | \"danger\";\r\n  btnClasses?: string;\r\n}\r\n\r\nconst CModal = ({\r\n  heading,\r\n  body,\r\n  onSubmit,\r\n  unauthorizedVote,\r\n  externalButton,\r\n  showModalProp,\r\n  triggerButtonContent,\r\n  triggerButtonVariant,\r\n  btnClasses,\r\n}: Props) => {\r\n  const [show, setShow] = useState<boolean | undefined>(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  useEffect(() => {\r\n    setShow(showModalProp);\r\n  }, [showModalProp]);\r\n\r\n  return (\r\n    <>\r\n      {!externalButton && (\r\n        <Button\r\n          className={`${btnClasses} ${triggerButtonVariant ? \"\" : \"mt-5\"}`}\r\n          style={triggerButtonVariant ? undefined : { width: 50 + \"%\" }}\r\n          variant={triggerButtonVariant ? triggerButtonVariant : \"primary\"}\r\n          onClick={handleShow}\r\n        >\r\n          {triggerButtonContent ? triggerButtonContent : \"Submit\"}\r\n        </Button>\r\n      )}\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{heading}</Modal.Title>\r\n        </Modal.Header>\r\n        {body && <Modal.Body>{body}</Modal.Body>}\r\n        <Modal.Footer>\r\n          <Button variant=\"danger\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"success\"\r\n            onClick={() => {\r\n              handleClose();\r\n              onSubmit && onSubmit();\r\n            }}\r\n          >\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CModal;\r\n","import { Dispatch, SetStateAction, useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Alert, Button, Card, Form } from 'react-bootstrap';\r\nimport {\r\n  blockCodeFormInitial,\r\n  getBlockCodes,\r\n} from '../../helpers/BlockCodeManagementHelper';\r\nimport { useForm } from '../../helpers/useForm';\r\nimport { BlockCode } from '../../interfaces/BlockCode';\r\nimport { BlockCodeService } from '../../services/BlockCodeService';\r\nimport { setMessage, setMessageVariant } from '../../store';\r\nimport { useAppDispatch } from '../../store/hooks';\r\nimport Loading from '../Loading';\r\n\r\ninterface Props {\r\n  updateBlockCodeData: null | BlockCode;\r\n  // setFilteredBlockCodeHeadings: Dispatch<SetStateAction<string[]>>;\r\n  setBlockCodeEntryForm: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst BlockCodeEntryForm = ({\r\n  updateBlockCodeData,\r\n  // setFilteredBlockCodeHeadings,\r\n  setBlockCodeEntryForm,\r\n}: Props) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { onChange, onSubmit, data, setData } = useForm(\r\n    submitBlockCodeCallback,\r\n    blockCodeFormInitial,\r\n  );\r\n\r\n  async function submitBlockCodeCallback(data: any) {\r\n    setLoading(true);\r\n    setError('');\r\n    if (!updateBlockCodeData) {\r\n      const res = await BlockCodeService.postBlockCode(data);\r\n      res.error &&\r\n        setError(`${res.error.message}\r\n    `);\r\n      res.success && (await setData(blockCodeFormInitial));\r\n      dispatch(setMessageVariant('success'));\r\n      dispatch(setMessage('BlockCode Created Successfully...'));\r\n    }\r\n    if (updateBlockCodeData) {\r\n      const res = await BlockCodeService.updateBlockCode(data);\r\n      res.success && setData(blockCodeFormInitial);\r\n      await getBlockCodes(dispatch);\r\n      dispatch(setMessageVariant('success'));\r\n      dispatch(setMessage('BlockCode Updated Successfully...'));\r\n      setBlockCodeEntryForm(false);\r\n    }\r\n    setLoading(false);\r\n  }\r\n  useEffect(() => {\r\n    updateBlockCodeData && setData(updateBlockCodeData);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card className=\"card-shadow\">\r\n          <Card.Body>\r\n            <h4 className=\"text-center mb-4\">\r\n              {updateBlockCodeData ? 'Update Block Code' : 'Create Block Code'}\r\n            </h4>\r\n            {error && (\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Alert\r\n                  style={{ width: 300 + 'px' }}\r\n                  className=\"text-center\"\r\n                  variant=\"danger\"\r\n                >\r\n                  {error}\r\n                </Alert>\r\n              </div>\r\n            )}\r\n            <Form className=\"pb-3\" onSubmit={onSubmit}>\r\n              <div className=\"row\">\r\n                <div className=\"col col-xs-12 col-sm-4 q-pa-sm\">\r\n                  <Form.Group id=\"blockCode\">\r\n                    <Form.Label>Block Code</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      name=\"blockCode\"\r\n                      value={data.blockCode ? data.blockCode : ''}\r\n                      onChange={onChange}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                </div>\r\n                <div className=\"col col-xs-12 col-sm-4 q-pa-sm\">\r\n                  <Form.Group id=\"constituencyName\">\r\n                    <Form.Label>Constituency Name</Form.Label>\r\n                    <Form.Control\r\n                      name=\"constituencyName\"\r\n                      value={data.constituencyName}\r\n                      onChange={onChange}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                </div>\r\n                <div className=\"col col-xs-12 col-sm-4 q-pa-sm\">\r\n                  <Form.Group id=\"moza\">\r\n                    <Form.Label>Moza</Form.Label>\r\n                    <Form.Control\r\n                      name=\"moza\"\r\n                      value={data.moza}\r\n                      onChange={onChange}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                </div>\r\n                <div className=\"col col-xs-12 col-sm-4 q-pa-sm\">\r\n                  <Form.Group id=\"dehya\">\r\n                    <Form.Label>Dehya</Form.Label>\r\n                    <Form.Control\r\n                      name=\"dehya\"\r\n                      value={data.dehya}\r\n                      onChange={onChange}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                </div>\r\n                <div className=\"col col-xs-12 col-sm-4 q-pa-sm\">\r\n                  <Form.Group id=\"city\">\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                      name=\"city\"\r\n                      value={data.city}\r\n                      onChange={onChange}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                </div>\r\n                <div className=\"col col-xs-12 col-sm-4 q-pa-sm\">\r\n                  <Form.Group id=\"patwarHalka\">\r\n                    <Form.Label>Patwar Halka</Form.Label>\r\n                    <Form.Control\r\n                      name=\"patwarHalka\"\r\n                      value={data.patwarHalka}\r\n                      onChange={onChange}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                </div>\r\n                <div className=\"col col-xs-12 col-sm-4 q-pa-sm\">\r\n                  <Form.Group id=\"tapaydar\">\r\n                    <Form.Label>Tapaydar</Form.Label>\r\n                    <Form.Control\r\n                      name=\"tapaydar\"\r\n                      value={data.tapaydar}\r\n                      onChange={onChange}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                </div>\r\n                <div className=\"col col-xs-12 col-sm-4 q-pa-sm\">\r\n                  <Form.Group id=\"tehseel\">\r\n                    <Form.Label>Tehseel</Form.Label>\r\n                    <Form.Control\r\n                      name=\"tehseel\"\r\n                      value={data.tehseel}\r\n                      onChange={onChange}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                </div>\r\n                <div className=\"col col-xs-12 col-sm-4 q-pa-sm\">\r\n                  <Form.Group id=\"talka\">\r\n                    <Form.Label>Talka</Form.Label>\r\n                    <Form.Control\r\n                      name=\"talka\"\r\n                      value={data.talka}\r\n                      onChange={onChange}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                </div>\r\n                <div className=\"col col-xs-12 col-sm-4 q-pa-sm\">\r\n                  <Form.Group id=\"district\">\r\n                    <Form.Label>District</Form.Label>\r\n                    <Form.Control\r\n                      name=\"district\"\r\n                      value={data.district}\r\n                      onChange={onChange}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                </div>\r\n                <div className=\"col col-xs-12 col-sm-4 q-pa-sm\">\r\n                  <Form.Group id=\"unionCouncil\">\r\n                    <Form.Label>Union Council</Form.Label>\r\n                    <Form.Control\r\n                      name=\"unionCouncil\"\r\n                      value={data.unionCouncil}\r\n                      onChange={onChange}\r\n                    />\r\n                  </Form.Group>\r\n                </div>\r\n                <div className=\"col col-xs-12 col-sm-4 q-pa-sm\">\r\n                  <Form.Group id=\"bookNo\">\r\n                    <Form.Label>Book No</Form.Label>\r\n                    <Form.Control\r\n                      name=\"bookNo\"\r\n                      value={data.bookNo}\r\n                      onChange={onChange}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                </div>\r\n                <div className=\"col col-xs-12 col-sm-4 q-pa-sm\">\r\n                  <Form.Group id=\"constituency\">\r\n                    <Form.Label>Constituency</Form.Label>\r\n                    <Form.Control\r\n                      name=\"constituency\"\r\n                      value={data.constituency}\r\n                      onChange={onChange}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Button\r\n                  className=\"my-3 w-50 mt-4\"\r\n                  disabled={loading}\r\n                  // onClick={onSubmit}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                  {loading && <Loading variant=\"warning\" />}\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlockCodeEntryForm;\r\n","import { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { getBlockCodes } from '../../helpers/BlockCodeManagementHelper';\r\nimport { BlockCode } from '../../interfaces/BlockCode';\r\nimport { BlockCodeService } from '../../services/BlockCodeService';\r\nimport { setMessage, setMessageVariant, StoreState } from '../../store';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\nimport CModal from '../CModal';\r\nimport Loading from '../Loading';\r\nimport BlockCodeEntryForm from './BlockCodeEntryForm';\r\n\r\nconst BlockCodeManagement = () => {\r\n  const dispatch = useAppDispatch();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isBlockCodeData, setIsBlockCodeData] = useState<boolean>(true);\r\n  const blockCodes = useAppSelector(\r\n    (state: StoreState) => state.app.blockCodes,\r\n  );\r\n  const [blockCodeEntryForm, setBlockCodeEntryForm] = useState(false);\r\n  const [updateBlockCodeData, setUpdateBlockCodeData] =\r\n    useState<null | BlockCode>(null);\r\n  const filteredBlockCodeHeadings = useAppSelector(\r\n    (state: StoreState) => state.app.filteredBlockCodeHeadings,\r\n  );\r\n\r\n  const deleteBlockCode = async (id: string) => {\r\n    setLoading(true);\r\n    const res = await BlockCodeService.deleteBlockCode(id);\r\n    if (res === 'This record has been deleted successfully') {\r\n      dispatch(setMessageVariant('success'));\r\n      dispatch(setMessage('BlockCode Deleted Successfully'));\r\n    }\r\n    getBlockCodes(dispatch, setLoading, setIsBlockCodeData);\r\n  };\r\n\r\n  const onSubmit = (blockCode: BlockCode) => {\r\n    blockCode._id && deleteBlockCode(blockCode._id);\r\n  };\r\n  useEffect(() => {\r\n    getBlockCodes(dispatch, setLoading, setIsBlockCodeData);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n        className=\"mt-5 align-items-center justify-content-center\"\r\n        style={{ minWidth: 1500 + 'px !important' }}\r\n      >\r\n        <h4 className=\"text-center my-1 mb-4 fw-bold\">Block Code Management</h4>\r\n        {!isBlockCodeData && <h3 className=\"text-center\">No BlockCode Data</h3>}\r\n        <div className=\"d-flex flex-row-reverse m-2\">\r\n          <button\r\n            className=\"btn btn-primary mx-2\"\r\n            onClick={() => {\r\n              setBlockCodeEntryForm((prevV) => !prevV);\r\n            }}\r\n          >\r\n            Create Block Code\r\n          </button>\r\n        </div>\r\n        {isBlockCodeData && (\r\n          <>\r\n            {loading && <Loading />}\r\n            {!loading && (\r\n              <>\r\n                {!blockCodeEntryForm && (\r\n                  <div className=\"table-responsive\">\r\n                    <table className=\"table\">\r\n                      <thead>\r\n                        <tr>\r\n                          {filteredBlockCodeHeadings.map(\r\n                            (heading: string, index: number) => (\r\n                              <th\r\n                                className=\"text-center\"\r\n                                key={index}\r\n                                scope=\"col\"\r\n                              >\r\n                                {heading}\r\n                              </th>\r\n                            ),\r\n                          )}\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {blockCodes.map(\r\n                          (blockCode: BlockCode, index: number) => {\r\n                            return (\r\n                              <tr key={index}>\r\n                                <th scope=\"row\">{index + 1}</th>\r\n                                <td className=\"text-center\">\r\n                                  {blockCode.blockCode}\r\n                                </td>\r\n                                <td className=\"text-center\">\r\n                                  {blockCode.constituencyName}\r\n                                </td>\r\n                                <td className=\"text-center\">\r\n                                  {blockCode.moza}\r\n                                </td>\r\n                                <td className=\"text-center\">\r\n                                  {blockCode.dehya}\r\n                                </td>\r\n                                <td className=\"text-center\">\r\n                                  {blockCode.city}\r\n                                </td>\r\n                                <td className=\"text-center\">\r\n                                  {blockCode.patwarHalka}\r\n                                </td>\r\n                                <td className=\"text-center\">\r\n                                  {blockCode.tapaydar}\r\n                                </td>\r\n                                <td className=\"text-center\">\r\n                                  {blockCode.tehseel}\r\n                                </td>\r\n                                <td className=\"text-center\">\r\n                                  {blockCode.talka}\r\n                                </td>\r\n                                <td className=\"text-center\">\r\n                                  {blockCode.district}\r\n                                </td>\r\n                                <td className=\"text-center\">\r\n                                  {blockCode.unionCouncil}\r\n                                </td>\r\n                                <td className=\"text-center\">\r\n                                  {blockCode.bookNo}\r\n                                </td>\r\n                                <td className=\"text-center\">\r\n                                  {blockCode.constituency}\r\n                                </td>\r\n                                <td className=\"text-center\">\r\n                                  <button\r\n                                    className=\"btn btn-primary\"\r\n                                    onClick={() => {\r\n                                      setUpdateBlockCodeData(\r\n                                        !blockCodeEntryForm ? blockCode : null,\r\n                                      );\r\n                                      setBlockCodeEntryForm(\r\n                                        !blockCodeEntryForm,\r\n                                      );\r\n                                    }}\r\n                                  >\r\n                                    update\r\n                                  </button>\r\n                                </td>\r\n                                <td>\r\n                                  <CModal\r\n                                    heading={\r\n                                      'Are you sure you want to delete this Block Code?'\r\n                                    }\r\n                                    triggerButtonContent=\"delete\"\r\n                                    triggerButtonVariant=\"danger\"\r\n                                    onSubmit={() => {\r\n                                      onSubmit(blockCode);\r\n                                    }}\r\n                                  />\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          },\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n        {blockCodeEntryForm && (\r\n          <BlockCodeEntryForm\r\n            updateBlockCodeData={updateBlockCodeData}\r\n            setBlockCodeEntryForm={setBlockCodeEntryForm}\r\n          />\r\n        )}\r\n      </Container>\r\n      {/* <hr className=\"mx-5\" /> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlockCodeManagement;\r\n","import { Task } from '../interfaces/TaskModel';\r\nimport { ApiService } from './ApiServices';\r\n\r\nexport class TaskService {\r\n  static baseUrl = ['task'];\r\n\r\n  static async getCurrentUserTasks(config?: any) {\r\n    try {\r\n      const res = await ApiService.get(`${TaskService.baseUrl[0]}/current`, {\r\n        ...config,\r\n      });\r\n      return res;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  static async getAllTasks() {\r\n    const res = await ApiService.get(`${TaskService.baseUrl[0]}`);\r\n    return res.data;\r\n  }\r\n  static async updateTask(taskId: string, taskData: Task) {\r\n    const res = await ApiService.put(\r\n      `${TaskService.baseUrl[0]}/${taskId}`,\r\n      taskData,\r\n    );\r\n    return res;\r\n  }\r\n  static async getTaskFile(fileName: string) {\r\n    const res = await ApiService.get(`${TaskService.baseUrl[0]}/${fileName}`);\r\n    return res;\r\n  }\r\n  static async postTask(taskData: any) {\r\n    const res = await ApiService.post(`${TaskService.baseUrl[0]}`, taskData);\r\n    return res;\r\n  }\r\n  static async deleteTask(taskId: string) {\r\n    const res = await ApiService.delete(`${TaskService.baseUrl[0]}/${taskId}`);\r\n    return res;\r\n  }\r\n}\r\n","import { Dispatch, SetStateAction } from 'react';\r\nimport { Task } from '../interfaces/TaskModel';\r\nimport { TaskService } from '../services/TaskService';\r\nimport { setFilteredTaskHeadings, setTasks } from '../store';\r\n\r\nexport const taskFormInitial: Task = {\r\n  email: '',\r\n  title: '',\r\n  description: '',\r\n};\r\n\r\nexport const getAllTasks = async (\r\n  // setFilteredBlockCodeHeadings: Dispatch<SetStateAction<string[]>>,\r\n  dispatch: Dispatch<{ payload: any; type: string }>,\r\n  setLoading?: Dispatch<SetStateAction<boolean>>,\r\n) => {\r\n  const res = await TaskService.getAllTasks();\r\n  !res[0] && dispatch(setTasks(res));\r\n  if (res) {\r\n    let resHeadings = res[0] && Object.keys(res[0]);\r\n    let sentenceCaseHeadings: string[] = [];\r\n    if (resHeadings) {\r\n      resHeadings.unshift('Sr');\r\n      resHeadings = resHeadings.filter(\r\n        (heading: string) =>\r\n          heading !== 'filePath' &&\r\n          heading !== '_id' &&\r\n          heading !== 'enteredBy' &&\r\n          heading !== 'createdAt' &&\r\n          heading !== '__v',\r\n      );\r\n      // resHeadings.push(\"Update\");\r\n      // resHeadings.push(\"Delete\");\r\n      resHeadings.forEach((heading: string) => {\r\n        const result = heading.replace(/([A-Z])/g, ' $1');\r\n        sentenceCaseHeadings.push(\r\n          result.charAt(0).toUpperCase() + result.slice(1),\r\n        );\r\n      });\r\n      dispatch(setFilteredTaskHeadings(sentenceCaseHeadings));\r\n      await dispatch(setTasks(res));\r\n      setLoading && setLoading(false);\r\n    }\r\n  }\r\n};\r\n\r\nexport const getTaskFile = async (fileName: string) => {\r\n  const res = await TaskService.getTaskFile(fileName);\r\n  window.location.assign(\r\n    (process.env.REACT_APP_API_IS_DEV === 'true'\r\n      ? 'http://localhost:5000/'\r\n      : 'https://dataentry.alabrar.pk/') + res.path,\r\n  );\r\n};\r\n","interface Props {\r\n  percentage: number;\r\n}\r\n\r\nconst Progress = ({ percentage }: Props) => {\r\n  return (\r\n    <div className='progress'>\r\n      <div\r\n        className='progress-bar progress-bar-striped bg-success'\r\n        role='progressbar'\r\n        style={{ width: `${percentage}%` }}\r\n      >\r\n        {percentage}%\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Progress;\r\n","import { SetStateAction, useEffect, useState, Dispatch, useRef } from 'react';\r\nimport { Button, Card, Form } from 'react-bootstrap';\r\nimport {\r\n  getAllTasks,\r\n  taskFormInitial,\r\n} from '../../helpers/taskManagementHelper';\r\nimport { useForm } from '../../helpers/useForm';\r\nimport { Task } from '../../interfaces/TaskModel';\r\nimport { User } from '../../interfaces/User';\r\nimport { ApiService } from '../../services/ApiServices';\r\nimport { setMessage, setMessageVariant } from '../../store';\r\nimport { useAppDispatch } from '../../store/hooks';\r\nimport Progress from '../Progress';\r\n\r\ninterface Props {\r\n  users: User[];\r\n  updateTaskData: Task | null;\r\n  setTaskEntryForm: Dispatch<SetStateAction<boolean>>;\r\n  taskEntryForm: boolean;\r\n}\r\n\r\nconst CreateTask = ({\r\n  users,\r\n  setTaskEntryForm,\r\n  updateTaskData,\r\n  taskEntryForm,\r\n}: Props) => {\r\n  const dispatch = useAppDispatch();\r\n  const [file, setFile] = useState('');\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\r\n  const { data, onChange, onSubmit, setData } = useForm(\r\n    onTaskSubmit,\r\n    taskFormInitial,\r\n  );\r\n\r\n  const onFileChange = (e: any) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  async function onTaskSubmit(e: any) {\r\n    // e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('email', data.email ? data.email : '');\r\n    formData.append('title', data.title ? data.title : '');\r\n    formData.append('description', data.description ? data.description : '');\r\n\r\n    try {\r\n      const axios = ApiService.createAxios();\r\n      const resCreate: any =\r\n        !updateTaskData &&\r\n        (await axios.post('/task', formData, {\r\n          onUploadProgress: (progressEvent: any) => {\r\n            setUploadPercentage(\r\n              Math.round((progressEvent.loaded * 100) / progressEvent.total),\r\n            );\r\n          },\r\n        }));\r\n\r\n      const resUpdate: any =\r\n        updateTaskData &&\r\n        (await axios.put(`/task/${data._id}`, formData, {\r\n          onUploadProgress: (progressEvent: any) => {\r\n            setUploadPercentage(\r\n              Math.round((progressEvent.loaded * 100) / progressEvent.total),\r\n            );\r\n          },\r\n        }));\r\n      if (resCreate && !resCreate.success) {\r\n        resCreate && dispatch(setMessageVariant('danger'));\r\n        resCreate && dispatch(setMessage(`Error: ${resCreate.data.message}`));\r\n      }\r\n      if (resUpdate && !resUpdate.success) {\r\n        resUpdate && dispatch(setMessageVariant('danger'));\r\n        resUpdate && dispatch(setMessage(`Error: ${resUpdate.data.message}`));\r\n      }\r\n      if (\r\n        (resCreate && resCreate.data.success) ||\r\n        (resUpdate && resUpdate.data.success)\r\n      ) {\r\n        // Clear percentage\r\n        setTimeout(() => setUploadPercentage(0), 5000);\r\n        setTimeout(() => dispatch(setMessage('')), 5000);\r\n        dispatch(setMessageVariant('info'));\r\n        resCreate && dispatch(setMessage('Task Created SuccessFully'));\r\n        resUpdate && dispatch(setMessage('Task Updated SuccessFully'));\r\n        setData(taskFormInitial);\r\n        fileInputRef.current && (fileInputRef.current.value = '');\r\n        setFile('');\r\n        getAllTasks(dispatch);\r\n        // setTaskEntryForm(false);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    updateTaskData && setData(updateTaskData);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [updateTaskData]);\r\n  return (\r\n    <>\r\n      <Card className=\"m-4 p-4 card-shadow\">\r\n        <h4 className=\"text-center\">\r\n          {updateTaskData ? 'Update Task' : 'Create Task'}\r\n        </h4>\r\n        <Form className=\"pb-5\" onSubmit={onSubmit}>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Select User Email</Form.Label>\r\n            <Form.Control\r\n              list=\"users\"\r\n              type=\"email\"\r\n              placeholder=\"Select email of user which you want to assign a task \"\r\n              name=\"email\"\r\n              value={data.email}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n            <datalist id=\"users\">\r\n              {users.map((user: User, index: number) => (\r\n                <option key={index} value={`${user.email}`} />\r\n              ))}\r\n            </datalist>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Task Title</Form.Label>\r\n            <Form.Control\r\n              name=\"title\"\r\n              placeholder=\"Task Title\"\r\n              value={data.title}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Task Description</Form.Label>\r\n            <Form.Control\r\n              name=\"description\"\r\n              value={data.description}\r\n              onChange={onChange}\r\n              placeholder=\"Task Description\"\r\n              as=\"textarea\"\r\n              rows={3}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-2\">\r\n            <Form.Label>Choose Task File</Form.Label>\r\n            <Form.Control\r\n              type=\"file\"\r\n              ref={fileInputRef}\r\n              onChange={onFileChange}\r\n            />\r\n          </Form.Group>\r\n          <Progress percentage={uploadPercentage} />\r\n          <div className=\"d-flex justify-content-center\">\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary btn-block w-50 mt-4\"\r\n            >\r\n              {updateTaskData ? 'Update Task' : 'Create Task'}\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateTask;\r\n","import { SetStateAction, useState } from 'react';\r\nimport { Dispatch } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { getAllTasks, getTaskFile } from '../../helpers/taskManagementHelper';\r\nimport { Task } from '../../interfaces/TaskModel';\r\nimport { TaskService } from '../../services/TaskService';\r\nimport { setMessage, setMessageVariant } from '../../store';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\nimport CModal from '../CModal';\r\nimport Loading from '../Loading';\r\nimport { StoreState } from './../../store/index';\r\n\r\ninterface Props {\r\n  setUpdateTaskData: Dispatch<SetStateAction<Task | null>>;\r\n  setTaskEntryForm: Dispatch<SetStateAction<boolean>>;\r\n  taskEntryForm: boolean;\r\n}\r\n\r\nconst TasksTable = ({\r\n  setUpdateTaskData,\r\n  setTaskEntryForm,\r\n  taskEntryForm,\r\n}: Props) => {\r\n  const dispatch = useAppDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n  const filteredTaskHeadings = useAppSelector(\r\n    (state: StoreState) => state.app.filteredTaskHeadings,\r\n  );\r\n  const tasks = useAppSelector((state: StoreState) => state.app.tasks);\r\n  const deleteTask = async (id: string) => {\r\n    const res = await TaskService.deleteTask(id);\r\n\r\n    if (res && !res.success) {\r\n      dispatch(setMessageVariant('danger'));\r\n      dispatch(setMessage(res.message));\r\n      return;\r\n    }\r\n\r\n    dispatch(setMessageVariant('success'));\r\n    dispatch(setMessage(res.message));\r\n\r\n    getAllTasks(dispatch, setLoading);\r\n  };\r\n  const onSubmit = (task: Task) => {\r\n    task._id && deleteTask(task._id);\r\n  };\r\n  useEffect(() => {\r\n    getAllTasks(dispatch, setLoading);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return (\r\n    <>\r\n      {loading && <Loading />}\r\n      {!loading && (\r\n        <>\r\n          {!tasks[0] && <h5 className=\"text-center\">No Task Data</h5>}\r\n          {tasks[0] && (\r\n            <div>\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      {filteredTaskHeadings.map(\r\n                        (heading: string, index: number) => (\r\n                          <th className=\"text-center\" key={index} scope=\"col\">\r\n                            {heading}\r\n                          </th>\r\n                        ),\r\n                      )}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {tasks.map((task: Task, index: number) => {\r\n                      return (\r\n                        <tr key={index}>\r\n                          <th scope=\"row\">{index + 1}</th>\r\n                          <td className=\"text-center\">{task.email}</td>\r\n                          <td className=\"text-center\">{task.title}</td>\r\n                          <td className=\"text-center\">{task.description}</td>\r\n                          <td className=\"text-center\">{task.fileName}</td>\r\n                          <td className=\"text-center\">\r\n                            <button\r\n                              className=\"btn btn-primary\"\r\n                              onClick={() => {\r\n                                setUpdateTaskData(!taskEntryForm ? task : null);\r\n                                setTaskEntryForm((prevV) => !prevV);\r\n                              }}\r\n                            >\r\n                              update\r\n                            </button>\r\n                          </td>\r\n                          <td>\r\n                            {task.fileName && (\r\n                              <button\r\n                                className=\"btn btn-primary\"\r\n                                onClick={() => {\r\n                                  task.fileName && getTaskFile(task.fileName);\r\n                                }}\r\n                              >\r\n                                View File\r\n                              </button>\r\n                            )}\r\n                          </td>\r\n                          <td>\r\n                            <CModal\r\n                              heading={\r\n                                'Are you sure you want to delete this Task?'\r\n                              }\r\n                              triggerButtonContent=\"delete\"\r\n                              triggerButtonVariant=\"danger\"\r\n                              onSubmit={() => {\r\n                                onSubmit(task);\r\n                              }}\r\n                            />\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TasksTable;\r\n","import { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Task } from '../../interfaces/TaskModel';\r\nimport { UserService } from '../../services/UserService';\r\nimport CreateTask from './CreateTask';\r\nimport TasksTable from './TasksTable';\r\n\r\nconst TaskManagement = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [taskEntryForm, setTaskEntryForm] = useState(false);\r\n  const [updateTaskData, setUpdateTaskData] = useState<null | Task>(null);\r\n  const getAllUsers = async () => {\r\n    const res = await UserService.allUsers();\r\n    if (res) {\r\n      setUsers(res);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getAllUsers();\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <h4 className=\"text-center my-1 fw-bold\">Task Management</h4>\r\n      <div className=\"d-flex flex-row-reverse m-2\">\r\n        <button\r\n          className=\"btn btn-primary mx-2\"\r\n          onClick={() => {\r\n            setTaskEntryForm(!taskEntryForm);\r\n            setUpdateTaskData(null);\r\n          }}\r\n        >\r\n          Create Task\r\n        </button>\r\n      </div>\r\n\r\n      {!taskEntryForm && (\r\n        <TasksTable\r\n          taskEntryForm={taskEntryForm}\r\n          setTaskEntryForm={setTaskEntryForm}\r\n          setUpdateTaskData={setUpdateTaskData}\r\n        />\r\n      )}\r\n\r\n      {taskEntryForm && (\r\n        <CreateTask\r\n          updateTaskData={updateTaskData}\r\n          taskEntryForm={taskEntryForm}\r\n          setTaskEntryForm={setTaskEntryForm}\r\n          users={users}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskManagement;\r\n","import { Payment } from '../interfaces/PaymentModel';\r\nimport { ApiService } from './ApiServices';\r\n\r\nexport class PaymentService {\r\n  static baseUrl = ['payment'];\r\n\r\n  static async getCurrentUserPayments(config?: any) {\r\n    try {\r\n      const res = await ApiService.get(`${PaymentService.baseUrl[0]}/current`, {\r\n        ...config,\r\n      });\r\n      return res;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  static async getAllPayments() {\r\n    const res = await ApiService.get(`${PaymentService.baseUrl[0]}`);\r\n    return res.data;\r\n  }\r\n  static async updatePayment(paymentId: string, paymentData: Payment) {\r\n    const res = await ApiService.put(\r\n      `${PaymentService.baseUrl[0]}/${paymentId}`,\r\n      paymentData,\r\n    );\r\n    return res;\r\n  }\r\n  static async getPaymentFile(fileName: string) {\r\n    const res = await ApiService.get(\r\n      `${PaymentService.baseUrl[0]}/${fileName}`,\r\n    );\r\n    return res;\r\n  }\r\n  static async postPayment(paymentData: any) {\r\n    const res = await ApiService.post(\r\n      `${PaymentService.baseUrl[0]}`,\r\n      paymentData,\r\n    );\r\n    return res;\r\n  }\r\n  static async deletePayment(paymentId: string) {\r\n    const res = await ApiService.delete(\r\n      `${PaymentService.baseUrl[0]}/${paymentId}`,\r\n    );\r\n    return res;\r\n  }\r\n}\r\n","import { Payment } from '../interfaces/PaymentModel';\r\nimport { PaymentService } from '../services/PaymentService';\r\nimport { setFilteredPaymentHeadings, setPayments } from '../store';\r\n\r\nexport const paymentFormInitial: Payment = {\r\n  email: '',\r\n  title: '',\r\n  amount: undefined,\r\n  description: '',\r\n};\r\nexport const paymentFormReset: Payment = {\r\n  email: '',\r\n  title: '',\r\n  amount: 0,\r\n  description: '',\r\n};\r\n\r\nexport const getAllPayments = async (\r\n  // setFilteredBlockCodeHeadings: Dispatch<SetStateAction<string[]>>,\r\n  dispatch: any,\r\n) => {\r\n  const res = await PaymentService.getAllPayments();\r\n  res && !res[0] && dispatch(setPayments(res));\r\n  if (res) {\r\n    let resHeadings = res[0] && Object.keys(res[0]);\r\n    let sentenceCaseHeadings: string[] = [];\r\n    if (resHeadings) {\r\n      resHeadings.unshift('Sr');\r\n      resHeadings = resHeadings.filter(\r\n        (heading: string) =>\r\n          heading !== 'filePath' &&\r\n          heading !== '_id' &&\r\n          heading !== 'enteredBy' &&\r\n          heading !== 'createdAt' &&\r\n          heading !== '__v',\r\n      );\r\n      resHeadings.forEach((heading: string) => {\r\n        const result = heading.replace(/([A-Z])/g, ' $1');\r\n        sentenceCaseHeadings.push(\r\n          result.charAt(0).toUpperCase() + result.slice(1),\r\n        );\r\n      });\r\n      dispatch(setFilteredPaymentHeadings(sentenceCaseHeadings));\r\n      dispatch(setPayments(res));\r\n    }\r\n  }\r\n};\r\n\r\nexport const getPaymentFile = async (fileName: string) => {\r\n  const res = await PaymentService.getPaymentFile(fileName);\r\n  window.location.assign(\r\n    (process.env.REACT_APP_API_IS_DEV === 'true'\r\n      ? 'http://localhost:5000/'\r\n      : 'https://dataentry.alabrar.pk/') + res.path,\r\n  );\r\n};\r\n","import { SetStateAction, useEffect, useState, Dispatch, useRef } from 'react';\r\nimport { Button, Card, Form } from 'react-bootstrap';\r\nimport {\r\n  getAllPayments,\r\n  paymentFormInitial,\r\n  paymentFormReset,\r\n} from '../../helpers/paymentManagementHelper';\r\nimport { useForm } from '../../helpers/useForm';\r\nimport { Payment } from '../../interfaces/PaymentModel';\r\nimport { ApiService } from '../../services/ApiServices';\r\nimport { UserService } from '../../services/UserService';\r\nimport { setMessage, setMessageVariant } from '../../store';\r\nimport { useAppDispatch } from '../../store/hooks';\r\nimport Progress from '../Progress';\r\nimport { User } from './../../interfaces/User';\r\n\r\ninterface Props {\r\n  users: User[];\r\n  updatePaymentData: Payment | null;\r\n  setPaymentEntryForm: Dispatch<SetStateAction<boolean>>;\r\n  paymentEntryForm: boolean;\r\n}\r\n\r\nconst CreatePayment = ({\r\n  users,\r\n  setPaymentEntryForm,\r\n  updatePaymentData,\r\n  paymentEntryForm,\r\n}: Props) => {\r\n  const dispatch = useAppDispatch();\r\n  const [file, setFile] = useState('');\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n  const [estimatedWithdrawalAmount, setEstimatedWithdrawalAmount] = useState(0);\r\n  const [isWithdrawalAmountVisible, setIsWithdrawalAmountVisible] =\r\n    useState(false);\r\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\r\n  const { data, onChange, onSubmit, setData } = useForm(\r\n    onPaymentSubmit,\r\n    paymentFormInitial,\r\n  );\r\n\r\n  const onFileChange = (e: any) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  async function onPaymentSubmit(e: any) {\r\n    // e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('email', data.email ? data.email : '');\r\n    formData.append('title', data.title ? data.title : '');\r\n    formData.append('amount', data.amount ? data.amount : '');\r\n    formData.append('description', data.description ? data.description : '');\r\n\r\n    try {\r\n      const axios = ApiService.createAxios();\r\n      const resCreate: any =\r\n        !updatePaymentData &&\r\n        (await axios.post('/payment', formData, {\r\n          onUploadProgress: (progressEvent: any) => {\r\n            setUploadPercentage(\r\n              Math.round((progressEvent.loaded * 100) / progressEvent.total),\r\n            );\r\n          },\r\n        }));\r\n\r\n      const resUpdate: any =\r\n        updatePaymentData &&\r\n        (await axios.put(`/payment/${data._id}`, formData, {\r\n          onUploadProgress: (progressEvent: any) => {\r\n            setUploadPercentage(\r\n              Math.round((progressEvent.loaded * 100) / progressEvent.total),\r\n            );\r\n          },\r\n        }));\r\n\r\n      if (resCreate && !resCreate.data.success) {\r\n        dispatch(setMessage(null));\r\n        resCreate && dispatch(setMessageVariant('danger'));\r\n        resCreate && dispatch(setMessage(`Error: ${resCreate.data.message}`));\r\n        document.getElementById('msg')?.scrollIntoView();\r\n      }\r\n      if (resUpdate && !resUpdate.data.success) {\r\n        resUpdate && dispatch(setMessageVariant('danger'));\r\n        resUpdate && dispatch(setMessage(`Error: ${resUpdate.data.message}`));\r\n        document.getElementById('msg')?.scrollIntoView();\r\n      }\r\n      if (\r\n        (resCreate && resCreate.data.success) ||\r\n        (resUpdate && resUpdate.data.success)\r\n      ) {\r\n        // Clear percentage\r\n        setTimeout(() => setUploadPercentage(0), 5000);\r\n        dispatch(setMessageVariant('info'));\r\n        setTimeout(() => setMessage(''), 3000);\r\n        resCreate && dispatch(setMessage('Payment Created SuccessFully'));\r\n        resUpdate && dispatch(setMessage('Payment Updated SuccessFully'));\r\n        setData(paymentFormReset);\r\n        fileInputRef.current && (fileInputRef.current.value = '');\r\n        setFile('');\r\n        getAllPayments(dispatch);\r\n        document.getElementById('msg')?.scrollIntoView();\r\n        setIsWithdrawalAmountVisible(false);\r\n        // setPaymentEntryForm(false);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  const getCurrentUserData = async (email: string) => {\r\n    setIsWithdrawalAmountVisible(false);\r\n    setEstimatedWithdrawalAmount(0);\r\n    const res = await UserService.getUserDataByEmail(email);\r\n    res.success && setEstimatedWithdrawalAmount(res.data.withdrawalAmount);\r\n    res.success && setIsWithdrawalAmountVisible(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    updatePaymentData && setData(updatePaymentData);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [updatePaymentData]);\r\n  return (\r\n    <>\r\n      <Card className=\"m-4 p-4 card-shadow\">\r\n        <h4 className=\"text-center\">\r\n          {updatePaymentData ? 'Update Payment' : 'Create Payment'}\r\n        </h4>\r\n\r\n        {isWithdrawalAmountVisible && (\r\n          <h5>\r\n            {`Estimated Withdrawl Amount - Rs: ${estimatedWithdrawalAmount}`}\r\n          </h5>\r\n        )}\r\n\r\n        <Form className=\"pb-5\" onSubmit={onSubmit}>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Select User Email</Form.Label>\r\n            <Form.Select\r\n              name=\"email\"\r\n              value={data.email}\r\n              onChange={(e: any) => {\r\n                onChange(e);\r\n                getCurrentUserData(e.target.value);\r\n              }}\r\n              required\r\n            >\r\n              <option hidden>\r\n                {data.email\r\n                  ? `Current: ${data.email} select the correct`\r\n                  : `Select email of user for which you want to upload payment receipt`}\r\n              </option>\r\n              {users.map((user: User, index: number) => (\r\n                <option key={index} value={`${user.email}`}>\r\n                  {user.email}\r\n                </option>\r\n              ))}\r\n            </Form.Select>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Payment Title</Form.Label>\r\n            <Form.Control\r\n              name=\"title\"\r\n              placeholder=\"Payment Title\"\r\n              value={data.title}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Amount</Form.Label>\r\n            <Form.Control\r\n              name=\"amount\"\r\n              placeholder=\"Amount\"\r\n              value={data.amount}\r\n              onChange={onChange}\r\n              type=\"number\"\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Payment Description</Form.Label>\r\n            <Form.Control\r\n              name=\"description\"\r\n              value={data.description}\r\n              onChange={onChange}\r\n              placeholder=\"Payment Description\"\r\n              as=\"textarea\"\r\n              rows={3}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-2\">\r\n            <Form.Label>Choose Payment Receipt File</Form.Label>\r\n            <Form.Control\r\n              type=\"file\"\r\n              ref={fileInputRef}\r\n              onChange={onFileChange}\r\n            />\r\n          </Form.Group>\r\n          <Progress percentage={uploadPercentage} />\r\n          <div className=\"d-flex justify-content-center\">\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary btn-block w-50 mt-4\"\r\n            >\r\n              {updatePaymentData ? 'Update Payment' : 'Create Payment'}\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreatePayment;\r\n","import { SetStateAction } from 'react';\r\nimport { Dispatch } from 'react';\r\nimport { useEffect } from 'react';\r\nimport {\r\n  getAllPayments,\r\n  getPaymentFile,\r\n} from '../../helpers/paymentManagementHelper';\r\nimport { Payment } from '../../interfaces/PaymentModel';\r\nimport { PaymentService } from '../../services/PaymentService';\r\nimport {\r\n  setFilteredPaymentHeadings,\r\n  setMessage,\r\n  setMessageVariant,\r\n  setPayments,\r\n} from '../../store';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\nimport CModal from '../CModal';\r\nimport { StoreState } from './../../store/index';\r\n\r\ninterface Props {\r\n  currentUserPayments?: Payment[];\r\n  setUpdatePaymentData?: Dispatch<SetStateAction<Payment | null>>;\r\n  setPaymentEntryForm?: Dispatch<SetStateAction<boolean>>;\r\n  paymentEntryForm?: boolean;\r\n}\r\n\r\nconst PaymentTable = ({\r\n  currentUserPayments,\r\n  setUpdatePaymentData,\r\n  setPaymentEntryForm,\r\n  paymentEntryForm,\r\n}: Props) => {\r\n  const dispatch = useAppDispatch();\r\n  const filteredPaymentHeadings = useAppSelector(\r\n    (state: StoreState) => state.app.filteredPaymentHeadings,\r\n  );\r\n  const payments = useAppSelector((state: StoreState) => state.app.payments);\r\n  const getCurrentUserPaymentHeadings = (currentUserPayments: Payment[]) => {\r\n    if (currentUserPayments) {\r\n      let resHeadings =\r\n        currentUserPayments[0] && Object.keys(currentUserPayments[0]);\r\n      let sentenceCaseHeadings: string[] = [];\r\n      if (resHeadings) {\r\n        resHeadings.unshift('Sr');\r\n        resHeadings = resHeadings.filter(\r\n          (heading: string) =>\r\n            heading !== 'filePath' &&\r\n            heading !== '_id' &&\r\n            heading !== 'email' &&\r\n            heading !== 'fileName' &&\r\n            heading !== 'enteredBy' &&\r\n            heading !== 'createdAt' &&\r\n            heading !== '__v',\r\n        );\r\n        resHeadings.forEach((heading: string) => {\r\n          const result = heading.replace(/([A-Z])/g, ' $1');\r\n          sentenceCaseHeadings.push(\r\n            result.charAt(0).toUpperCase() + result.slice(1),\r\n          );\r\n        });\r\n        return sentenceCaseHeadings;\r\n      }\r\n    }\r\n  };\r\n\r\n  const paymentsHeadings = currentUserPayments\r\n    ? getCurrentUserPaymentHeadings(currentUserPayments)\r\n    : filteredPaymentHeadings;\r\n  const paymentsData: Payment[] = currentUserPayments\r\n    ? currentUserPayments\r\n    : payments;\r\n  const deletePayment = async (id: string) => {\r\n    const res = await PaymentService.deletePayment(id);\r\n\r\n    if (res && !res.success) {\r\n      dispatch(setMessageVariant('danger'));\r\n      dispatch(setMessage(res.message));\r\n      return;\r\n    }\r\n\r\n    dispatch(setMessageVariant('success'));\r\n    dispatch(setMessage(res.message));\r\n    getAllPayments(dispatch);\r\n  };\r\n  const onSubmit = (payment: Payment) => {\r\n    payment._id && deletePayment(payment._id);\r\n  };\r\n  useEffect(() => {\r\n    if (currentUserPayments) {\r\n      dispatch(setFilteredPaymentHeadings([]));\r\n      dispatch(setPayments([]));\r\n    }\r\n    !currentUserPayments && getAllPayments(dispatch);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return (\r\n    <>\r\n      {!currentUserPayments && !payments[0] ? (\r\n        <h5 className=\"text-center\">No Payment Data</h5>\r\n      ) : (\r\n        !payments[0] &&\r\n        !currentUserPayments && <h5 className=\"text-center\">No Payment Data</h5>\r\n      )}\r\n      {(payments[0] || currentUserPayments) && (\r\n        <div>\r\n          <div className=\"table-responsive\">\r\n            {currentUserPayments && (\r\n              <div className=\"d-flex bg-dark text-light justify-content-center\">\r\n                <h5 className=\"py-1\">Payments</h5>\r\n              </div>\r\n            )}\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr style={{ borderBottom: '1px solid' }}>\r\n                  {paymentsHeadings &&\r\n                    paymentsHeadings.map((heading: string, index: number) => (\r\n                      <th className=\"text-center\" key={index} scope=\"col\">\r\n                        {heading}\r\n                      </th>\r\n                    ))}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {paymentsData.map((payment: Payment, index: number) => {\r\n                  return (\r\n                    <tr className=\"text-center\" key={index}>\r\n                      <th scope=\"row\">{index + 1}</th>\r\n                      {!currentUserPayments && <td>{payment.email}</td>}\r\n                      <td>{payment.title}</td>\r\n                      <td>{payment.amount}</td>\r\n                      <td>{payment.description}</td>\r\n                      {!currentUserPayments && <td>{payment.fileName}</td>}\r\n                      <td>\r\n                        {setUpdatePaymentData && (\r\n                          <button\r\n                            className=\"btn btn-primary\"\r\n                            onClick={() => {\r\n                              setUpdatePaymentData\r\n                                ? setUpdatePaymentData(\r\n                                    !paymentEntryForm ? payment : null,\r\n                                  )\r\n                                : console.log(\r\n                                    new Error('setUpdatePaymentData issue'),\r\n                                  );\r\n\r\n                              setPaymentEntryForm\r\n                                ? setPaymentEntryForm((prevV) => !prevV)\r\n                                : console.log(\r\n                                    new Error('setPaymentEntryForm issue'),\r\n                                  );\r\n                            }}\r\n                          >\r\n                            update\r\n                          </button>\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {payment.filePath && (\r\n                          <button\r\n                            className=\"btn btn-primary\"\r\n                            onClick={() => {\r\n                              payment.fileName &&\r\n                                getPaymentFile(payment.fileName);\r\n                            }}\r\n                          >\r\n                            View Reciept\r\n                          </button>\r\n                        )}\r\n                      </td>\r\n                      {!currentUserPayments && (\r\n                        <td>\r\n                          <CModal\r\n                            heading={\r\n                              'Are you sure you want to delete this Payment?'\r\n                            }\r\n                            triggerButtonContent=\"delete\"\r\n                            triggerButtonVariant=\"danger\"\r\n                            onSubmit={() => {\r\n                              onSubmit(payment);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                      )}\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentTable;\r\n","import { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Payment } from '../../interfaces/PaymentModel';\r\nimport { UserService } from '../../services/UserService';\r\nimport CreatePayment from './CreatePayment';\r\nimport PaymentTable from './PaymentTable';\r\n\r\nconst TaskManagement = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [paymentEntryForm, setPaymentEntryForm] = useState(false);\r\n  const [updatePaymentData, setUpdatePaymentData] = useState<null | Payment>(\r\n    null,\r\n  );\r\n\r\n  const getAllUsers = async () => {\r\n    const res = await UserService.allUsers();\r\n    if (res) {\r\n      setUsers(res);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getAllUsers();\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <h4 className=\"text-center my-1 fw-bold\">Payment Management</h4>\r\n      <div className=\"d-flex flex-row-reverse m-2\">\r\n        <button\r\n          className=\"btn btn-primary mx-2\"\r\n          onClick={() => {\r\n            setPaymentEntryForm(!paymentEntryForm);\r\n            setUpdatePaymentData(null);\r\n          }}\r\n        >\r\n          Create Payment\r\n        </button>\r\n      </div>\r\n      {!paymentEntryForm && (\r\n        <PaymentTable\r\n          paymentEntryForm={paymentEntryForm}\r\n          setPaymentEntryForm={setPaymentEntryForm}\r\n          setUpdatePaymentData={setUpdatePaymentData}\r\n        />\r\n      )}\r\n\r\n      {paymentEntryForm && (\r\n        <CreatePayment\r\n          updatePaymentData={updatePaymentData}\r\n          paymentEntryForm={paymentEntryForm}\r\n          setPaymentEntryForm={setPaymentEntryForm}\r\n          users={users}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskManagement;\r\n","import React, { Dispatch, SetStateAction } from 'react';\r\n\r\ninterface Props {\r\n  setUserManagement: Dispatch<SetStateAction<boolean>>;\r\n  setBlockCodeManagement: Dispatch<SetStateAction<boolean>>;\r\n  setTaskManagement: Dispatch<SetStateAction<boolean>>;\r\n  setPaymentManagement: Dispatch<SetStateAction<boolean>>;\r\n  setReports: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst AdminPortalRoutes = ({\r\n  setUserManagement,\r\n  setBlockCodeManagement,\r\n  setTaskManagement,\r\n  setPaymentManagement,\r\n  setReports,\r\n}: Props) => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center m-4\">\r\n      <button\r\n        className=\"btn btn-primary mx-2\"\r\n        onClick={() => {\r\n          setUserManagement((prevV) => !prevV);\r\n          setBlockCodeManagement(false);\r\n          setTaskManagement(false);\r\n          setPaymentManagement(false);\r\n          setReports(false);\r\n        }}\r\n      >\r\n        User Management\r\n      </button>\r\n      <button\r\n        className=\"btn btn-primary mx-2\"\r\n        onClick={() => {\r\n          setBlockCodeManagement((prevV) => !prevV);\r\n          setUserManagement(false);\r\n          setTaskManagement(false);\r\n          setPaymentManagement(false);\r\n          setReports(false);\r\n        }}\r\n      >\r\n        Block Code Management\r\n      </button>\r\n      <button\r\n        className=\"btn btn-primary mx-2\"\r\n        onClick={() => {\r\n          setTaskManagement((prevV) => !prevV);\r\n          setUserManagement(false);\r\n          setBlockCodeManagement(false);\r\n          setPaymentManagement(false);\r\n          setReports(false);\r\n        }}\r\n      >\r\n        Task Management\r\n      </button>\r\n      <button\r\n        className=\"btn btn-primary mx-2\"\r\n        onClick={() => {\r\n          setPaymentManagement((prevV) => !prevV);\r\n          setTaskManagement(false);\r\n          setUserManagement(false);\r\n          setBlockCodeManagement(false);\r\n          setReports(false);\r\n        }}\r\n      >\r\n        Payment Management\r\n      </button>\r\n      <button\r\n        className=\"btn btn-primary mx-2\"\r\n        onClick={() => {\r\n          setReports((prevV) => !prevV);\r\n          setPaymentManagement(false);\r\n          setTaskManagement(false);\r\n          setUserManagement(false);\r\n          setBlockCodeManagement(false);\r\n        }}\r\n      >\r\n        Reports\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPortalRoutes;\r\n","import { Form } from 'react-bootstrap';\r\nimport { useForm } from '../../helpers/useForm';\r\n// import MultiSelect from '../MultiSelect/MultiSelect';\r\n\r\nconst Reports = () => {\r\n  const formOptionsMock = [\r\n    501021717, 501021718, 501021719, 501021720, 501021721, 501021722, 501021723,\r\n  ];\r\n  const reportsFormInitial = {\r\n    city: '',\r\n  };\r\n  const { onChange, data } = useForm(submitVoteCallback, reportsFormInitial);\r\n\r\n  // const fields = [\r\n  //   'abc',\r\n  //   'def',\r\n  //   'ghi',\r\n  //   'jkl',\r\n  //   'mno',\r\n  //   'pqr',\r\n  //   'stu',\r\n  //   'vwx',\r\n  //   'yzA',\r\n  // ];\r\n\r\n  async function submitVoteCallback(data: any) {}\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <Form>\r\n          <div className=\"row\">\r\n            <h3 className=\"text-center p-5 fw-bold\">Reports</h3>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"blockCode\">\r\n                <Form.Label>Block Code</Form.Label>\r\n                <Form.Select\r\n                  name=\"blockCode\"\r\n                  value={data.blockCode}\r\n                  onChange={onChange}\r\n                  required\r\n                >\r\n                  {formOptionsMock.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"constituencyName\">\r\n                <Form.Label>Constituency Name</Form.Label>\r\n                <Form.Select\r\n                  name=\"constituencyName\"\r\n                  value={data.constituencyName}\r\n                  onChange={onChange}\r\n                  required\r\n                >\r\n                  {formOptionsMock.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"moza\">\r\n                <Form.Label>Moza</Form.Label>\r\n                <Form.Select\r\n                  name=\"moza\"\r\n                  value={data.moza}\r\n                  onChange={onChange}\r\n                  required\r\n                >\r\n                  {formOptionsMock.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"dehya\">\r\n                <Form.Label>Dehya</Form.Label>\r\n                <Form.Select\r\n                  name=\"dehya\"\r\n                  value={data.dehya}\r\n                  onChange={onChange}\r\n                  required\r\n                >\r\n                  {formOptionsMock.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"city\">\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Select\r\n                  name=\"city\"\r\n                  value={data.city}\r\n                  onChange={onChange}\r\n                  required\r\n                >\r\n                  {formOptionsMock.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"patwarHalka\">\r\n                <Form.Label>Patwar Halka</Form.Label>\r\n                <Form.Select\r\n                  name=\"patwarHalka\"\r\n                  value={data.patwarHalka}\r\n                  onChange={onChange}\r\n                  required\r\n                >\r\n                  {formOptionsMock.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"tapaydar\">\r\n                <Form.Label>Tapaydar</Form.Label>\r\n                <Form.Select\r\n                  name=\"tapaydar\"\r\n                  value={data.tapaydar}\r\n                  onChange={onChange}\r\n                  required\r\n                >\r\n                  {formOptionsMock.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"tehseel\">\r\n                <Form.Label>Tehseel</Form.Label>\r\n                <Form.Select\r\n                  name=\"tehseel\"\r\n                  value={data.tehseel}\r\n                  onChange={onChange}\r\n                  required\r\n                >\r\n                  {formOptionsMock.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"talka\">\r\n                <Form.Label>Talka</Form.Label>\r\n                <Form.Select\r\n                  name=\"talka\"\r\n                  value={data.talka}\r\n                  onChange={onChange}\r\n                  required\r\n                >\r\n                  {formOptionsMock.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"district\">\r\n                <Form.Label>District</Form.Label>\r\n                <Form.Select\r\n                  name=\"district\"\r\n                  value={data.district}\r\n                  onChange={onChange}\r\n                  required\r\n                >\r\n                  {formOptionsMock.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"unionCouncil\">\r\n                <Form.Label>Union Council</Form.Label>\r\n                <Form.Select\r\n                  name=\"unionCouncil\"\r\n                  value={data.unionCouncil}\r\n                  onChange={onChange}\r\n                >\r\n                  {formOptionsMock.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"bookNo\">\r\n                <Form.Label>Book No</Form.Label>\r\n                <Form.Select\r\n                  name=\"bookNo\"\r\n                  value={data.bookNo}\r\n                  onChange={onChange}\r\n                  required\r\n                >\r\n                  {formOptionsMock.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"constituency\">\r\n                <Form.Label>Constituency</Form.Label>\r\n                <Form.Select\r\n                  name=\"constituency\"\r\n                  value={data.constituency}\r\n                  onChange={onChange}\r\n                  required\r\n                >\r\n                  {formOptionsMock.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex justify-content-center \">\r\n            <button className=\"btn btn-primary\">Generate Report</button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reports;\r\n","import { memo, useState } from \"react\";\r\nimport UserManagement from \"./UserManagement\";\r\nimport BlockCodeManagement from \"./BlockCodeManagement\";\r\nimport TaskManagement from \"./TaskManagement\";\r\nimport PaymentManagement from \"./PaymentManagement\";\r\nimport AdminPortalRoutes from \"./AdminPortalRoutes\";\r\nimport Reports from \"./Reports\";\r\n\r\nconst AdminPortal = () => {\r\n  const [userManagement, setUserManagement] = useState<boolean>(false);\r\n  const [blockCodeManagement, setBlockCodeManagement] =\r\n    useState<boolean>(false);\r\n  const [taskManagement, setTaskManagement] = useState<boolean>(false);\r\n  const [paymentManagement, setPaymentManagement] = useState<boolean>(false);\r\n  const [reports, setReports] = useState<boolean>(false);\r\n  return (\r\n    <>\r\n      <AdminPortalRoutes\r\n        setUserManagement={setUserManagement}\r\n        setBlockCodeManagement={setBlockCodeManagement}\r\n        setTaskManagement={setTaskManagement}\r\n        setPaymentManagement={setPaymentManagement}\r\n        setReports={setReports}\r\n      />\r\n      {userManagement && <UserManagement />}\r\n      {blockCodeManagement && <BlockCodeManagement />}\r\n      {taskManagement && <TaskManagement />}\r\n      {paymentManagement && <PaymentManagement />}\r\n      {reports && <Reports />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(AdminPortal);\r\n","import { useEffect, Dispatch, SetStateAction } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  approveVote,\r\n  getUnAuthorizedList,\r\n  handleClose,\r\n  handleDelete,\r\n  readOnly,\r\n  rejectVote,\r\n  voteRejectInitial,\r\n} from '../../helpers/authorizeHelper';\r\nimport { useVoteReject } from '../../helpers/useVoteReject';\r\nimport UnAuthorizedModel from '../../services/UnAuthorizedModel';\r\nimport { setDataVoteReject } from '../../store';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\nimport { StoreState } from '../../store/index';\r\ninterface Props {\r\n  heading?: string;\r\n  body?: string;\r\n  index: number;\r\n  setIndex?: Dispatch<SetStateAction<number>>;\r\n  unauthorizedVote?: UnAuthorizedModel;\r\n  unauthorizedVotesLength: number;\r\n  showModalProp: null | number;\r\n  setShowModalProp?: Dispatch<SetStateAction<null | number>>;\r\n  onSubmit?: () => void;\r\n}\r\nconst VoteDisplayModal = ({\r\n  heading,\r\n  body,\r\n  index,\r\n  setIndex,\r\n  unauthorizedVote,\r\n  unauthorizedVotesLength,\r\n  showModalProp,\r\n  setShowModalProp,\r\n  onSubmit,\r\n}: Props) => {\r\n  const history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n  const dataVoteReject = useAppSelector(\r\n    (state: StoreState) => state.app.dataVoteReject,\r\n  );\r\n  const { onChangeVoteReject } = useVoteReject();\r\n\r\n  useEffect(() => {\r\n    setShowModalProp && setShowModalProp(showModalProp);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [showModalProp, unauthorizedVotesLength]);\r\n  return (\r\n    <>\r\n      {unauthorizedVote && (\r\n        <Modal\r\n          show={showModalProp === index}\r\n          fullscreen={true}\r\n          onHide={() => {\r\n            handleClose(dispatch, history);\r\n          }}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              {heading\r\n                ? heading\r\n                : `${unauthorizedVote.name} - ${unauthorizedVote.enteredBy?.username}`}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {dataVoteReject && body ? (\r\n              <p>{body}</p>\r\n            ) : (\r\n              <div className=\"row\">\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['blockCode'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"blockCode\"\r\n                  style={{ ...readOnly }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`Block Code: ${unauthorizedVote.blockCode}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['constituencyName'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"constituencyName\"\r\n                  style={{\r\n                    ...readOnly,\r\n                  }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`Constituency Name: ${unauthorizedVote.constituencyName}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['moza'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"moza\"\r\n                  style={{\r\n                    ...readOnly,\r\n                  }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`Moza: ${unauthorizedVote.moza}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['dehya'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"dehya\"\r\n                  style={{\r\n                    ...readOnly,\r\n                  }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`Dehya: ${unauthorizedVote.dehya}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['city'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"city\"\r\n                  style={{\r\n                    ...readOnly,\r\n                  }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`City: ${unauthorizedVote.city}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['patwarHalka'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"patwarHalka\"\r\n                  style={{\r\n                    ...readOnly,\r\n                  }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`Patwar Halka: ${unauthorizedVote.patwarHalka}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['tapaydar'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"tapaydar\"\r\n                  style={{\r\n                    ...readOnly,\r\n                  }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`Tapaydar: ${unauthorizedVote.tapaydar}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['tehseel'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"tehseel\"\r\n                  style={{\r\n                    ...readOnly,\r\n                  }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`Tehseel: ${unauthorizedVote.tehseel}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['talka'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"talka\"\r\n                  style={{\r\n                    ...readOnly,\r\n                  }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`Talka: ${unauthorizedVote.talka}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['district'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"district\"\r\n                  style={{\r\n                    ...readOnly,\r\n                  }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`District: ${unauthorizedVote.district}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['unionCouncil'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"unionCouncil\"\r\n                  style={{\r\n                    ...readOnly,\r\n                  }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`Union Council: ${unauthorizedVote.unionCouncil}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['bookNo'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"bookNo\"\r\n                  style={{\r\n                    ...readOnly,\r\n                  }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`Book No: ${unauthorizedVote.bookNo}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['constituency'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"constituency\"\r\n                  style={{\r\n                    ...readOnly,\r\n                  }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`Constituency: ${unauthorizedVote.constituency}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['gender'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"gender\"\r\n                  style={{\r\n                    ...readOnly,\r\n                  }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`Gender: ${unauthorizedVote.gender}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['voteSNo'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"voteSNo\"\r\n                  style={{ ...readOnly }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`Vote S No: ${unauthorizedVote.voteSNo}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['familyNo'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"familyNo\"\r\n                  style={{ ...readOnly }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`Family No: ${unauthorizedVote.familyNo}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['name'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"name\"\r\n                  style={{\r\n                    ...readOnly,\r\n                  }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`Name: ${unauthorizedVote.name}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['maritalStatus'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"maritalStatus\"\r\n                  style={{\r\n                    ...readOnly,\r\n                  }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`Marital Status: ${unauthorizedVote.maritalStatus}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['fatherHusbandName'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"fatherHusbandName\"\r\n                  style={{\r\n                    ...readOnly,\r\n                  }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`Father|Husband Name: ${unauthorizedVote.fatherHusbandName}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['cnic'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"cnic\"\r\n                  style={{\r\n                    ...readOnly,\r\n                  }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`CNIC: ${unauthorizedVote.cnic}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['age'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"age\"\r\n                  style={{\r\n                    ...readOnly,\r\n                  }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`Age: ${unauthorizedVote.age}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['houseNo'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"houseNo\"\r\n                  style={{\r\n                    ...readOnly,\r\n                  }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`House No: ${unauthorizedVote.houseNo}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['street'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"street\"\r\n                  style={{\r\n                    ...readOnly,\r\n                  }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`Street: ${unauthorizedVote.street}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['phase'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"phase\"\r\n                  style={{\r\n                    ...readOnly,\r\n                  }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`Phase|Town: ${unauthorizedVote.phase}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['sector'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"sector\"\r\n                  style={{ ...readOnly }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`Sector|Block: ${unauthorizedVote.sector}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['lane'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"lane\"\r\n                  style={{ ...readOnly }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`Lane: ${unauthorizedVote.lane}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['boulevardAvenue'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"boulevardAvenue\"\r\n                  style={{ ...readOnly }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`Boulevard|Avenue: ${unauthorizedVote.boulevardAvenue}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['otherArea'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"otherArea\"\r\n                  style={{ ...readOnly }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`Other Area: ${unauthorizedVote.otherArea}`}\r\n                </div>\r\n                <div\r\n                  className={`col col-xs-12 col-sm-4 p-2 ${\r\n                    dataVoteReject['updateNo'] && 'bg-danger'\r\n                  }`}\r\n                  id=\"updateNo\"\r\n                  style={{ ...readOnly }}\r\n                  onClick={onChangeVoteReject}\r\n                >\r\n                  {`Update No: ${unauthorizedVote.updateNo}`}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {unauthorizedVotesLength !== undefined && (\r\n              <span>{`${index + 1} of ${unauthorizedVotesLength + 1}`}</span>\r\n            )}\r\n            {setIndex && (\r\n              <>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  disabled={index === 0}\r\n                  onClick={() => {\r\n                    dispatch(setDataVoteReject(voteRejectInitial));\r\n                    setIndex(index - 1);\r\n                  }}\r\n                >\r\n                  {'< Prev'}\r\n                </Button>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  disabled={index === unauthorizedVotesLength}\r\n                  onClick={() => {\r\n                    dispatch(setDataVoteReject(voteRejectInitial));\r\n                    setIndex(index + 1);\r\n                  }}\r\n                >\r\n                  {'Next >'}\r\n                </Button>{' '}\r\n              </>\r\n            )}\r\n            {/* <Button variant=\"primary\" onClick={handleClose}>\r\n              {`< Prev`}\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleClose}>\r\n              {`Next >`}\r\n            </Button> */}\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={async () => {\r\n                const success = await approveVote(unauthorizedVote);\r\n                if (success) {\r\n                  getUnAuthorizedList(dispatch);\r\n                  if (setIndex) {\r\n                    if (index === 0 && unauthorizedVotesLength > 0) {\r\n                      setIndex(0);\r\n                      return;\r\n                    }\r\n\r\n                    setIndex((prevValue) => {\r\n                      return prevValue - 1;\r\n                    });\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              Approve\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              disabled={unauthorizedVote.status === 'rejected'}\r\n              onClick={async () => {\r\n                const success =\r\n                  unauthorizedVote._id &&\r\n                  (await rejectVote(unauthorizedVote._id, dataVoteReject));\r\n                if (success) {\r\n                  getUnAuthorizedList(dispatch);\r\n                }\r\n                unauthorizedVotesLength === 0 && handleClose(dispatch, history);\r\n              }}\r\n            >\r\n              {unauthorizedVote.status === 'rejected' ? 'Rejected' : 'Reject'}\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => {\r\n                unauthorizedVote._id &&\r\n                  handleDelete(unauthorizedVote._id, dispatch);\r\n                unauthorizedVotesLength === 0 && handleClose(dispatch, history);\r\n              }}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => {\r\n                handleClose(dispatch, history);\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VoteDisplayModal;\r\n","import { setDataVoteReject } from \"../store\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\r\nimport { StoreState } from './../store/index';\r\n\r\nexport const useVoteReject = () => {\r\n  const dispatch = useAppDispatch();\r\n  const dataVoteReject = useAppSelector((state: StoreState) => state.app.dataVoteReject);\r\n  // dispatch(setDataVoteReject(initialState));\r\n  const onChangeVoteReject = (event: any) => {\r\n    dispatch(\r\n      setDataVoteReject({\r\n        ...dataVoteReject,\r\n        [event.target.id]: !dataVoteReject[event.target.id],\r\n      })\r\n    );\r\n  };\r\n\r\n  return {\r\n    onChangeVoteReject,\r\n  };\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport UnAuthorizedModel from \"../../services/UnAuthorizedModel\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\r\nimport VoteDisplayModal from \"./VoteDisplayModal\";\r\nimport { setDataVoteRejectToUnauthorizedDataIndex } from \"../../store\";\r\nimport { StoreState } from \"../../store/index\";\r\nimport { getUnAuthorizedList } from \"../../helpers/authorizeHelper\";\r\n\r\nconst Authorize = () => {\r\n  const dispatch = useAppDispatch();\r\n  const [unAuthorizedVoteIndex, setUnauthorizedVoteIndex] = useState(0);\r\n  const [unAuthorizedVote, setUnauthorizedVote] =\r\n    useState<null | UnAuthorizedModel>(null);\r\n  const unauthorizedData: UnAuthorizedModel[] | [] = useAppSelector(\r\n    (state: StoreState) => state.app.unauthorizedData\r\n  );\r\n\r\n  useEffect(() => {\r\n    getUnAuthorizedList(dispatch);\r\n    unAuthorizedVoteIndex >= 0\r\n      ? setUnauthorizedVote(unauthorizedData[unAuthorizedVoteIndex])\r\n      : setUnauthorizedVote(null);\r\n    dispatch(setDataVoteRejectToUnauthorizedDataIndex(unAuthorizedVoteIndex));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [unAuthorizedVoteIndex]);\r\n  return (\r\n    <>\r\n      {unauthorizedData && !unauthorizedData[0] && (\r\n        <h4 className=\"my-4 text-center\">No UnAuthorized Votes Available</h4>\r\n      )}\r\n      {unAuthorizedVote && (\r\n        <VoteDisplayModal\r\n          index={unAuthorizedVoteIndex}\r\n          setIndex={setUnauthorizedVoteIndex}\r\n          showModalProp={unAuthorizedVoteIndex}\r\n          unauthorizedVote={unAuthorizedVote}\r\n          unauthorizedVotesLength={unauthorizedData.length - 1}\r\n        />\r\n      )}\r\n      {/* {unauthorizedData && <CCard unauthorizedData={unauthorizedData} />} */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Authorize;\r\n","import { ApiService } from '../services/ApiServices';\r\nimport { setDashboardData } from '../store';\r\n\r\nexport const getUserProgressData = async (dispatch: any, source?: any) => {\r\n  const res = await ApiService.get('profile', { cancelToken: source.token });\r\n  console.log(res);\r\n  dispatch(setDashboardData(res?.data));\r\n};\r\n","import { Dispatch } from 'react';\r\nimport { VotesModel } from '../interfaces/VotesModel';\r\nimport {\r\n  setCurrentRejectedVote,\r\n  setDefaultBlockCodeData,\r\n  setMessage,\r\n  setMessageVariant,\r\n  setRejectedVotes,\r\n} from '../store';\r\nimport unAuthorizedService from '../services/unAuthorizedService';\r\nimport { BlockCodeService } from '../services/BlockCodeService';\r\nimport { UserService } from '../services/UserService';\r\n\r\nexport const dataEntryFormInitial: VotesModel = {\r\n  blockCode: null,\r\n  updateNo: null,\r\n  voteSNo: null,\r\n  familyNo: null,\r\n  gender: '',\r\n  name: '',\r\n  fatherHusbandName: '',\r\n  maritalStatus: '',\r\n  cnic: '',\r\n  age: null,\r\n  houseNo: '',\r\n  street: '',\r\n  phase: '',\r\n  sector: '',\r\n  lane: '',\r\n  boulevardAvenue: '',\r\n  otherArea: '',\r\n  constituencyName: '',\r\n  moza: '',\r\n  dehya: '',\r\n  city: '',\r\n  patwarHalka: '',\r\n  tapaydar: '',\r\n  tehseel: '',\r\n  talka: '',\r\n  district: '',\r\n  unionCouncil: '',\r\n  bookNo: '',\r\n  constituency: '',\r\n};\r\n\r\nexport const getRejectedVotes = async (\r\n  dispatch: Dispatch<{ payload: any; type: string }>,\r\n) => {\r\n  const res = await unAuthorizedService.getRejectedVotes();\r\n  dispatch(setRejectedVotes(res));\r\n  dispatch(setCurrentRejectedVote(res[0]));\r\n};\r\n\r\nexport const submitVote = async (\r\n  data: any,\r\n  // setData: Dispatch<SetStateAction<VotesModel>>\r\n) => {\r\n  const res = await unAuthorizedService.addNewUnauthorizedData(data);\r\n  return res;\r\n  // setData(dataEntryFormInitial);\r\n};\r\n\r\nexport const getDefaultBlockCodeData = async (\r\n  defaultBlockCode: number,\r\n  dispatch: Dispatch<{ payload: any; type: string }>,\r\n  setData: any,\r\n  setLoading: any,\r\n  source?: any,\r\n) => {\r\n  const res = await BlockCodeService.getBlockCodeByNumber(defaultBlockCode, {\r\n    cancelToken: source?.token,\r\n  });\r\n  console.log(res);\r\n  if (res?.success) {\r\n    await dispatch(setDefaultBlockCodeData(res.data));\r\n    const data = res.data;\r\n    setData({\r\n      ...dataEntryFormInitial,\r\n      blockCode: data.blockCode,\r\n      constituencyName: data.constituencyName,\r\n      moza: data.moza,\r\n      dehya: data.dehya,\r\n      city: data.city,\r\n      patwarHalka: data.patwarHalka,\r\n      tapaydar: data.tapaydar,\r\n      tehseel: data.tehseel,\r\n      talka: data.talka,\r\n      district: data.district,\r\n      unionCouncil: data.unionCouncil,\r\n      bookNo: data.bookNo,\r\n      constituency: data.constituency,\r\n    });\r\n    setLoading(false);\r\n  } else {\r\n    dispatch(setMessageVariant('danger'));\r\n    dispatch(\r\n      setMessage(\r\n        'Failed to load default Block Code | Set Default Block Code | Contact Admin',\r\n      ),\r\n    );\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\nexport const onBlockCodeSelect = async (\r\n  userId: string,\r\n  defaultBlockCode: number,\r\n  dispatch: Dispatch<{ payload: any; type: string }>,\r\n  setData: any,\r\n  setLoading: any,\r\n) => {\r\n  const res = await UserService.setDefaultBlockCode(userId, defaultBlockCode);\r\n  console.log(res);\r\n  if (res && !res.success) {\r\n    dispatch(setMessageVariant('danger'));\r\n    dispatch(setMessage(res.error.message));\r\n  }\r\n\r\n  res?.success === true &&\r\n    getDefaultBlockCodeData(defaultBlockCode, dispatch, setData, setLoading);\r\n};\r\n\r\nexport const submitNewVote = async (\r\n  data: any,\r\n  currentUser: any,\r\n  dispatch: Dispatch<{ payload: any; type: string }>,\r\n  setData: any,\r\n  setLoading: any,\r\n) => {\r\n  const res: any = await submitVote(data);\r\n  if (res.success) {\r\n    getDefaultBlockCodeData(\r\n      currentUser.defaultBlockCode,\r\n      dispatch,\r\n      setData,\r\n      setLoading,\r\n    );\r\n    dispatch(setMessageVariant('info'));\r\n    dispatch(setMessage('Vote Submitted SuccessFully'));\r\n    return;\r\n  }\r\n\r\n  if (res.error) {\r\n    dispatch(setMessageVariant('danger'));\r\n    dispatch(setMessage(res.error.message));\r\n    return;\r\n  }\r\n  if (!res.success) {\r\n    dispatch(setMessageVariant('danger'));\r\n    dispatch(setMessage(res.message));\r\n    return;\r\n  }\r\n};\r\n\r\nexport const updateRejectedVote = async (data: any) => {\r\n  try {\r\n    const res = await unAuthorizedService.updateRejectedVote(data);\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import { Dispatch, SetStateAction, useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport {\r\n  getUnAuthorizedList,\r\n  voteRejectInitial,\r\n} from '../helpers/authorizeHelper';\r\nimport { getUserProgressData } from '../helpers/dashboardHelper';\r\nimport InputMask from 'react-input-mask';\r\nimport { useForm } from '../helpers/useForm';\r\nimport { User } from '../interfaces/User';\r\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\r\nimport CModal from './CModal';\r\nimport {\r\n  setCurrentRejectedVote,\r\n  setDashboardData,\r\n  setDataVoteReject,\r\n  setMessage,\r\n  setMessageVariant,\r\n} from '../store';\r\nimport {\r\n  dataEntryFormInitial,\r\n  getDefaultBlockCodeData,\r\n  getRejectedVotes,\r\n  onBlockCodeSelect,\r\n  submitNewVote,\r\n  updateRejectedVote,\r\n} from '../helpers/dataEntryHelper';\r\nimport Loading from './Loading';\r\nimport { StoreState } from './../store/index';\r\nimport axios from 'axios';\r\n\r\ninterface Props {\r\n  forRejectedVotes?: boolean;\r\n  setRejectedVoteIndex?: Dispatch<SetStateAction<number>>;\r\n  setRejectedVoteModal?: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst DataEntryForm = ({\r\n  forRejectedVotes,\r\n  setRejectedVoteIndex,\r\n  setRejectedVoteModal,\r\n}: Props) => {\r\n  const dispatch = useAppDispatch();\r\n  const source = axios.CancelToken.source();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const currentRejectedVote = useAppSelector(\r\n    (state: StoreState) => state.app.currentRejectedVote,\r\n  );\r\n  const currentUser: User | null = useAppSelector(\r\n    (state: StoreState) => state.app.currentUser,\r\n  );\r\n  const rejectedVotes = useAppSelector(\r\n    (state: StoreState) => state.app.rejectedVotes,\r\n  );\r\n  const dataVoteReject = useAppSelector(\r\n    (state: StoreState) => state.app.dataVoteReject,\r\n  );\r\n  const { onChange, onSubmit, data, setData } = useForm(\r\n    submitVoteCallback,\r\n    dataEntryFormInitial,\r\n  );\r\n\r\n  async function submitVoteCallback(data: any) {\r\n    !forRejectedVotes &&\r\n      (await submitNewVote(data, currentUser, dispatch, setData, setLoading));\r\n\r\n    const res = currentRejectedVote && (await updateRejectedVote(data));\r\n    if (res && res.success) {\r\n      setData(dataEntryFormInitial);\r\n      dispatch(setCurrentRejectedVote(null));\r\n      getRejectedVotes(dispatch);\r\n      dispatch(setDataVoteReject(voteRejectInitial));\r\n      dispatch(setMessageVariant('info'));\r\n      dispatch(setMessage('Vote Updated SuccessFully'));\r\n      setRejectedVoteIndex && setRejectedVoteIndex(0);\r\n      rejectedVotes.length === 0 &&\r\n        setRejectedVoteModal &&\r\n        setRejectedVoteModal(false);\r\n      getUserProgressData(dispatch, setDashboardData);\r\n      currentUser &&\r\n        currentUser.role === 'admin' &&\r\n        getUnAuthorizedList(dispatch);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!forRejectedVotes) {\r\n      dispatch(setDataVoteReject(voteRejectInitial));\r\n      setData(dataEntryFormInitial);\r\n      currentUser &&\r\n        getDefaultBlockCodeData(\r\n          currentUser.defaultBlockCode,\r\n          dispatch,\r\n          setData,\r\n          setLoading,\r\n          source,\r\n        );\r\n    }\r\n    if (forRejectedVotes && currentRejectedVote) {\r\n      setData({ ...currentRejectedVote });\r\n      dispatch(setDataVoteReject({ ...currentRejectedVote.rejections }));\r\n    }\r\n    forRejectedVotes && setLoading(false);\r\n    return () => {\r\n      source.cancel('axios request cancelled');\r\n    };\r\n  }, [currentRejectedVote]);\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loading />}\r\n      {!loading && (\r\n        <Form className=\"pb-5\">\r\n          <div className=\"row\">\r\n            {!forRejectedVotes && <h3 className=\"text-center p-5\">Add Vote</h3>}\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.blockCode && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"blockCode\">\r\n                <Form.Label>Block Code</Form.Label>\r\n                <Form.Select\r\n                  name=\"blockCode\"\r\n                  value={data.blockCode ? data.blockCode : ''}\r\n                  onChange={(e: any) => {\r\n                    currentUser &&\r\n                      onBlockCodeSelect(\r\n                        currentUser._id,\r\n                        e.target.value,\r\n                        dispatch,\r\n                        setData,\r\n                        setLoading,\r\n                      );\r\n                  }}\r\n                  required\r\n                >\r\n                  {' '}\r\n                  <option value=\"\" disabled selected hidden>\r\n                    Select BlockCode\r\n                  </option>\r\n                  {currentUser?.assignedBlockCodes.map((blockCode) => (\r\n                    <option key={blockCode} value={blockCode}>\r\n                      {blockCode}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.constituencyName && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"constituencyName\">\r\n                <Form.Label>Constituency Name</Form.Label>\r\n                <Form.Control\r\n                  name=\"constituencyName\"\r\n                  value={data.constituencyName}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.moza && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"moza\">\r\n                <Form.Label>Moza</Form.Label>\r\n                <Form.Control\r\n                  name=\"moza\"\r\n                  value={data.moza}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.dehya && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"dehya\">\r\n                <Form.Label>Dehya</Form.Label>\r\n                <Form.Control\r\n                  name=\"dehya\"\r\n                  value={data.dehya}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.city && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"city\">\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control\r\n                  name=\"city\"\r\n                  value={data.city}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.patwarHalka && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"patwarHalka\">\r\n                <Form.Label>Patwar Halka</Form.Label>\r\n                <Form.Control\r\n                  name=\"patwarHalka\"\r\n                  value={data.patwarHalka}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.tapaydar && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"tapaydar\">\r\n                <Form.Label>Tapaydar</Form.Label>\r\n                <Form.Control\r\n                  name=\"tapaydar\"\r\n                  value={data.tapaydar}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.tehseel && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"tehseel\">\r\n                <Form.Label>Tehseel</Form.Label>\r\n                <Form.Control\r\n                  name=\"tehseel\"\r\n                  value={data.tehseel}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.talka && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"talka\">\r\n                <Form.Label>Talka</Form.Label>\r\n                <Form.Control\r\n                  name=\"talka\"\r\n                  value={data.talka}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.district && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"district\">\r\n                <Form.Label>District</Form.Label>\r\n                <Form.Control\r\n                  name=\"district\"\r\n                  value={data.district}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.unionCouncil && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"unionCouncil\">\r\n                <Form.Label>Union Council</Form.Label>\r\n                <Form.Control\r\n                  name=\"unionCouncil\"\r\n                  value={data.unionCouncil}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.bookNo && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"bookNo\">\r\n                <Form.Label>Book No</Form.Label>\r\n                <Form.Control\r\n                  name=\"bookNo\"\r\n                  value={data.bookNo}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.constituency && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"constituency\">\r\n                <Form.Label>Constituency</Form.Label>\r\n                <Form.Control\r\n                  name=\"constituency\"\r\n                  value={data.constituency}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.gender && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"gender\">\r\n                <Form.Label>Gender</Form.Label>\r\n                <Form.Select\r\n                  name=\"gender\"\r\n                  value={data.gender ? data.gender : ''}\r\n                  onChange={onChange}\r\n                  required\r\n                >\r\n                  <option value=\"\" disabled selected hidden>\r\n                    Select Gender\r\n                  </option>\r\n                  <option value=\"MALE\">Male</option>\r\n                  <option value=\"FEMALE\">Female</option>\r\n                  <option value=\"OTHERS\">Others</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.voteSNo && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"voteSNo\">\r\n                <Form.Label>Vote S No</Form.Label>\r\n                <Form.Control\r\n                  name=\"voteSNo\"\r\n                  value={data.voteSNo ? data.voteSNo : ''}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.familyNo && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"familyNo\">\r\n                <Form.Label>Family No</Form.Label>\r\n                <Form.Control\r\n                  name=\"familyNo\"\r\n                  value={data.familyNo ? data.familyNo : ''}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.name && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"name\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  name=\"name\"\r\n                  value={data.name ? data.name : ''}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.maritalStatus && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"maritalStatus\">\r\n                <Form.Label>Marital Status</Form.Label>\r\n                <Form.Select\r\n                  name=\"maritalStatus\"\r\n                  value={data.maritalStatus ? data.maritalStatus : ''}\r\n                  onChange={onChange}\r\n                  required\r\n                >\r\n                  <option value=\"\" disabled selected hidden>\r\n                    Select Marital Status\r\n                  </option>\r\n                  <option value=\"MARRIED\">Married</option>\r\n                  <option value=\"UNMARRIED\">Unmarried</option>\r\n                  <option value=\"-\">-</option>\r\n                </Form.Select>\r\n                {/* <Form.Control\r\n                name=\"maritalStatus\"\r\n                value={data.maritalStatus}\r\n                onChange={onChange}\r\n              /> */}\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.fatherHusbandName && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"fatherHusbandName\">\r\n                <Form.Label>Father|Husband Name</Form.Label>\r\n                <Form.Control\r\n                  name=\"fatherHusbandName\"\r\n                  value={data.fatherHusbandName ? data.fatherHusbandName : ''}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.cnic && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"cnic\">\r\n                <Form.Label>CNIC</Form.Label>\r\n                <InputMask\r\n                  className=\"form-control\"\r\n                  mask=\"99999-9999999-9\"\r\n                  name=\"cnic\"\r\n                  value={data.cnic ? data.cnic : ''}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.age && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"Age\">\r\n                <Form.Label>Age</Form.Label>\r\n                <Form.Control\r\n                  name=\"age\"\r\n                  value={data.age ? data.age : ''}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.houseNo && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"houseNo\">\r\n                <Form.Label>House No</Form.Label>\r\n                <Form.Control\r\n                  name=\"houseNo\"\r\n                  value={data.houseNo ? data.houseNo : ''}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.street && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"street\">\r\n                <Form.Label>Street</Form.Label>\r\n                <Form.Control\r\n                  name=\"street\"\r\n                  value={data.street ? data.street : ''}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.phase && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"phase\">\r\n                <Form.Label>Phase|Town</Form.Label>\r\n                <Form.Control\r\n                  name=\"phase\"\r\n                  value={data.phase ? data.phase : ''}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.sector && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"sector\">\r\n                <Form.Label>Sector|Block</Form.Label>\r\n                <Form.Control\r\n                  name=\"sector\"\r\n                  value={data.sector ? data.sector : ''}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.lane && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"lane\">\r\n                <Form.Label>Lane</Form.Label>\r\n                <Form.Control\r\n                  name=\"lane\"\r\n                  value={data.lane ? data.lane : ''}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.boulevardAvenue && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"boulevardAvenue\">\r\n                <Form.Label>Boulevard|Avenue</Form.Label>\r\n                <Form.Control\r\n                  name=\"boulevardAvenue\"\r\n                  value={data.boulevardAvenue ? data.boulevardAvenue : ''}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.otherArea && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"otherArea\">\r\n                <Form.Label>Other Area</Form.Label>\r\n                <Form.Control\r\n                  name=\"otherArea\"\r\n                  value={data.otherArea ? data.otherArea : ''}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div\r\n              className={`col col-xs-12 col-sm-4 p-1 br-5 ${\r\n                dataVoteReject.updateNo && 'bg-danger'\r\n              }`}\r\n            >\r\n              <Form.Group id=\"updateNo\">\r\n                <Form.Label>Update No</Form.Label>\r\n                <Form.Select\r\n                  name=\"updateNo\"\r\n                  value={data.updateNo ? data.updateNo : ''}\r\n                  onChange={onChange}\r\n                  required\r\n                >\r\n                  <option value=\"\" disabled selected hidden>\r\n                    Select Update Number\r\n                  </option>\r\n                  <option value={1}>1</option>\r\n                  <option value={2}>2</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex justify-content-center\">\r\n            <CModal\r\n              heading={'I Have Reviewed All Enteries'}\r\n              onSubmit={onSubmit}\r\n            />\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataEntryForm;\r\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { getRejectedVotes } from '../../helpers/dataEntryHelper';\r\nimport UnAuthorizedModel from '../../services/UnAuthorizedModel';\r\nimport { setCurrentRejectedVote } from '../../store';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\nimport DataEntryForm from '../DataEntryForm';\r\nimport Loading from '../Loading';\r\nimport { StoreState } from '../../store/index';\r\n\r\ninterface Props {\r\n  rejectedVoteModal: boolean;\r\n  setRejectedVoteModal: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst RejectedVotesModal = ({\r\n  rejectedVoteModal,\r\n  setRejectedVoteModal,\r\n}: Props) => {\r\n  const dispatch = useAppDispatch();\r\n  const [loading, setLoading] = useState(true);\r\n  const [rejectedVoteIndex, setRejectedVoteIndex] = useState(0);\r\n  const rejectedVotes: UnAuthorizedModel[] | [] = useAppSelector(\r\n    (state: StoreState) => state.app.rejectedVotes,\r\n  );\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getRejectedVotes(dispatch);\r\n    setLoading(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return (\r\n    <>\r\n      {loading && <Loading />}\r\n      {!loading && (\r\n        <Modal\r\n          show={rejectedVoteModal}\r\n          fullscreen={true}\r\n          onHide={() => {\r\n            setRejectedVoteModal(false);\r\n            dispatch(setCurrentRejectedVote(rejectedVotes[0]));\r\n            setRejectedVoteIndex(0);\r\n          }}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Rejected Votes</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <DataEntryForm\r\n              forRejectedVotes={true}\r\n              setRejectedVoteIndex={setRejectedVoteIndex}\r\n              setRejectedVoteModal={setRejectedVoteModal}\r\n            />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {rejectedVotes && (\r\n              <span>{`${\r\n                rejectedVotes.length !== 0\r\n                  ? rejectedVoteIndex + 1\r\n                  : rejectedVoteIndex\r\n              } of ${rejectedVotes.length}`}</span>\r\n            )}\r\n            <Button\r\n              variant=\"primary\"\r\n              disabled={rejectedVoteIndex === 0}\r\n              onClick={() => {\r\n                dispatch(\r\n                  setCurrentRejectedVote(rejectedVotes[rejectedVoteIndex - 1]),\r\n                );\r\n                setRejectedVoteIndex(rejectedVoteIndex - 1);\r\n              }}\r\n            >\r\n              {'< Prev'}\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              disabled={\r\n                rejectedVotes && rejectedVoteIndex === rejectedVotes.length - 1\r\n              }\r\n              onClick={() => {\r\n                dispatch(\r\n                  setCurrentRejectedVote(rejectedVotes[rejectedVoteIndex + 1]),\r\n                );\r\n                setRejectedVoteIndex(rejectedVoteIndex + 1);\r\n              }}\r\n            >\r\n              {'Next >'}\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => {\r\n                setRejectedVoteModal(false);\r\n                dispatch(setCurrentRejectedVote(rejectedVotes[0]));\r\n                setRejectedVoteIndex(0);\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RejectedVotesModal;\r\n","import axios from 'axios';\r\nimport { memo, useEffect, useState } from 'react';\r\nimport { getUserProgressData } from '../../helpers/dashboardHelper';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\nimport RejectedVotesModal from './RejectedVotesModal';\r\nimport { StoreState } from '../../store/index';\r\nimport CountUp from 'react-countup';\r\nimport { getUnAuthorizedList } from '../../helpers/authorizeHelper';\r\n\r\nconst Dashboard = () => {\r\n  const [rejectedVoteModal, setRejectedVoteModal] = useState(false);\r\n  const dashboardData = useAppSelector(\r\n    (state: StoreState) => state.app.dashboardData,\r\n  );\r\n  const currentUser = useAppSelector(\r\n    (state: StoreState) => state.app.currentUser,\r\n  );\r\n  const dispatch = useAppDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n  const accuracy =\r\n    dashboardData &&\r\n    Math.floor(\r\n      (dashboardData.approved /\r\n        (dashboardData.approved + dashboardData.rejected)) *\r\n        100,\r\n    );\r\n\r\n  useEffect(() => {\r\n    const source = axios.CancelToken.source();\r\n    try {\r\n      getUserProgressData(dispatch, source);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    return () => {\r\n      source.cancel('axios request cancelled');\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return (\r\n    <>\r\n      {loading && (\r\n        <div>\r\n          <p>Dashboard</p>\r\n          <h1>Loading...</h1>\r\n        </div>\r\n      )}\r\n\r\n      {!loading && (\r\n        <div className=\"container\">\r\n          {(currentUser && currentUser.role === 'dataEntry') ||\r\n          (currentUser && currentUser.role === 'admin') ? (\r\n            <>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <h5 className=\"mt-3\">\r\n                  Accuracy Rate:{' '}\r\n                  {accuracy ? (\r\n                    <CountUp delay={0.5} duration={2} end={accuracy} />\r\n                  ) : (\r\n                    100\r\n                  )}\r\n                  %\r\n                </h5>\r\n              </div>\r\n              <hr />\r\n              <div className=\"d-flex justify-content-evenly\">\r\n                <div>\r\n                  <button className=\"btn btn-primary\">\r\n                    Unapproved -{' '}\r\n                    {dashboardData ? (\r\n                      <CountUp\r\n                        delay={0.5}\r\n                        duration={2}\r\n                        end={dashboardData.pending}\r\n                      />\r\n                    ) : (\r\n                      0\r\n                    )}\r\n                  </button>\r\n                </div>\r\n                <div>\r\n                  <button className=\"btn btn-primary\">\r\n                    Approved -{' '}\r\n                    {dashboardData ? (\r\n                      <CountUp\r\n                        delay={0.5}\r\n                        duration={2}\r\n                        end={dashboardData.approved}\r\n                      />\r\n                    ) : (\r\n                      0\r\n                    )}\r\n                  </button>\r\n                </div>\r\n                <div>\r\n                  <button\r\n                    className=\"btn btn-danger\"\r\n                    disabled={dashboardData?.rejected === 0}\r\n                    onClick={() => {\r\n                      setRejectedVoteModal(true);\r\n                    }}\r\n                  >\r\n                    Rejected -{' '}\r\n                    {dashboardData ? (\r\n                      <CountUp\r\n                        delay={0.5}\r\n                        duration={2}\r\n                        end={dashboardData.rejected}\r\n                      />\r\n                    ) : (\r\n                      0\r\n                    )}\r\n                  </button>\r\n                  <RejectedVotesModal\r\n                    rejectedVoteModal={rejectedVoteModal}\r\n                    setRejectedVoteModal={setRejectedVoteModal}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className=\"d-flex justify-content-evenly\">\r\n                <div>\r\n                  <button className=\"btn btn-primary\">\r\n                    Estimated Withdrawl Amount - Rs:\r\n                    {dashboardData ? (\r\n                      <CountUp\r\n                        delay={0.5}\r\n                        duration={2}\r\n                        end={dashboardData.withdrawalAmount}\r\n                      />\r\n                    ) : (\r\n                      0\r\n                    )}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div\r\n              className=\"d-flex flex-column justify-content-center\"\r\n              style={{ height: 100 + 'vh' }}\r\n            >\r\n              <h1 className=\"text-center align-middle\">\r\n                Your Account Is Not Approved:\r\n              </h1>\r\n              <p className=\"text-center display-6 align-middle\">\r\n                Please Contact Admin To Approve Your Account\r\n              </p>\r\n              <a\r\n                href=\"tel:0323-5072748\"\r\n                className=\"text-center display-6 align-middle\"\r\n              >\r\n                Contact: 0323-5072748\r\n              </a>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(Dashboard);\r\n","// import React, { useState } from \"react\";\r\n// import UnAuthorizedModel from \"../services/UnAuthorizedModel\";\r\n// import { useAppSelector } from \"../store/hooks\";\r\n// import CCard from \"./CCard\";\r\nimport DataEntryForm from \"../DataEntryForm\";\r\n\r\nconst DataEntry = () => {\r\n  // const dispatch = useAppDispatch();\r\n  // const [isVoteFormDisplay, setIsVoteFormDisplay] = useState(false);\r\n  // const rejectedVotes: UnAuthorizedModel[] | [] = useAppSelector(\r\n  //   (state: StoreState) => state.app.rejectedVotes\r\n  // );\r\n  // useEffect(() => {\r\n  //   // getRejectedVotes(dispatch);\r\n  // }, []);\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        {/* {!isVoteFormDisplay && (\r\n          <CCard\r\n            rejectedVotes={rejectedVotes}\r\n            setIsVoteFormDisplay={setIsVoteFormDisplay}\r\n          />\r\n        )} */}\r\n        {/* <div className=\"d-flex justify-content-end\">\r\n          <button\r\n            className=\"btn btn-primary m-2\"\r\n            onClick={() => {\r\n              setIsVoteFormDisplay(!isVoteFormDisplay);\r\n            }}\r\n          >\r\n            Add Vote\r\n          </button>\r\n        </div> */}\r\n        {/* {isVoteFormDisplay && <DataEntryForm />} */}\r\n        <DataEntryForm />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataEntry;\r\n","import { memo, useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport {\r\n  setCurrentUser,\r\n  setIsLogInFormDisplay,\r\n  setIsSignUpFormDisplay,\r\n  setMessage,\r\n  setNavLinkActive,\r\n} from \"../store\";\r\nimport Loading from \"./Loading\";\r\nimport { UserService } from \"../services/UserService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAppDispatch } from \"../store/hooks\";\r\n\r\nconst Login = () => {\r\n  const emailRef = useRef<any>();\r\n  const passwordRef = useRef<any>();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useAppDispatch();\r\n  const history = useHistory();\r\n\r\n  const onSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const res = await UserService.loginUser({\r\n        email: emailRef.current.value,\r\n        password: passwordRef.current.value,\r\n      });\r\n      if (!res.success) {\r\n        setError(res.error.message);\r\n        setLoading(false);\r\n      }\r\n      if (res.success) {\r\n        dispatch(setMessage(\"You Logged In Successfully\"));\r\n        dispatch(setCurrentUser(res.data.userData));\r\n        localStorage.setItem(\"token\", res.data.access_token);\r\n        setLoading(false);\r\n        dispatch(setIsLogInFormDisplay(false));\r\n        dispatch(setNavLinkActive(0));\r\n        history.push(\"/\");\r\n        document.title = \"Dashboard - Voter List App\";\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n        className=\"d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <div className=\"\" style={{ maxWidth: \"400px\" }}>\r\n          <Card>\r\n            <Card.Body>\r\n              <h2 className=\"text-center mb-4\">Log In</h2>\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n              <Form onSubmit={onSubmit}>\r\n                <Form.Group id=\"email\">\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control type=\"email\" ref={emailRef} required />\r\n                </Form.Group>\r\n                <Form.Group id=\"password\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control type=\"password\" ref={passwordRef} required />\r\n                </Form.Group>\r\n                <Button disabled={loading} className=\"w-100 mt-3\" type=\"submit\">\r\n                  Log In\r\n                  <svg\r\n                    className=\"ms-2\"\r\n                    height=\"20\"\r\n                    width=\"20\"\r\n                    viewBox=\"0 0 448 512\"\r\n                  >\r\n                    <path\r\n                      fill=\"currentColor\"\r\n                      d=\"M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z\"\r\n                    ></path>\r\n                  </svg>\r\n                  {loading && <Loading variant=\"warning\" />}\r\n                </Button>\r\n              </Form>\r\n              <div className=\"w-100 text-center mt-3\">\r\n                <a href=\"/forgot-password\">Forgot Password?</a>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n          <div className=\"w-100 text-center mt-2\">\r\n            Need an account?{\" \"}\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                dispatch(setIsLogInFormDisplay(false));\r\n                history.push(\"/signup\");\r\n                document.title = \"SignUp - Voter List App\";\r\n                dispatch(setIsSignUpFormDisplay(true));\r\n              }}\r\n            >\r\n              Sign Up\r\n              <svg\r\n                height=\"25\"\r\n                width=\"25\"\r\n                viewBox=\"0 0 512 512\"\r\n                className=\"ms-1 pb-1\"\r\n              >\r\n                <path\r\n                  fill=\"#fff\"\r\n                  d=\"M416 448h-84c-6.6 0-12-5.4-12-12v-24c0-6.6 5.4-12 12-12h84c26.5 0 48-21.5 48-48V160c0-26.5-21.5-48-48-48h-84c-6.6 0-12-5.4-12-12V76c0-6.6 5.4-12 12-12h84c53 0 96 43 96 96v192c0 53-43 96-96 96zM167.1 83.5l-19.6 19.6c-4.8 4.8-4.7 12.5.2 17.1L260.8 230H12c-6.6 0-12 5.4-12 12v28c0 6.6 5.4 12 12 12h248.8L147.7 391.7c-4.8 4.7-4.9 12.4-.2 17.1l19.6 19.6c4.7 4.7 12.3 4.7 17 0l164.4-164c4.7-4.7 4.7-12.3 0-17l-164.4-164c-4.7-4.6-12.3-4.6-17 .1z\"\r\n                ></path>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(Login);\r\n","import CountUp from \"react-countup\";\r\n\r\ninterface Props {\r\n  totalEarnings: number | null;\r\n  totalEarningsRecieved: number;\r\n  totalWithdrawableAmount: number;\r\n}\r\nconst PaymentsSummaryTable = ({\r\n  totalEarnings,\r\n  totalEarningsRecieved,\r\n  totalWithdrawableAmount,\r\n}: Props) => {\r\n  return (\r\n    <div className=\"mt-3\">\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table\">\r\n          <thead className=\"table-light\">\r\n            <tr>\r\n              <td className=\"text-center\">Total Earnings</td>\r\n              <td className=\"text-center\">Earnings Recieved</td>\r\n              <td className=\"text-center\">Withdrawable Amount</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td className=\"text-center\">\r\n                {totalEarnings ? (\r\n                  <CountUp delay={0.5} duration={2} end={totalEarnings} />\r\n                ) : (\r\n                  0\r\n                )}\r\n              </td>\r\n              <td className=\"text-center\">\r\n                {totalEarningsRecieved ? (\r\n                  <CountUp\r\n                    delay={0.5}\r\n                    duration={2}\r\n                    end={totalEarningsRecieved}\r\n                  />\r\n                ) : (\r\n                  0\r\n                )}\r\n              </td>\r\n              <td className=\"text-center\">\r\n                {totalWithdrawableAmount ? (\r\n                  <CountUp\r\n                    delay={0.5}\r\n                    duration={2}\r\n                    end={totalWithdrawableAmount}\r\n                  />\r\n                ) : (\r\n                  0\r\n                )}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentsSummaryTable;\r\n","import React, { Dispatch, SetStateAction } from \"react\";\r\ninterface Props {\r\n  setArePaymentsHidden: Dispatch<SetStateAction<boolean>>;\r\n  arePaymentsHidden: boolean;\r\n  setIsGridView: Dispatch<SetStateAction<boolean>>;\r\n  isGridView: boolean;\r\n}\r\nconst PaymentSwitches = ({\r\n  setArePaymentsHidden,\r\n  arePaymentsHidden,\r\n  setIsGridView,\r\n  isGridView,\r\n}: Props) => {\r\n  return (\r\n    <div className=\"d-flex flex-row-reverse m-2\">\r\n      <div className=\"form-check form-switch\">\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          role=\"switch\"\r\n          id=\"flexSwitchCheckDefault\"\r\n          onClick={() => {\r\n            setArePaymentsHidden((prevValue) => !prevValue);\r\n          }}\r\n        />\r\n        <label className=\"form-check-label\">\r\n          {arePaymentsHidden ? \"View Payments\" : \"Hide Payments\"}\r\n        </label>\r\n      </div>\r\n      {!arePaymentsHidden && (\r\n        <div className=\"form-check form-switch me-3\">\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"checkbox\"\r\n            role=\"switch\"\r\n            id=\"flexSwitchCheckDefault\"\r\n            onClick={() => {\r\n              setIsGridView((prevValue) => !prevValue);\r\n            }}\r\n          />\r\n          <label className=\"form-check-label\">\r\n            {isGridView ? \"Table View\" : \"Grid View\"}\r\n          </label>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentSwitches;\r\n","import { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { getPaymentFile } from '../../helpers/paymentManagementHelper';\r\nimport { Payment } from '../../interfaces/PaymentModel';\r\nimport { PaymentService } from '../../services/PaymentService';\r\nimport { useAppSelector } from '../../store/hooks';\r\nimport PaymentTable from '../AdminPortal/PaymentTable';\r\nimport Loading from '../Loading';\r\nimport { StoreState } from '../../store/index';\r\nimport PaymentsSummaryTable from './PaymentsSummaryTable';\r\nimport PaymentSwitches from './PaymentSwitches';\r\nimport axios from 'axios';\r\n\r\nconst Payments = () => {\r\n  const source = axios.CancelToken.source();\r\n  const [payments, setPayments] = useState<null | Payment[]>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isGridView, setIsGridView] = useState(true);\r\n  const [arePaymentsHidden, setArePaymentsHidden] = useState(true);\r\n  const dashboardData = useAppSelector(\r\n    (state: StoreState) => state.app.dashboardData,\r\n  );\r\n  const currentUser = useAppSelector(\r\n    (state: StoreState) => state.app.currentUser,\r\n  );\r\n  const [totalEarningsRecieved, setTotalEarningsRecieved] = useState(0);\r\n  const [totalWithdrawableAmount, setTotalWithdrawableAmount] = useState(0);\r\n  const totalEarnings =\r\n    currentUser && dashboardData.approved * currentUser.rate;\r\n\r\n  const calcEarnings = (paymentsRecieved: Payment[]) => {\r\n    let amountsRecieved: any = [];\r\n\r\n    paymentsRecieved.forEach((payment: Payment) => {\r\n      amountsRecieved.push(payment.amount);\r\n    });\r\n    amountsRecieved = amountsRecieved.reduce(\r\n      (accumulator: number, currentValue: number) => {\r\n        return accumulator + currentValue;\r\n      },\r\n      0,\r\n    );\r\n    setTotalEarningsRecieved(amountsRecieved);\r\n    totalEarnings &&\r\n      setTotalWithdrawableAmount(totalEarnings - amountsRecieved);\r\n  };\r\n  const getPayments = async () => {\r\n    try {\r\n      const res = await PaymentService.getCurrentUserPayments({\r\n        cancelToken: source.token,\r\n      });\r\n      console.log(res);\r\n      res.success && setPayments(res.data);\r\n      res.success && calcEarnings(res.data);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPayments();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return (\r\n    <>\r\n      {loading && <Loading />}\r\n      {!loading && (\r\n        <div className=\"container\">\r\n          {payments && !payments[0] && (\r\n            <h4 className=\"my-4 text-center\">No Payments Available</h4>\r\n          )}\r\n          {payments && payments[0] && (\r\n            <div className=\"mt-5\">\r\n              <h3 className=\"text-center\">Payments Data</h3>\r\n              <PaymentSwitches\r\n                arePaymentsHidden={arePaymentsHidden}\r\n                setArePaymentsHidden={setArePaymentsHidden}\r\n                isGridView={isGridView}\r\n                setIsGridView={setIsGridView}\r\n              />\r\n\r\n              <PaymentsSummaryTable\r\n                totalEarnings={totalEarnings}\r\n                totalEarningsRecieved={totalEarningsRecieved}\r\n                totalWithdrawableAmount={totalWithdrawableAmount}\r\n              />\r\n\r\n              {!arePaymentsHidden && (\r\n                <div>\r\n                  <>\r\n                    {!isGridView && (\r\n                      <div>\r\n                        {payments && payments[0] && (\r\n                          <PaymentTable currentUserPayments={payments} />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                  <>\r\n                    {isGridView && (\r\n                      <div className=\"cpage-content\">\r\n                        {payments?.map((payment: Payment, index: number) => {\r\n                          return (\r\n                            <Card\r\n                              key={index}\r\n                              className=\"d-flex justify-content-center p-4 card-shadow\"\r\n                            >\r\n                              <p>Title: {payment.title}</p>\r\n                              <p>Amount: {payment.amount}</p>\r\n                              <p>Description: {payment.description}</p>\r\n                              {/* <p>FileName: {payment.fileName}</p> */}\r\n                              {payment.filePath && (\r\n                                <button\r\n                                  className=\"btn btn-primary\"\r\n                                  onClick={() => {\r\n                                    payment.fileName &&\r\n                                      getPaymentFile(payment.fileName);\r\n                                  }}\r\n                                >\r\n                                  View Reciept\r\n                                </button>\r\n                              )}\r\n                            </Card>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Payments;\r\n","import { Dispatch } from 'react';\r\nimport { ApiService } from '../services/ApiServices';\r\nimport { setCurrentUser, setError, setIsAccessDeniedDisplay } from '../store';\r\n\r\nexport const heading = [\r\n  'sNo',\r\n  'blockCode',\r\n  'constituencyName',\r\n  'moza',\r\n  'dehya',\r\n  'city',\r\n  'patwarHalka',\r\n  'tapaydar',\r\n  'tehseel',\r\n  'talka',\r\n  'district',\r\n  'unionCouncil',\r\n  'bookNo',\r\n  'constituency',\r\n  'gender',\r\n  'voteSNo',\r\n  'familyNo',\r\n  'name',\r\n  'maritalStatus',\r\n  'fatherHusbandName',\r\n  'cnic',\r\n  'age',\r\n  'houseNo',\r\n  'street',\r\n  'phase',\r\n  'sector',\r\n  'lane',\r\n  'boulevardAvenue',\r\n  'otherArea',\r\n  'count',\r\n  'address',\r\n  'updateNo',\r\n];\r\n\r\nexport const signUp = async (\r\n  userNameRef: any,\r\n  emailRef: any,\r\n  mobileNoRef: any,\r\n  passwordRef: any,\r\n  passwordConfirmRef: any,\r\n  dispatch: Dispatch<{ payload: any; type: string }>,\r\n  setError: any,\r\n  history: any,\r\n) => {\r\n  setError('');\r\n  const auth = ApiService.createAxios();\r\n  if (passwordRef.current) {\r\n    if (passwordConfirmRef.current) {\r\n      if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n        return setError('Passwords do not match');\r\n      }\r\n    }\r\n  }\r\n  const authRes = await auth\r\n    .post('auth/register', {\r\n      username: userNameRef.current.value,\r\n      email: emailRef.current.value,\r\n      mobileNo: mobileNoRef.current.value,\r\n      password: passwordRef.current.value,\r\n      confirmPassword: passwordConfirmRef.current.value,\r\n    })\r\n    .catch((err) => console.log(err));\r\n  if (authRes) {\r\n    try {\r\n      if (authRes.data.success) {\r\n        dispatch(\r\n          setCurrentUser({\r\n            email: emailRef.current.value,\r\n            uid: authRes.data.data._id,\r\n            ...authRes.data.data,\r\n          }),\r\n        );\r\n        localStorage.setItem('token', authRes.data.data.access_token);\r\n        history.push('/');\r\n        document.title = 'Dashboard - Voter List App';\r\n        // dispatch(setIsSignUpFormDisplay(false));\r\n      }\r\n      if (!authRes.data.success) {\r\n        if (authRes.data.error) {\r\n          if (authRes.data.error.message) {\r\n            var emailExists = authRes.data.error.message;\r\n          }\r\n          if (authRes.data.error.details) {\r\n            if (authRes.data.error.details.email) {\r\n              var invalidEmail = authRes.data.error.details.email[0];\r\n            }\r\n            if (authRes.data.error.details.password) {\r\n              var invalidPassword = authRes.data.error.details.password[0];\r\n            }\r\n          }\r\n          setError(\r\n            `${emailExists !== undefined ? emailExists : ''} \\n\r\n            ${invalidEmail !== undefined ? invalidEmail : ''} \\n \r\n            ${invalidPassword !== undefined ? invalidPassword : ''}`,\r\n          );\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n};\r\n\r\nexport const logout = async (\r\n  uid: string,\r\n  dispatch: Dispatch<{ payload: any; type: string }>,\r\n) => {\r\n  const currentToken = localStorage.getItem('token');\r\n  // return auth.signOut();\r\n  setError('');\r\n  const auth = ApiService.createAxios();\r\n\r\n  try {\r\n    const authRes = await auth.post('logout/', {\r\n      userId: uid,\r\n      accessToken: `bearer ${currentToken}`,\r\n    });\r\n    if (authRes.data.success) {\r\n      dispatch(setCurrentUser(null));\r\n      dispatch(setIsAccessDeniedDisplay(false));\r\n    }\r\n  } catch {\r\n    setError('Failed to log out');\r\n  }\r\n};\r\n","import { useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport {\r\n  setIsLoggedIn,\r\n  setIsLogInFormDisplay,\r\n  setIsSignUpFormDisplay,\r\n} from \"../store\";\r\nimport InputMask from \"react-input-mask\";\r\nimport Loading from \"./Loading\";\r\nimport { signUp } from \"../helpers/apphelper\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAppDispatch } from \"../store/hooks\";\r\n\r\nconst SignUp = () => {\r\n  const userNameRef = useRef<any>();\r\n  const emailRef = useRef<any>();\r\n  const mobileNoRef = useRef<any>();\r\n  const passwordRef = useRef<any>();\r\n  const passwordConfirmRef = useRef<any>();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useAppDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    dispatch(setIsLoggedIn(true));\r\n\r\n    await signUp(\r\n      userNameRef,\r\n      emailRef,\r\n      mobileNoRef,\r\n      passwordRef,\r\n      passwordConfirmRef,\r\n      dispatch,\r\n      setError,\r\n      history\r\n    );\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n        className=\"d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <div className=\"\" style={{ maxWidth: \"400px\" }}>\r\n          <Card>\r\n            <Card.Body>\r\n              <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group id=\"userName\">\r\n                  <Form.Label>User Name</Form.Label>\r\n                  <Form.Control type=\"text\" ref={userNameRef} required />\r\n                </Form.Group>\r\n                <Form.Group id=\"email\">\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control type=\"email\" ref={emailRef} required />\r\n                </Form.Group>\r\n                <Form.Group id=\"cnic\">\r\n                  <Form.Label>Mobile No.</Form.Label>\r\n                  <InputMask\r\n                    className=\"form-control\"\r\n                    mask=\"99999-9999999\"\r\n                    placeholder=\"92300-1112233 Format\"\r\n                    name=\"mobileNo\"\r\n                    ref={mobileNoRef}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group id=\"password\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control type=\"password\" ref={passwordRef} required />\r\n                </Form.Group>\r\n                <Form.Group id=\"password-confirm\">\r\n                  <Form.Label>Password Confirmation</Form.Label>\r\n                  <Form.Control\r\n                    className=\"mb-2\"\r\n                    type=\"password\"\r\n                    ref={passwordConfirmRef}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n                <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                  Sign Up\r\n                  {loading && <Loading variant=\"warning\" />}\r\n                </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n          <div className=\"w-100 text-center mt-2\">\r\n            Already have an account?{\" \"}\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                dispatch(setIsSignUpFormDisplay(false));\r\n                history.push(\"/login\");\r\n                document.title = \"Login - Voter List App\";\r\n                dispatch(setIsLogInFormDisplay(true));\r\n              }}\r\n            >\r\n              Login\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { getTaskFile } from \"../../helpers/taskManagementHelper\";\r\nimport { Task } from \"../../interfaces/TaskModel\";\r\nimport { TaskService } from \"../../services/TaskService\";\r\nimport Loading from \"../Loading\";\r\n\r\nconst Tasks = () => {\r\n  const source = axios.CancelToken.source();\r\n  const [tasks, setTasks] = useState<null | Task[]>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const getTasks = async () => {\r\n    try {\r\n      const res = await TaskService.getCurrentUserTasks({\r\n        cancelToken: source.token,\r\n      });\r\n      console.log(res);\r\n      setTasks(res?.data);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTasks();\r\n    return () => {\r\n      source.cancel(\"axios request cancelled\");\r\n    };\r\n  }, []);\r\n  return (\r\n    <>\r\n      {loading && <Loading />}\r\n      {!loading && (\r\n        <div className=\"container\">\r\n          {tasks && !tasks[0] && (\r\n            <h4 className=\"my-4 text-center\">No Task Assigned</h4>\r\n          )}\r\n          <div className=\"cpage-content\">\r\n            {tasks?.map((task: Task, index: number) => {\r\n              return (\r\n                <Card\r\n                  key={index}\r\n                  className=\"d-flex justify-content-center p-4 card-shadow\"\r\n                >\r\n                  <p>Title: {task.title}</p>\r\n                  <p>Description: {task.description}</p>\r\n                  <p>FileName: {task.fileName}</p>\r\n                  {task.filePath && (\r\n                    <button\r\n                      className=\"btn btn-primary\"\r\n                      onClick={() => {\r\n                        task.fileName && getTaskFile(task.fileName);\r\n                      }}\r\n                    >\r\n                      Download\r\n                    </button>\r\n                  )}\r\n                </Card>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { Dispatch, SetStateAction } from 'react';\r\nimport { VotesTableVoteRes } from '../components/Votes/VotesTable';\r\nimport { VotesModel } from '../interfaces/VotesModel';\r\nimport AuthorizedService from '../services/AuthorizedService';\r\nimport { setMessage, setMessageVariant } from '../store';\r\n\r\nexport const voteResInitial = {\r\n  next: { page: 0, limit: 0 },\r\n  prev: { page: 0, limit: 0 },\r\n  totalPages: 0,\r\n  totalRecords: 0,\r\n};\r\nlet headings = [\r\n  'blockCode',\r\n  'updateNo',\r\n  'voteSNo',\r\n  'familyNo',\r\n  'gender',\r\n  'name',\r\n  'fatherHusbandName',\r\n  'maritalStatus',\r\n  'cnic',\r\n  'age',\r\n  'houseNo',\r\n  'street',\r\n  'phase',\r\n  'sector',\r\n  'lane',\r\n  'boulevardAvenue',\r\n  'otherArea',\r\n  'constituencyName',\r\n  'moza',\r\n  'dehya',\r\n  'city',\r\n  'patwarHalka',\r\n  'tapaydar',\r\n  'tehseel',\r\n  'talka',\r\n  'district',\r\n  'unionCouncil',\r\n  'bookNo',\r\n  'constituency',\r\n];\r\n\r\nconst createFilteredVotesHeadings = async (\r\n  setFilteredVotesHeadings: Dispatch<SetStateAction<string[] | null>>,\r\n  setSearchOptions: Dispatch<SetStateAction<string[] | null>>,\r\n) => {\r\n  // let resHeadings = votesData[0] && Object.keys(votesData[0]);\r\n  let sentenceCaseHeadings: string[] = [];\r\n  if (headings) {\r\n    headings.unshift('Sr');\r\n    headings = headings.filter(\r\n      (heading: string) =>\r\n        heading !== 'filePath' &&\r\n        heading !== '_id' &&\r\n        heading !== 'enteredBy' &&\r\n        heading !== 'createdAt' &&\r\n        heading !== 'verifiedBy' &&\r\n        heading !== '__v',\r\n    );\r\n    headings.forEach((heading: string) => {\r\n      const result = heading.replace(/([A-Z])/g, ' $1');\r\n      sentenceCaseHeadings.push(\r\n        result.charAt(0).toUpperCase() + result.slice(1),\r\n      );\r\n    });\r\n    setFilteredVotesHeadings(sentenceCaseHeadings);\r\n    headings = headings.filter((heading: string) => heading !== 'Sr');\r\n    setSearchOptions(headings);\r\n  }\r\n};\r\n\r\nexport const getAuthorizedVotesPage = async (\r\n  dispatch: Dispatch<{ payload: any; type: string }>,\r\n  setVotesData: Dispatch<SetStateAction<null | VotesModel[]>>,\r\n  setVoteRes: Dispatch<SetStateAction<any>>,\r\n  pageNo: number,\r\n  limit: number,\r\n  setLoading?: Dispatch<SetStateAction<boolean>>,\r\n  setFilteredVotesHeadings?: Dispatch<SetStateAction<string[] | null>>,\r\n  setSearchOptions?: Dispatch<SetStateAction<string[] | null>>,\r\n  source?: any,\r\n) => {\r\n  const res = await AuthorizedService.getAuthorizedPage(pageNo, limit, {\r\n    cancelToken: source?.token,\r\n  });\r\n  console.log(res);\r\n\r\n  if (res && !res.success) {\r\n    dispatch(setMessageVariant('danger'));\r\n    dispatch(setMessage(res.message));\r\n    setVotesData(null);\r\n    return;\r\n  }\r\n\r\n  if (res?.results.results[0]) {\r\n    setFilteredVotesHeadings &&\r\n      setSearchOptions &&\r\n      createFilteredVotesHeadings(setFilteredVotesHeadings, setSearchOptions);\r\n    setVotesData(res.results.results);\r\n    setVoteRes({\r\n      next: res.results.next,\r\n      prev: res.results.previous,\r\n      totalPages: res.results.totalPages,\r\n      totalRecords: res.results.totalRecords,\r\n    });\r\n    setLoading && setLoading(false);\r\n  }\r\n};\r\n\r\nexport const getSearchedAuthorizedVotes = async (\r\n  dispatch: Dispatch<{ payload: any; type: string }>,\r\n  setVotesData: Dispatch<SetStateAction<VotesModel[] | null>>,\r\n  setVoteRes: Dispatch<SetStateAction<VotesTableVoteRes>>,\r\n  searchField: string,\r\n  searchTerm: string | number,\r\n  pageNo: number,\r\n  limit: number,\r\n  setLoading?: Dispatch<SetStateAction<boolean>>,\r\n) => {\r\n  const res = await AuthorizedService.getAuthorizedSearch(\r\n    searchField,\r\n    searchTerm,\r\n    pageNo,\r\n    limit,\r\n  );\r\n\r\n  if (res && !res.success) {\r\n    dispatch(setMessageVariant('danger'));\r\n    dispatch(setMessage(res.message));\r\n    setLoading && setLoading(false);\r\n    // setVotesData(null);\r\n    return;\r\n  }\r\n\r\n  if (res.results.results) {\r\n    setVotesData(res.results.results);\r\n    setVoteRes({\r\n      next: res.results.next,\r\n      prev: res.results.previous,\r\n      totalPages: res.results.totalPages,\r\n      totalRecords: res.results.totalRecords,\r\n    });\r\n    setLoading && setLoading(false);\r\n  }\r\n};\r\n\r\nexport const onVotesSearch = (\r\n  event: any,\r\n  dispatch: Dispatch<{ payload: any; type: string }>,\r\n  setVotesData: Dispatch<SetStateAction<VotesModel[] | null>>,\r\n  setVoteRes: Dispatch<SetStateAction<VotesTableVoteRes>>,\r\n  setCurrentPage: Dispatch<SetStateAction<number>>,\r\n  searchField: string,\r\n  searchTerm: string | number,\r\n  votesLimit: number,\r\n  setLoading?: Dispatch<SetStateAction<boolean>>,\r\n) => {\r\n  event.preventDefault();\r\n  if (event.key === 'Enter') {\r\n    if (!searchField) {\r\n      dispatch(setMessageVariant('danger'));\r\n      dispatch(setMessage('Search Field not Selected'));\r\n      return;\r\n    }\r\n\r\n    setLoading && setLoading(true);\r\n    getSearchedAuthorizedVotes(\r\n      dispatch,\r\n      setVotesData,\r\n      setVoteRes,\r\n      searchField,\r\n      searchTerm,\r\n      1,\r\n      votesLimit,\r\n      setLoading,\r\n    );\r\n    setCurrentPage(1);\r\n  }\r\n};\r\n","import React, { Dispatch, SetStateAction } from 'react';\r\nimport {\r\n  getAuthorizedVotesPage,\r\n  getSearchedAuthorizedVotes,\r\n} from '../../helpers/votesHelper';\r\nimport { VotesModel } from '../../interfaces/VotesModel';\r\nimport { useAppDispatch } from '../../store/hooks';\r\nimport { VotesTableVoteRes } from './VotesTable';\r\n\r\ninterface Props {\r\n  currentPageTemp: number;\r\n  setCurrentPageTemp: Dispatch<SetStateAction<number>>;\r\n  voteRes: VotesTableVoteRes;\r\n  setVoteRes: Dispatch<SetStateAction<VotesTableVoteRes>>;\r\n  currentPage: number;\r\n  setCurrentPage: Dispatch<SetStateAction<number>>;\r\n  votesLimit: number;\r\n  setLoading: Dispatch<SetStateAction<boolean>>;\r\n  searchTerm: string;\r\n  setVotesData: Dispatch<SetStateAction<VotesModel[] | null>>;\r\n  currentSearchField: string;\r\n}\r\n\r\nconst PaginatedTableFooter = ({\r\n  currentPageTemp,\r\n  setCurrentPageTemp,\r\n  voteRes,\r\n  setVoteRes,\r\n  currentPage,\r\n  setCurrentPage,\r\n  votesLimit,\r\n  setLoading,\r\n  searchTerm,\r\n  setVotesData,\r\n  currentSearchField,\r\n}: Props) => {\r\n  const dispatch = useAppDispatch();\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <div className=\"d-flex\">\r\n          {currentPage > 2 && (\r\n            <button\r\n              className=\"btn btn-primary mx-2 my-3\"\r\n              onClick={() => {\r\n                setLoading(true);\r\n                searchTerm &&\r\n                  getSearchedAuthorizedVotes(\r\n                    dispatch,\r\n                    setVotesData,\r\n                    setVoteRes,\r\n                    currentSearchField,\r\n                    searchTerm,\r\n                    1,\r\n                    votesLimit,\r\n                    setLoading,\r\n                  );\r\n                !searchTerm &&\r\n                  getAuthorizedVotesPage(\r\n                    dispatch,\r\n                    setVotesData,\r\n                    setVoteRes,\r\n                    1,\r\n                    votesLimit,\r\n                    setLoading,\r\n                  );\r\n                setCurrentPage(1);\r\n                setCurrentPageTemp(1);\r\n              }}\r\n            >\r\n              {`|<`}\r\n            </button>\r\n          )}\r\n          {currentPage > 1 && (\r\n            <button\r\n              className=\"btn btn-primary mx-2 my-3\"\r\n              onClick={() => {\r\n                setLoading(true);\r\n                searchTerm &&\r\n                  getSearchedAuthorizedVotes(\r\n                    dispatch,\r\n                    setVotesData,\r\n                    setVoteRes,\r\n                    currentSearchField,\r\n                    searchTerm,\r\n                    currentPage - 1,\r\n                    votesLimit,\r\n                    setLoading,\r\n                  );\r\n                !searchTerm &&\r\n                  getAuthorizedVotesPage(\r\n                    dispatch,\r\n                    setVotesData,\r\n                    setVoteRes,\r\n                    currentPage - 1,\r\n                    votesLimit,\r\n                    setLoading,\r\n                  );\r\n                setCurrentPage((prevValue) => {\r\n                  setCurrentPageTemp(prevValue - 1);\r\n                  return prevValue - 1;\r\n                });\r\n              }}\r\n            >\r\n              {`<Prev`}\r\n            </button>\r\n          )}\r\n          <input\r\n            className=\"form-control mx-2 my-3\"\r\n            style={{ width: 4 + 'rem' }}\r\n            type=\"number\"\r\n            value={currentPageTemp}\r\n            onChange={(e: any) => setCurrentPageTemp(e.target.value)}\r\n            onKeyUp={(event) => {\r\n              if (event.key === 'Enter') {\r\n                setLoading(true);\r\n                searchTerm &&\r\n                  getSearchedAuthorizedVotes(\r\n                    dispatch,\r\n                    setVotesData,\r\n                    setVoteRes,\r\n                    currentSearchField,\r\n                    searchTerm,\r\n                    currentPageTemp,\r\n                    votesLimit,\r\n                    setLoading,\r\n                  );\r\n                !searchTerm &&\r\n                  getAuthorizedVotesPage(\r\n                    dispatch,\r\n                    setVotesData,\r\n                    setVoteRes,\r\n                    currentPageTemp,\r\n                    votesLimit,\r\n                    setLoading,\r\n                  );\r\n                setCurrentPage(currentPageTemp);\r\n              }\r\n            }}\r\n          />\r\n          {currentPage < voteRes.totalPages && (\r\n            <button\r\n              className=\"btn btn-primary mx-2 my-3\"\r\n              onClick={() => {\r\n                setLoading(true);\r\n                searchTerm &&\r\n                  getSearchedAuthorizedVotes(\r\n                    dispatch,\r\n                    setVotesData,\r\n                    setVoteRes,\r\n                    currentSearchField,\r\n                    searchTerm,\r\n                    currentPage + 1,\r\n                    votesLimit,\r\n                    setLoading,\r\n                  );\r\n                !searchTerm &&\r\n                  getAuthorizedVotesPage(\r\n                    dispatch,\r\n                    setVotesData,\r\n                    setVoteRes,\r\n                    currentPage + 1,\r\n                    votesLimit,\r\n                    setLoading,\r\n                  );\r\n                setCurrentPage((prevValue) => {\r\n                  setCurrentPageTemp(prevValue + 1);\r\n                  return prevValue + 1;\r\n                });\r\n              }}\r\n            >\r\n              {`Next>`}\r\n            </button>\r\n          )}\r\n          {currentPage < voteRes.totalPages - 1 && (\r\n            <button\r\n              className=\"btn btn-primary mx-2 my-3\"\r\n              onClick={() => {\r\n                setLoading(true);\r\n                searchTerm &&\r\n                  getSearchedAuthorizedVotes(\r\n                    dispatch,\r\n                    setVotesData,\r\n                    setVoteRes,\r\n                    currentSearchField,\r\n                    searchTerm,\r\n                    voteRes.totalPages,\r\n                    votesLimit,\r\n                    setLoading,\r\n                  );\r\n                !searchTerm &&\r\n                  getAuthorizedVotesPage(\r\n                    dispatch,\r\n                    setVotesData,\r\n                    setVoteRes,\r\n                    voteRes.totalPages,\r\n                    votesLimit,\r\n                    setLoading,\r\n                  );\r\n                setCurrentPage(voteRes.totalPages);\r\n                setCurrentPageTemp(voteRes.totalPages);\r\n              }}\r\n            >\r\n              {`>|`}\r\n            </button>\r\n          )}\r\n        </div>\r\n        {voteRes && (\r\n          <div>\r\n            <span className=\"me-3 p-1\">\r\n              (Records:{' '}\r\n              {(currentPageTemp < voteRes.totalPages\r\n                ? currentPageTemp * 50\r\n                : voteRes.totalRecords) +\r\n                ' of ' +\r\n                voteRes.totalRecords}\r\n              )\r\n            </span>\r\n            <span className=\"me-3 p-1\">\r\n              (Page: {currentPageTemp + ' of ' + voteRes.totalPages})\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaginatedTableFooter;\r\n","import axios from 'axios';\r\nimport { Fragment, SetStateAction, useState } from 'react';\r\nimport { Dispatch } from 'react';\r\nimport { useEffect } from 'react';\r\nimport {\r\n  getAuthorizedVotesPage,\r\n  getSearchedAuthorizedVotes,\r\n  onVotesSearch,\r\n  voteResInitial,\r\n} from '../../helpers/votesHelper';\r\nimport { VotesModel } from '../../interfaces/VotesModel';\r\nimport AuthorizedService from '../../services/AuthorizedService';\r\nimport { setMessage, setMessageVariant } from '../../store';\r\nimport { useAppDispatch } from '../../store/hooks';\r\nimport CModal from '../CModal';\r\nimport Loading from '../Loading';\r\nimport PaginatedTableFooter from './PaginatedTableFooter';\r\n\r\ninterface Props {\r\n  setVoteUpdateData: Dispatch<SetStateAction<VotesModel | null>>;\r\n  setVoteUpdateForm: Dispatch<SetStateAction<boolean>>;\r\n  voteUpdateForm: boolean;\r\n}\r\n\r\nexport interface VotesTableVoteRes {\r\n  next: { page: number; limit: number };\r\n  prev: { page: number; limit: number };\r\n  totalPages: number;\r\n  totalRecords: number;\r\n}\r\n\r\nconst VotesTable = ({\r\n  setVoteUpdateData,\r\n  setVoteUpdateForm,\r\n  voteUpdateForm,\r\n}: Props) => {\r\n  const dispatch = useAppDispatch();\r\n  const votesLimit = 50;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentPageTemp, setCurrentPageTemp] = useState(1);\r\n  const [searchOptions, setSearchOptions] = useState<string[] | null>(null);\r\n  const [currentSearchField, setCurrentSearchField] = useState('');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [votesData, setVotesData] = useState<null | VotesModel[]>(null);\r\n  const [voteRes, setVoteRes] = useState<VotesTableVoteRes>(voteResInitial);\r\n  const [filteredVotesHeadings, setFilteredVotesHeadings] = useState<\r\n    null | string[]\r\n  >(null);\r\n  const deleteAuthorizedVote = async (id: string) => {\r\n    const res = await AuthorizedService.deleteAuthorizedRecord(id);\r\n\r\n    if (res && !res.success) {\r\n      dispatch(setMessageVariant('danger'));\r\n      dispatch(setMessage(res.message));\r\n      return;\r\n    }\r\n\r\n    dispatch(setMessageVariant('success'));\r\n    dispatch(setMessage(res.message));\r\n\r\n    getAuthorizedVotesPage(\r\n      dispatch,\r\n      setVotesData,\r\n      setVoteRes,\r\n      currentPage,\r\n      votesLimit,\r\n      setLoading,\r\n    );\r\n  };\r\n  const onSubmit = (vote: VotesModel) => {\r\n    vote._id && deleteAuthorizedVote(vote._id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const source = axios.CancelToken.source();\r\n    !searchTerm &&\r\n      getAuthorizedVotesPage(\r\n        dispatch,\r\n        setVotesData,\r\n        setVoteRes,\r\n        currentPage,\r\n        votesLimit,\r\n        setLoading,\r\n        setFilteredVotesHeadings,\r\n        setSearchOptions,\r\n        source,\r\n      );\r\n    return () => {\r\n      source.cancel('axios request cancelled');\r\n    };\r\n  }, [voteUpdateForm, currentPage]);\r\n  return (\r\n    <>\r\n      {loading && <Loading />}\r\n      {!loading && (\r\n        <>\r\n          {(!votesData || (votesData && !votesData[0])) && (\r\n            <h5 className=\"text-center my-3\">No Authorized Votes Data</h5>\r\n          )}\r\n          {votesData![0] && (\r\n            <div className=\"pb-5\">\r\n              <h5 className=\"text-center my-3\">Authorized Votes</h5>\r\n              <div className=\"input-group mb-3\">\r\n                <select\r\n                  className=\"form-select\"\r\n                  style={{ maxWidth: 10 + 'rem' }}\r\n                  value={currentSearchField}\r\n                  onChange={(e: any) => {\r\n                    setCurrentSearchField(e.target.value);\r\n                  }}\r\n                  required\r\n                >\r\n                  <option>Select Field</option>\r\n                  {searchOptions?.map((heading, index) => {\r\n                    return <option key={index}>{heading}</option>;\r\n                  })}\r\n                </select>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"search\"\r\n                  placeholder=\"Search...\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => {\r\n                    setSearchTerm(e.target.value);\r\n                  }}\r\n                  onKeyUp={(e) => {\r\n                    onVotesSearch(\r\n                      e,\r\n                      dispatch,\r\n                      setVotesData,\r\n                      setVoteRes,\r\n                      setCurrentPage,\r\n                      currentSearchField,\r\n                      searchTerm,\r\n                      votesLimit,\r\n                      setLoading,\r\n                    );\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      {filteredVotesHeadings?.map(\r\n                        (heading: string, index: number) => (\r\n                          <th className=\"text-center\" key={index} scope=\"col\">\r\n                            {heading}\r\n                          </th>\r\n                        ),\r\n                      )}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {votesData?.map((vote: VotesModel, index: number) => {\r\n                      return (\r\n                        <Fragment key={index}>\r\n                          <tr\r\n                            // className=\"dropdown-toggle\"\r\n                            data-bs-toggle=\"dropdown\"\r\n                            aria-expanded=\"false\"\r\n                          >\r\n                            <th scope=\"row\">\r\n                              {currentPage === 1\r\n                                ? index + 1\r\n                                : (currentPage - 1) * votesLimit + index + 1}\r\n                            </th>\r\n                            <td className=\"text-center\">{vote.blockCode}</td>\r\n                            <td className=\"text-center\">{vote.updateNo}</td>\r\n                            <td className=\"text-center\">{vote.voteSNo}</td>\r\n                            <td className=\"text-center\">{vote.familyNo}</td>\r\n                            <td className=\"text-center\">{vote.gender}</td>\r\n                            <td className=\"text-center\">{vote.name}</td>\r\n                            <td className=\"text-center\">\r\n                              {vote.fatherHusbandName}\r\n                            </td>\r\n                            <td className=\"text-center\">\r\n                              {vote.maritalStatus}\r\n                            </td>\r\n                            <td className=\"text-center\">{vote.cnic}</td>\r\n                            <td className=\"text-center\">{vote.age}</td>\r\n                            <td className=\"text-center\">{vote.houseNo}</td>\r\n                            <td className=\"text-center\">{vote.street}</td>\r\n                            <td className=\"text-center\">{vote.phase}</td>\r\n                            <td className=\"text-center\">{vote.sector}</td>\r\n                            <td className=\"text-center\">{vote.lane}</td>\r\n                            <td className=\"text-center\">\r\n                              {vote.boulevardAvenue}\r\n                            </td>\r\n                            <td className=\"text-center\">{vote.otherArea}</td>\r\n                            <td className=\"text-center\">\r\n                              {vote.constituencyName}\r\n                            </td>\r\n                            <td className=\"text-center\">{vote.moza}</td>\r\n                            <td className=\"text-center\">{vote.dehya}</td>\r\n                            <td className=\"text-center\">{vote.city}</td>\r\n                            <td className=\"text-center\">{vote.patwarHalka}</td>\r\n                            <td className=\"text-center\">{vote.tapaydar}</td>\r\n                            <td className=\"text-center\">{vote.tehseel}</td>\r\n                            <td className=\"text-center\">{vote.talka}</td>\r\n                            <td className=\"text-center\">{vote.district}</td>\r\n                            <td className=\"text-center\">{vote.unionCouncil}</td>\r\n                            <td className=\"text-center\">{vote.bookNo}</td>\r\n                            <td className=\"text-center\">{vote.constituency}</td>\r\n                          </tr>\r\n                          <ul className=\"dropdown-menu dropdown-menu-dark\">\r\n                            <li>\r\n                              <button\r\n                                className=\"dropdown-item btn text-primary\"\r\n                                onClick={() => {\r\n                                  setVoteUpdateData(\r\n                                    !voteUpdateForm ? vote : null,\r\n                                  );\r\n                                  setVoteUpdateForm((prevV) => !prevV);\r\n                                }}\r\n                              >\r\n                                Update\r\n                              </button>\r\n                            </li>\r\n                            <li>\r\n                              <CModal\r\n                                heading={\r\n                                  'Are you sure you want to delete this Vote?'\r\n                                }\r\n                                triggerButtonContent=\"delete\"\r\n                                triggerButtonVariant=\"danger\"\r\n                                onSubmit={() => {\r\n                                  onSubmit(vote);\r\n                                }}\r\n                                btnClasses=\"dropdown-item text-primary\"\r\n                              />\r\n                            </li>\r\n                          </ul>\r\n                        </Fragment>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <PaginatedTableFooter\r\n                currentPageTemp={currentPageTemp}\r\n                setCurrentPageTemp={setCurrentPageTemp}\r\n                voteRes={voteRes}\r\n                setVoteRes={setVoteRes}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                votesLimit={votesLimit}\r\n                setLoading={setLoading}\r\n                searchTerm={searchTerm}\r\n                setVotesData={setVotesData}\r\n                currentSearchField={currentSearchField}\r\n              />\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VotesTable;\r\n","import { Dispatch, SetStateAction, useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport InputMask from 'react-input-mask';\r\nimport { useForm } from '../../helpers/useForm';\r\nimport { User } from '../../interfaces/User';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\nimport CModal from '../CModal';\r\nimport { setMessage, setMessageVariant } from '../../store';\r\nimport { dataEntryFormInitial } from '../../helpers/dataEntryHelper';\r\nimport Loading from '../Loading';\r\nimport { StoreState } from '../../store/index';\r\nimport { VotesModel } from '../../interfaces/VotesModel';\r\nimport AuthorizedService from '../../services/AuthorizedService';\r\n\r\ninterface Props {\r\n  voteUpdateData: VotesModel | null;\r\n  setVoteUpdateForm: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst VotesUpdateForm = ({ voteUpdateData, setVoteUpdateForm }: Props) => {\r\n  const dispatch = useAppDispatch();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const currentUser: User | null = useAppSelector(\r\n    (state: StoreState) => state.app.currentUser,\r\n  );\r\n  const { onChange, onSubmit, data, setData } = useForm(\r\n    submitVoteCallback,\r\n    voteUpdateData,\r\n  );\r\n\r\n  async function submitVoteCallback(data: any) {\r\n    const res = await AuthorizedService.updateAuthorizedVote(data);\r\n    console.log(res);\r\n\r\n    if (res && res.success) {\r\n      setData(dataEntryFormInitial);\r\n      dispatch(setMessageVariant('info'));\r\n      dispatch(setMessage('Vote Updated SuccessFully'));\r\n      setVoteUpdateForm(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 250);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loading />}\r\n      {!loading && (\r\n        <Form className=\"pb-5\">\r\n          <div className=\"row\">\r\n            <h3 className=\"text-center p-5\">Update Authorized Vote</h3>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"blockCode\">\r\n                <Form.Label>Block Code</Form.Label>\r\n                <Form.Select\r\n                  name=\"blockCode\"\r\n                  value={data.blockCode ? data.blockCode : ''}\r\n                  onChange={onChange}\r\n                  required\r\n                >\r\n                  <option>\r\n                    {data.blockCode\r\n                      ? `Current: ${data.blockCode}`\r\n                      : 'Select Block Code'}\r\n                  </option>\r\n                  {currentUser &&\r\n                    currentUser.assignedBlockCodes.map((blockCode) => (\r\n                      <option key={blockCode} value={blockCode}>\r\n                        {blockCode}\r\n                      </option>\r\n                    ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"constituencyName\">\r\n                <Form.Label>Constituency Name</Form.Label>\r\n                <Form.Control\r\n                  name=\"constituencyName\"\r\n                  value={data.constituencyName}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"moza\">\r\n                <Form.Label>Moza</Form.Label>\r\n                <Form.Control\r\n                  name=\"moza\"\r\n                  value={data.moza}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"dehya\">\r\n                <Form.Label>Dehya</Form.Label>\r\n                <Form.Control\r\n                  name=\"dehya\"\r\n                  value={data.dehya}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"city\">\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control\r\n                  name=\"city\"\r\n                  value={data.city}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"patwarHalka\">\r\n                <Form.Label>Patwar Halka</Form.Label>\r\n                <Form.Control\r\n                  name=\"patwarHalka\"\r\n                  value={data.patwarHalka}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"tapaydar\">\r\n                <Form.Label>Tapaydar</Form.Label>\r\n                <Form.Control\r\n                  name=\"tapaydar\"\r\n                  value={data.tapaydar}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"tehseel\">\r\n                <Form.Label>Tehseel</Form.Label>\r\n                <Form.Control\r\n                  name=\"tehseel\"\r\n                  value={data.tehseel}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"talka\">\r\n                <Form.Label>Talka</Form.Label>\r\n                <Form.Control\r\n                  name=\"talka\"\r\n                  value={data.talka}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"district\">\r\n                <Form.Label>District</Form.Label>\r\n                <Form.Control\r\n                  name=\"district\"\r\n                  value={data.district}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"unionCouncil\">\r\n                <Form.Label>Union Council</Form.Label>\r\n                <Form.Control\r\n                  name=\"unionCouncil\"\r\n                  value={data.unionCouncil}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"bookNo\">\r\n                <Form.Label>Book No</Form.Label>\r\n                <Form.Control\r\n                  name=\"bookNo\"\r\n                  value={data.bookNo}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"constituency\">\r\n                <Form.Label>Constituency</Form.Label>\r\n                <Form.Control\r\n                  name=\"constituency\"\r\n                  value={data.constituency}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"gender\">\r\n                <Form.Label>Gender</Form.Label>\r\n                <Form.Select\r\n                  name=\"gender\"\r\n                  value={data.gender ? data.gender : ''}\r\n                  onChange={onChange}\r\n                  required\r\n                >\r\n                  <option>\r\n                    {data.gender\r\n                      ? `Current: ${data.gender} select the correct`\r\n                      : `Select Gender`}\r\n                  </option>\r\n                  <option value=\"MALE\">Male</option>\r\n                  <option value=\"FEMALE\">Female</option>\r\n                  <option value=\"OTHERS\">Others</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"voteSNo\">\r\n                <Form.Label>Vote S No</Form.Label>\r\n                <Form.Control\r\n                  name=\"voteSNo\"\r\n                  value={data.voteSNo ? data.voteSNo : ''}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"familyNo\">\r\n                <Form.Label>Family No</Form.Label>\r\n                <Form.Control\r\n                  name=\"familyNo\"\r\n                  value={data.familyNo ? data.familyNo : ''}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"name\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  name=\"name\"\r\n                  value={data.name ? data.name : ''}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"maritalStatus\">\r\n                <Form.Label>Marital Status</Form.Label>\r\n                <Form.Select\r\n                  name=\"maritalStatus\"\r\n                  value={data.maritalStatus ? data.maritalStatus : ''}\r\n                  onChange={onChange}\r\n                  required\r\n                >\r\n                  <option>\r\n                    {data.maritalStatus\r\n                      ? `Current: ${data.maritalStatus} select the correct`\r\n                      : `Select Marital Status`}\r\n                  </option>\r\n                  <option value=\"MARRIED\">Married</option>\r\n                  <option value=\"UNMARRIED\">Unmarried</option>\r\n                  <option value=\"-\">-</option>\r\n                </Form.Select>\r\n                {/* <Form.Control\r\n                name=\"maritalStatus\"\r\n                value={data.maritalStatus}\r\n                onChange={onChange}\r\n              /> */}\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"fatherHusbandName\">\r\n                <Form.Label>Father|Husband Name</Form.Label>\r\n                <Form.Control\r\n                  name=\"fatherHusbandName\"\r\n                  value={data.fatherHusbandName ? data.fatherHusbandName : ''}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"cnic\">\r\n                <Form.Label>CNIC</Form.Label>\r\n                <InputMask\r\n                  className=\"form-control\"\r\n                  mask=\"99999-9999999-9\"\r\n                  name=\"cnic\"\r\n                  value={data.cnic ? data.cnic : ''}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"Age\">\r\n                <Form.Label>Age</Form.Label>\r\n                <Form.Control\r\n                  name=\"age\"\r\n                  value={data.age ? data.age : ''}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"houseNo\">\r\n                <Form.Label>House No</Form.Label>\r\n                <Form.Control\r\n                  name=\"houseNo\"\r\n                  value={data.houseNo ? data.houseNo : ''}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"street\">\r\n                <Form.Label>Street</Form.Label>\r\n                <Form.Control\r\n                  name=\"street\"\r\n                  value={data.street ? data.street : ''}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"phase\">\r\n                <Form.Label>Phase</Form.Label>\r\n                <Form.Control\r\n                  name=\"phase\"\r\n                  value={data.phase ? data.phase : ''}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"sector\">\r\n                <Form.Label>Sector</Form.Label>\r\n                <Form.Control\r\n                  name=\"sector\"\r\n                  value={data.sector ? data.sector : ''}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"lane\">\r\n                <Form.Label>Lane</Form.Label>\r\n                <Form.Control\r\n                  name=\"lane\"\r\n                  value={data.lane ? data.lane : ''}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"boulevardAvenue\">\r\n                <Form.Label>Boulevard|Avenue</Form.Label>\r\n                <Form.Control\r\n                  name=\"boulevardAvenue\"\r\n                  value={data.boulevardAvenue ? data.boulevardAvenue : ''}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"otherArea\">\r\n                <Form.Label>Other Area</Form.Label>\r\n                <Form.Control\r\n                  name=\"otherArea\"\r\n                  value={data.otherArea ? data.otherArea : ''}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className={`col col-xs-12 col-sm-4 p-1 br-5`}>\r\n              <Form.Group id=\"updateNo\">\r\n                <Form.Label>Update Number</Form.Label>\r\n                <Form.Control\r\n                  name=\"updateNo\"\r\n                  value={data.updateNo ? data.updateNo : ''}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex justify-content-center\">\r\n            <CModal\r\n              heading={'I Have Reviewed All Entries'}\r\n              triggerButtonContent=\"Update\"\r\n              onSubmit={onSubmit}\r\n            />\r\n            <button\r\n              className=\"btn btn-danger mx-3 mt-5 w-25\"\r\n              onClick={() => {\r\n                setVoteUpdateForm(false);\r\n              }}\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VotesUpdateForm;\r\n","import React, { useState } from \"react\";\r\nimport { VotesModel } from \"../../interfaces/VotesModel\";\r\nimport VotesTable from \"./VotesTable\";\r\nimport VotesUpdateForm from \"./VotesUpdateForm\";\r\n\r\nconst Votes = () => {\r\n  const [voteUpdateForm, setVoteUpdateForm] = useState(false);\r\n  const [voteUpdateData, setVoteUpdateData] = useState<null | VotesModel>(null);\r\n  return (\r\n    <div className=\"container\">\r\n      {!voteUpdateForm && (\r\n        <VotesTable\r\n          setVoteUpdateData={setVoteUpdateData}\r\n          setVoteUpdateForm={setVoteUpdateForm}\r\n          voteUpdateForm={voteUpdateForm}\r\n        />\r\n      )}\r\n      {voteUpdateForm && (\r\n        <VotesUpdateForm\r\n          voteUpdateData={voteUpdateData}\r\n          setVoteUpdateForm={setVoteUpdateForm}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Votes;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst InvalidRoute = () => {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"d-flex flex-column justify-content-center\"\r\n        style={{ height: 100 + \"vh\" }}\r\n      >\r\n        <h1 className=\"text-center align-middle\">404 Page Not Found!</h1>\r\n        <Link className=\" text-center align-middle display-6\" to=\"/\">\r\n          Go Back\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InvalidRoute;\r\n","import React, { Dispatch, SetStateAction, useEffect } from 'react';\r\nimport { Card, Form } from 'react-bootstrap';\r\nimport { useForm } from '../helpers/useForm';\r\nimport { UserService } from '../services/UserService';\r\nimport { setMessage, setMessageVariant } from '../store';\r\nimport { useAppDispatch } from '../store/hooks';\r\n\r\nexport interface ResetPasswordModel {\r\n  oldPassword: string;\r\n  newPassword: string;\r\n  confirmPassword: string;\r\n}\r\ninterface Props {\r\n  setResetPasswordForm: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst ResetPassword = ({ setResetPasswordForm }: Props) => {\r\n  const dispatch = useAppDispatch();\r\n  const resetPasswordFormInitial = {\r\n    oldPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: '',\r\n  };\r\n  const { onChange, onSubmit, data, setData } = useForm(\r\n    resetPasswordCallback,\r\n    resetPasswordFormInitial,\r\n  );\r\n  async function resetPasswordCallback(data: ResetPasswordModel) {\r\n    const res = await UserService.resetPassword(data);\r\n    console.log(res);\r\n    if (!res?.success) {\r\n      dispatch(setMessageVariant('danger'));\r\n      dispatch(setMessage(res.message));\r\n      return;\r\n    }\r\n    if (res?.success) {\r\n      dispatch(setMessageVariant('info'));\r\n      dispatch(setMessage(res.message));\r\n      setData({ ...resetPasswordFormInitial });\r\n      setResetPasswordForm(false);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    setData({ ...resetPasswordFormInitial });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Card className=\"d-flex justify-content-center p-4 card-shadow\">\r\n        <h4 className=\"text-center mb-3\">Reset Password</h4>\r\n        <Form.Group id=\"oldPassword\">\r\n          <Form.Label>Old Password: </Form.Label>\r\n          <Form.Control\r\n            name=\"oldPassword\"\r\n            value={data.oldPassword}\r\n            type=\"password\"\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group id=\"newPassword\">\r\n          <Form.Label>New Password: </Form.Label>\r\n          <Form.Control\r\n            name=\"newPassword\"\r\n            value={data.newPassword}\r\n            type=\"password\"\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group id=\"confirmPassword\">\r\n          <Form.Label>Confirm Password: </Form.Label>\r\n          <Form.Control\r\n            name=\"confirmPassword\"\r\n            value={data.confirmPassword}\r\n            type=\"password\"\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <hr />\r\n        <div className=\"d-flex justify-content-center\">\r\n          <button className=\"btn btn-primary w-50\" onClick={onSubmit}>\r\n            Reset Password\r\n          </button>\r\n        </div>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Card, Form } from 'react-bootstrap';\r\nimport { useForm } from '../helpers/useForm';\r\nimport InputMask from 'react-input-mask';\r\nimport {\r\n  setCurrentUser,\r\n  setMessage,\r\n  setMessageVariant,\r\n  StoreState,\r\n} from '../store';\r\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\r\nimport Loading from './Loading';\r\nimport { UserService } from '../services/UserService';\r\nimport ResetPassword from './ResetPassword';\r\n\r\nconst Profile = () => {\r\n  const dispatch = useAppDispatch();\r\n  const currentUser = useAppSelector(\r\n    (state: StoreState) => state.app.currentUser,\r\n  );\r\n  const profileUpdateFormInitial = {\r\n    username: '',\r\n    mobileNo: '',\r\n  };\r\n  const [loading, setLoading] = useState(true);\r\n  const [resetPasswordForm, setResetPasswordForm] = useState(false);\r\n  const [profileUpdateForm, setProfileUpdateForm] = useState(false);\r\n  const { onChange, onSubmit, data, setData } = useForm(\r\n    updateProfileCallback,\r\n    profileUpdateFormInitial,\r\n  );\r\n\r\n  async function updateProfileCallback(data: any) {\r\n    const res = await UserService.updateProfile(data);\r\n    console.log(res);\r\n    if (!res?.success) {\r\n      dispatch(setMessageVariant('danger'));\r\n      dispatch(setMessage(res.error.message));\r\n      return;\r\n    }\r\n    if (res?.success) {\r\n      dispatch(setCurrentUser(res.data));\r\n      setData(profileUpdateFormInitial);\r\n      dispatch(setMessageVariant('info'));\r\n      dispatch(setMessage(res.message));\r\n      setProfileUpdateForm(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setData({\r\n        ...data,\r\n        username: currentUser?.username,\r\n        mobileNo: currentUser?.mobileNo,\r\n      });\r\n      setLoading(false);\r\n    }, 500);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loading />}\r\n      {!loading && (\r\n        <div className=\"container\">\r\n          <h4 className=\"text-center my-1\">Profile</h4>\r\n          <div className=\"d-flex flex-row-reverse m-2\">\r\n            <button\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                setProfileUpdateForm((prevV) => !prevV);\r\n                setData({\r\n                  ...data,\r\n                  username: currentUser?.username,\r\n                  mobileNo: currentUser?.mobileNo,\r\n                });\r\n                setResetPasswordForm(false);\r\n              }}\r\n            >\r\n              <svg height=\"30\" width=\"30\" viewBox=\"0 0 512 512\">\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z\"\r\n                ></path>\r\n              </svg>\r\n            </button>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                setResetPasswordForm((prevV) => !prevV);\r\n                setProfileUpdateForm(false);\r\n              }}\r\n            >\r\n              Reset Password\r\n            </button>\r\n          </div>\r\n\r\n          {!profileUpdateForm && !resetPasswordForm && (\r\n            <Card className=\"d-flex justify-content-center p-4 card-shadow\">\r\n              <h4 className=\"text-center mb-3\">Profile Data</h4>\r\n              <h5>Email: {currentUser?.email}</h5>\r\n              <h5>Name: {currentUser?.username}</h5>\r\n              <h5>Mobile No: {currentUser?.mobileNo}</h5>\r\n              <h5>Role: {currentUser?.role}</h5>\r\n              <h5>Rate: {currentUser?.rate}</h5>\r\n            </Card>\r\n          )}\r\n\r\n          {profileUpdateForm && (\r\n            <Card className=\"d-flex justify-content-center p-4 card-shadow\">\r\n              <h4 className=\"text-center mb-3\">Update Profile</h4>\r\n              <h5>Email: {currentUser?.email}</h5>\r\n              <Form.Group id=\"username\">\r\n                <Form.Label>Name: </Form.Label>\r\n                <Form.Control\r\n                  name=\"username\"\r\n                  value={data.username}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <Form.Group id=\"mobileNo\">\r\n                <Form.Label>Mobile No:</Form.Label>\r\n                <InputMask\r\n                  className=\"form-control\"\r\n                  mask=\"99999-9999999\"\r\n                  placeholder=\"92300-1112233 Format\"\r\n                  name=\"mobileNo\"\r\n                  value={data.mobileNo}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <h5>Role: {currentUser?.role}</h5>\r\n              <h5>Rate: {currentUser?.rate}</h5>\r\n              <hr />\r\n              <div className=\"d-flex justify-content-center\">\r\n                <button className=\"btn btn-primary w-50\" onClick={onSubmit}>\r\n                  Update\r\n                </button>\r\n              </div>\r\n            </Card>\r\n          )}\r\n          {resetPasswordForm && (\r\n            <ResetPassword setResetPasswordForm={setResetPasswordForm} />\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { useAppSelector } from '../store/hooks';\r\nimport AdminPortal from './AdminPortal/AdminPortal';\r\nimport Authorize from './Authorize/Authorize';\r\nimport Dashboard from './Dashboard/Dashboard';\r\nimport DataEntry from './DataEntry/DataEntry';\r\nimport Login from './Login';\r\nimport Payments from './Payments/Payments';\r\nimport SignUp from './SignUp';\r\nimport Tasks from './Tasks/Tasks';\r\nimport { StoreState } from './../store/index';\r\nimport Votes from './Votes/Votes';\r\nimport InvalidRoute from './InvalidRoute';\r\nimport Profile from './Profile';\r\n\r\nconst Routes = () => {\r\n  const currentUser = useAppSelector(\r\n    (state: StoreState) => state.app.currentUser,\r\n  );\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          {currentUser ? (\r\n            <Dashboard />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/login',\r\n              }}\r\n            />\r\n          )}\r\n        </Route>\r\n        <Route path=\"/dataEntry\" exact>\r\n          {currentUser ? (\r\n            <DataEntry />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/login',\r\n              }}\r\n            />\r\n          )}\r\n        </Route>\r\n        <Route path=\"/tasks\" exact>\r\n          {currentUser ? (\r\n            <Tasks />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/login',\r\n              }}\r\n            />\r\n          )}\r\n        </Route>\r\n        <Route path=\"/payments\" exact>\r\n          {currentUser ? (\r\n            <Payments />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/login',\r\n              }}\r\n            />\r\n          )}\r\n        </Route>\r\n        <Route path=\"/votes\" exact>\r\n          {currentUser ? (\r\n            <Votes />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/login',\r\n              }}\r\n            />\r\n          )}\r\n        </Route>\r\n        <Route path=\"/authorize\" exact>\r\n          {currentUser ? (\r\n            <Authorize />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/login',\r\n              }}\r\n            />\r\n          )}\r\n        </Route>\r\n        <Route path=\"/adminPortal\" exact>\r\n          {currentUser ? (\r\n            <AdminPortal />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/login',\r\n              }}\r\n            />\r\n          )}\r\n        </Route>\r\n        <Route path=\"/profile\" exact>\r\n          {currentUser ? (\r\n            <Profile />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/login',\r\n              }}\r\n            />\r\n          )}\r\n        </Route>\r\n\r\n        <Route path=\"/signup\" exact>\r\n          <SignUp />\r\n        </Route>\r\n        <Route path=\"/login\" exact>\r\n          <Login />\r\n        </Route>\r\n        <Route path=\"*\">\r\n          <InvalidRoute />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { memo, useEffect } from 'react';\r\nimport { setMessage } from '../store';\r\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\r\nimport { StoreState } from './../store/index';\r\n\r\ninterface Props extends React.AllHTMLAttributes<any> {\r\n  msg: string;\r\n  variant:\r\n    | 'primary'\r\n    | 'secondary'\r\n    | 'success'\r\n    | 'danger'\r\n    | 'warning'\r\n    | 'info'\r\n    | 'light'\r\n    | 'dark';\r\n}\r\n\r\nconst Message = (props: Props) => {\r\n  const dispatch = useAppDispatch();\r\n  const msg = useAppSelector((state: StoreState) => state.app.message);\r\n  const { variant, ...others } = props;\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      dispatch(setMessage(''));\r\n    }, 5000);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [msg]);\r\n  return (\r\n    <>\r\n      <div\r\n        className={`alert alert-${variant} alert-dismissible fade show notify`}\r\n        role=\"alert\"\r\n        {...others}\r\n      >\r\n        {msg}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(Message);\r\n","import { memo, useEffect, useState } from 'react';\r\nimport AppLoading from './components/AppLoading';\r\nimport NavLinks from './components/NavLinks';\r\nimport Navbar from './components/Navbar';\r\nimport './App.scss';\r\nimport { useAppDispatch, useAppSelector } from './store/hooks';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { getUnAuthorizedList } from './helpers/authorizeHelper';\r\nimport Routes from './components/Routes';\r\nimport Message from './components/Message';\r\nimport { User } from './interfaces/User';\r\nimport { StoreState } from './store/index';\r\n\r\nconst App = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useAppDispatch();\r\n  const currentUser: User | null = useAppSelector(\r\n    (state: StoreState) => state.app.currentUser,\r\n  );\r\n  const message: null | string = useAppSelector(\r\n    (state: StoreState) => state.app.message,\r\n  );\r\n  const messageVariant:\r\n    | 'primary'\r\n    | 'secondary'\r\n    | 'success'\r\n    | 'danger'\r\n    | 'warning'\r\n    | 'info'\r\n    | 'light'\r\n    | 'dark' = useAppSelector((state: StoreState) => state.app.messageVariant);\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    currentUser &&\r\n      currentUser.role === 'admin' &&\r\n      getUnAuthorizedList(dispatch);\r\n    setLoading(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentUser]);\r\n  return (\r\n    <>\r\n      <Router>\r\n        {loading && <AppLoading />}\r\n        {!loading && (\r\n          <>\r\n            <Navbar />\r\n            {currentUser !== null && <NavLinks />}\r\n            {message && (\r\n              <Message msg={message} variant={messageVariant} id=\"msg\" />\r\n            )}\r\n            <Routes />\r\n          </>\r\n        )}\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(App);\r\n","import ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}